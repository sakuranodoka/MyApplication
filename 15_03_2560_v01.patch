Index: app/src/main/java/com/example/administrator/myapplication/FragmentTab.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/FragmentTab.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/FragmentTab.java	(revision )
@@ -0,0 +1,143 @@
+package com.example.administrator.myapplication;
+
+import android.app.TimePickerDialog;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+import android.widget.TimePicker;
+
+import com.squareup.otto.Bus;
+import com.squareup.otto.ThreadEnforcer;
+
+import org.w3c.dom.Text;
+
+/**
+ * Created by Administrator on 29/9/2559.
+ */
+public class FragmentTab extends Fragment {
+    @Override
+    public void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+    }
+
+    private TimePicker timePicker;
+
+    public static Bus bus;
+
+    ParallelDataOne parallelDataOne;
+    ParallelDataTwo parallelDataTwo;
+
+    String value;
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container,
+                             Bundle savedInstanceState) {
+        View v = LayoutInflater.from(getActivity()).inflate(R.layout.fragment_blank,
+                null);
+
+        bus = new Bus(ThreadEnforcer.MAIN);
+        bus.register(getContext());
+
+        //tv = (TextView) v.findViewById(R.id.tv);
+
+        value = getArguments().getString("key");
+
+        timePicker = (TimePicker) v.findViewById(R.id.timePicker3);
+
+        if(MapsActivity.hourStart == -1) {
+            parallelDataOne = new ParallelDataOne();
+            parallelDataOne.setMinute(timePicker.getCurrentMinute());
+            parallelDataOne.setHour(timePicker.getCurrentHour());
+            bus.post(parallelDataOne);
+        }
+
+        if(MapsActivity.hourEning == -1) {
+            parallelDataTwo = new ParallelDataTwo();
+            parallelDataTwo.setMinute(timePicker.getCurrentMinute());
+            parallelDataTwo.setHour(timePicker.getCurrentHour());
+            bus.post(parallelDataTwo);
+        }
+
+        if ((MapsActivity.hourStart != -1) && (MapsActivity.hourEning != -1)) {
+            switch (value) {
+                case "tab1":
+                    timePicker.setCurrentHour(MapsActivity.hourStart);
+                    timePicker.setCurrentMinute(MapsActivity.minuteStart);
+                    break;
+                case "tab2":
+                    timePicker.setCurrentHour(MapsActivity.hourEning);
+                    timePicker.setCurrentMinute(MapsActivity.minuteEnding);
+                    break;
+                default:
+                    break;
+            }
+        }
+
+        timePicker.setOnTimeChangedListener(
+                new TimePicker.OnTimeChangedListener() {
+
+                    @Override
+                    public void onTimeChanged(TimePicker view, int hourOfDay, int minute) {
+                        if (getArguments() != null) {
+                            //
+                            try {
+                                //tv.setText("Current Tab is: " + value);
+                                switch(value) {
+                                    case "tab1" :
+                                        parallelDataOne = new ParallelDataOne();
+                                        parallelDataOne.setMinute(minute);
+                                        parallelDataOne.setHour(hourOfDay);
+                                        // Send Otto
+                                        bus.post(parallelDataOne);
+
+                                        Log.i("vvvvvv-time", "start:" +MapsActivity.hourStart +"|"+ MapsActivity.minuteStart+" |stop:" +MapsActivity.hourEning+"|"+ MapsActivity.minuteEnding);
+                                        break;
+                                    case "tab2" :
+                                        parallelDataTwo = new ParallelDataTwo();
+                                        //ts.message = "Hello from the activity";
+                                        parallelDataTwo.setMinute(minute);
+                                        parallelDataTwo.setHour(hourOfDay);
+                                        bus.post(parallelDataTwo);
+
+                                        Log.i("vvvvvv-time", "start:" +MapsActivity.hourStart +"|"+ MapsActivity.minuteStart+" |stop:" +MapsActivity.hourEning+"|"+ MapsActivity.minuteEnding);
+                                        break;
+                                    default:break;
+                                }
+                            } catch (Exception e) {
+                                // TODO Auto-generated catch block
+                                e.printStackTrace();
+                            }
+                        }
+                    }
+                }
+        );
+
+        //TextView tv = (TextView) v.findViewById(R.id.text);
+        //tv.setText(this.getTag() + " Content");
+        return v;
+    }
+
+    @Override
+    public void onStop() {
+        super.onStop();
+        //Log.v("vvvvvv", "delete Bus");
+        bus.unregister(getContext());
+    }
+
+    @Override
+    public void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+    }
+
+    @Override
+    public void onActivityCreated(Bundle savedInstanceState) {
+        // TODO Auto-generated method stub
+        super.onActivityCreated(savedInstanceState);
+        if (savedInstanceState != null) {
+        }
+    }
+}
Index: app/src/main/java/retrofit/InterfaceListen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/retrofit/InterfaceListen.java	(revision )
+++ app/src/main/java/retrofit/InterfaceListen.java	(revision )
@@ -0,0 +1,14 @@
+package retrofit;
+
+import okhttp3.ResponseBody;
+import retrofit2.Retrofit;
+
+/**
+ * Created by Administrator on 18/11/2559.
+ */
+public interface InterfaceListen {
+    public void onResponse(Object data, Retrofit retrofit);
+    public void onBodyError(ResponseBody responseBodyError);
+    public void onBodyErrorIsNull();
+    public void onFailure(Throwable t);
+}
Index: app/src/main/java/seller/pojo/SellerBestSellerPOJO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/pojo/SellerBestSellerPOJO.java	(revision )
+++ app/src/main/java/seller/pojo/SellerBestSellerPOJO.java	(revision )
@@ -0,0 +1,90 @@
+package seller.pojo;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by Administrator on 18/11/2559.
+ */
+public class SellerBestSellerPOJO {
+    @SerializedName("data")
+    @Expose
+    private List<Data> data = new ArrayList<Data>();
+
+    /**
+     * @return The data
+     */
+    public List<Data> getData() {
+        return data;
+    }
+
+    /**
+     * @param data The data
+     */
+    public void setData(List<Data> data) {
+        this.data = data;
+    }
+
+    public class Data {
+
+        @SerializedName("collection")
+        @Expose
+        private String collection;
+        @SerializedName("net")
+        @Expose
+        private String net;
+        @SerializedName("lastSumNet")
+        @Expose
+        private String lastSumNet;
+        @SerializedName("bal")
+        @Expose
+        private String BAL;
+
+        /**
+         * @return The collection
+         */
+        public String getCollection() {
+            return collection;
+        }
+
+        /**
+         * @param collection The collection
+         */
+        public void setCollection(String collection) {
+            this.collection = collection;
+        }
+
+        /**
+         * @return The net
+         */
+        public String getNet() {
+            return net;
+        }
+
+        /**
+         * @param net The net
+         */
+        public void setNet(String net) {
+            this.net = net;
+        }
+
+        public String getBAL() {
+            return BAL;
+        }
+
+        public void setBAL(String BAL) {
+            this.BAL = BAL;
+        }
+
+        public String getLastSumNet() {
+            return lastSumNet;
+        }
+
+        public void setLastSumNet(String lastSumNet) {
+            this.lastSumNet = lastSumNet;
+        }
+    }
+}
Index: app/src/main/res/layout/layout_blank.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_blank.xml	(revision )
+++ app/src/main/res/layout/layout_blank.xml	(revision )
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/little_light_gray">
+
+    <FrameLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/blankFrameLayout">
+    </FrameLayout>
+
+</RelativeLayout>
Index: app/src/main/java/com/example/administrator/myapplication/search_adapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/search_adapter.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/search_adapter.java	(revision )
@@ -0,0 +1,7 @@
+package com.example.administrator.myapplication;
+
+/**
+ * Created by Administrator on 17/11/2559.
+ */
+public class search_adapter {
+}
Index: app/src/main/res/_A0_seller/layout/view_best_seller_temp.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/view_best_seller_temp.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/view_best_seller_temp.xml	(revision )
@@ -0,0 +1,140 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+
+    android:paddingRight="15dp"
+    android:paddingLeft="@dimen/round_padding"
+    android:paddingBottom="@dimen/round_padding"
+    android:padding="@dimen/round_padding"
+    android:layout_marginTop="@dimen/round_padding"
+
+    android:background="@color/angel_white">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal">
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:gravity="bottom"
+            android:layout_marginBottom="@dimen/round_padding"
+            android:textSize="25sp"
+            android:textColor="@color/space_gray"
+            android:text="อันดับที่ " />
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+            android:gravity="center"
+
+            android:paddingLeft="12dp"
+
+            android:id="@+id/sellRanking"
+
+            android:textSize="48sp"
+
+            android:textColor="@color/dark_honest_green"
+            android:text="7" />
+
+        <!--2-->
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="vertical"
+            android:gravity="center_vertical">
+
+            <!--2.1-->
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="right"
+
+                android:text="MES1022"
+                android:id="@+id/collectionItemCode"
+                android:textColor="@color/dark_blue"
+                android:textSize="36sp"/>
+        </LinearLayout>
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal">
+
+            <ImageView
+                android:layout_width="36dp"
+                android:layout_height="36dp"
+                android:src="@drawable/ic_more_horiz_gray_24dp" />
+
+            <!--<LinearLayout-->
+            <!--android:layout_width="wrap_content"-->
+            <!--android:layout_height="match_parent">-->
+
+            <!--<TextView-->
+            <!--android:layout_width="wrap_content"-->
+            <!--android:layout_height="wrap_content"-->
+
+            <!--android:textStyle="bold"-->
+            <!--android:text="BAL : "-->
+            <!--android:textColor="@color/supreme_blue"-->
+            <!--android:textSize="18sp"/>-->
+
+            <!--<TextView-->
+            <!--android:layout_width="wrap_content"-->
+            <!--android:layout_height="wrap_content"-->
+
+            <!--android:id="@+id/collection_bal"-->
+
+            <!--android:text="929"-->
+            <!--android:textColor="@color/space_gray"-->
+            <!--android:textSize="18sp"/>-->
+            <!--</LinearLayout>-->
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:gravity="right|center">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+
+                    android:textStyle="bold"
+                    android:text="ยอดขาย "
+                    android:textColor="@color/dark_honest_green"
+                    android:textSize="18sp"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+
+                    android:id="@+id/collectionNet"
+
+                    android:text="336,330"
+                    android:textColor="@color/space_gray"
+                    android:textSize="18sp"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+
+                    android:textStyle="bold"
+                    android:text=" ฿."
+                    android:textColor="@color/dark_honest_green"
+                    android:textSize="18sp"/>
+
+            </LinearLayout>
+
+        </LinearLayout>
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/location/pojo/PositionPOJO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/location/pojo/PositionPOJO.java	(revision )
+++ app/src/main/java/location/pojo/PositionPOJO.java	(revision )
@@ -0,0 +1,8 @@
+package location.pojo;
+
+/**
+ * Created by Administrator on 22/2/2560.
+ */
+
+public class PositionPOJO {
+}
Index: app/src/main/res/_A0_location/layout/activity_location.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_location/layout/activity_location.xml	(revision )
+++ app/src/main/res/_A0_location/layout/activity_location.xml	(revision )
@@ -0,0 +1,65 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+
+    android:orientation="vertical"
+    android:background="@color/little_light_gray"
+    tools:context="com.example.administrator.myapplication.LocationActivity">
+
+    <!--<LinearLayout-->
+        <!--android:layout_marginLeft="6dp"-->
+        <!--android:layout_marginRight="6dp"-->
+        <!--android:layout_marginTop="6dp"-->
+
+        <!--android:orientation="horizontal"-->
+
+        <!--android:layout_width="match_parent"-->
+        <!--android:layout_height="wrap_content"-->
+        <!--android:background="@color/honest_green"-->
+        <!--android:padding="@dimen/round_padding">-->
+
+        <!--<ImageView-->
+            <!--android:layout_width="36dp"-->
+            <!--android:layout_height="36dp"-->
+            <!--android:layout_marginEnd="15dp"-->
+            <!--android:src="@drawable/ic_arrow_back_white_24dp"-->
+            <!--android:layout_gravity="left|center"/>-->
+
+
+        <!--<autocomplete.InstantAutocomplete-->
+            <!--android:layout_width="match_parent"-->
+            <!--android:layout_height="42dp"-->
+            <!--android:layout_marginRight="51dp"-->
+
+            <!--android:id="@+id/address_search_tv"-->
+
+            <!--android:background="@color/dark_honest_green"-->
+            <!--android:drawableEnd="@drawable/ic_arrow_drop_down_black"-->
+            <!--android:hint="ค้นหาหมายเลขโทรศัพท์"-->
+            <!--android:gravity="center"-->
+            <!--android:padding="@dimen/round_padding" />-->
+
+        <!--<ImageView-->
+            <!--android:layout_width="36dp"-->
+            <!--android:layout_height="36dp"-->
+
+            <!--android:id="@+id/map_option"-->
+
+            <!--android:layout_marginLeft="-40dp"-->
+            <!--android:layout_gravity="center"-->
+            <!--android:src="@drawable/ic_date_range_rounded" />-->
+
+    <!--</LinearLayout>-->
+
+    <!--<fragment-->
+        <!--android:layout_margin="6dp"-->
+
+        <!--android:id="@+id/map"-->
+        <!--android:name="com.google.android.gms.maps.SupportMapFragment"-->
+        <!--android:layout_width="match_parent"-->
+        <!--android:layout_height="match_parent" />-->
+
+</LinearLayout>
Index: app/src/main/java/seller/CustomLinearLayoutManager.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/CustomLinearLayoutManager.java	(revision )
+++ app/src/main/java/seller/CustomLinearLayoutManager.java	(revision )
@@ -0,0 +1,20 @@
+package seller;
+
+import android.content.Context;
+import android.support.v7.widget.LinearLayoutManager;
+
+/**
+ * Created by Administrator on 15/12/2559.
+ */
+public class CustomLinearLayoutManager extends LinearLayoutManager {
+    public CustomLinearLayoutManager(Context context, int orientation, boolean reverseLayout) {
+        super(context, orientation, reverseLayout);
+
+    }
+
+    // it will always pass false to RecyclerView when calling "canScrollVertically()" method.
+    @Override
+    public boolean canScrollVertically() {
+        return false;
+    }
+}
\ No newline at end of file
Index: app/src/main/res/_A0_seller/layout/view_best_seller.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/view_best_seller.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/view_best_seller.xml	(revision )
@@ -0,0 +1,134 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+
+    android:paddingTop="@dimen/round_padding"
+    android:paddingStart="@dimen/round_padding"
+    android:paddingEnd="@dimen/round_padding"
+    android:paddingBottom="@dimen/slice_align"
+    android:layout_marginTop="@dimen/round_padding"
+
+    android:background="@color/angel_white">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal">
+
+        <!-- 1 -->
+        <ImageView
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:src="@drawable/ic_more_horiz_gray_24dp" />
+
+        <!--2-->
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="vertical"
+            android:gravity="center_vertical">
+
+            <!--2.1-->
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:layout_marginEnd="@dimen/slice_align"
+
+                android:gravity="right"
+
+                android:text="MES1022"
+                android:id="@+id/collectionItemCode"
+                android:textColor="@color/dark_blue"
+                android:textSize="30sp"/>
+        </LinearLayout>
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="horizontal"
+        android:layout_marginStart="@dimen/round_padding"
+        android:layout_marginEnd="@dimen/round_padding">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="horizontal">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="match_parent"
+                android:gravity="center_vertical|left">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+
+                    android:gravity="center_vertical"
+
+                    android:text="ยอดขาย "
+                    android:textColor="@color/dark_honest_green"
+                    android:textSize="15sp"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+
+                    android:gravity="center_vertical"
+
+                    android:id="@+id/collectionNet"
+
+                    android:text="100,330,009"
+                    android:textColor="@color/space_gray"
+                    android:textSize="15sp"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+
+                    android:gravity="center_vertical"
+
+                    android:text=" ฿."
+                    android:textColor="@color/dark_honest_green"
+                    android:textSize="15sp"/>
+
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:orientation="horizontal"
+                android:gravity="right">
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+
+                    android:gravity="center"
+
+                    android:textSize="20sp"
+                    android:textColor="@color/sky_light_blue"
+                    android:text="อันดับที่ " />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+                    android:gravity="center"
+
+                    android:paddingLeft="10dp"
+
+                    android:id="@+id/sellRanking"
+
+                    android:textSize="20sp"
+
+                    android:textColor="@color/dark_honest_green"
+                    android:text="7" />
+            </LinearLayout>
+
+        </LinearLayout>
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/view_search_paging.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/view_search_paging.xml	(revision )
+++ app/src/main/res/layout/view_search_paging.xml	(revision )
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/supreme_blue"
+    android:paddingTop="4dp"
+    android:paddingStart="@dimen/round_padding"
+    android:paddingEnd="@dimen/round_padding">
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:paddingStart="@dimen/round_padding"
+        android:paddingEnd="@dimen/round_padding"
+        android:paddingTop="10dp"
+        android:paddingBottom="10dp"
+
+        android:gravity="left|center_vertical"
+
+        android:textSize="15sp"
+        android:textColor="@color/little_light_gray"
+        android:background="@color/dark_blue"
+        android:id="@+id/searchTV"
+        android:text="10111011 : Testing" />
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/_A0_seller/layout/view_bar_chart.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/view_bar_chart.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/view_bar_chart.xml	(revision )
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+    <LinearLayout
+        xmlns:android="http://schemas.android.com/apk/res/android"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="vertical">
+
+        <LinearLayout
+            android:layout_marginTop="@dimen/slice_align"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:id="@+id/barChartLegend"
+            android:gravity="center"
+            android:orientation="horizontal"></LinearLayout>
+
+        <com.github.mikephil.charting.charts.HorizontalBarChart
+            android:id="@+id/barChart"
+            android:layout_width="match_parent"
+            android:layout_height="0dp"
+            android:layout_weight="1"
+
+            android:layout_alignParentTop="true"
+            android:layout_centerHorizontal="true"
+
+            android:layout_marginTop="@dimen/round_padding" />
+
+    <RelativeLayout
+        android:layout_marginBottom="@dimen/slice_align"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+
+        android:visibility="gone"
+
+        android:id="@+id/barChartScript">
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+
+            android:gravity="right|center_vertical"
+
+            android:paddingEnd="@dimen/round_padding"
+
+            android:text="ข้อมูลตั้งแต่ 1 ก.ค. ถึง 1 ส.ค. พ.ศ.2559"
+            android:textColor="@color/stone_gray"/>
+
+    </RelativeLayout>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/_A0_seller/layout/view_storage_undefined_day_cover.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/view_storage_undefined_day_cover.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/view_storage_undefined_day_cover.xml	(revision )
@@ -0,0 +1,203 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v7.widget.CardView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:card_view="http://schemas.android.com/apk/res-auto"
+
+    card_view:cardPreventCornerOverlap="false"
+    card_view:cardBackgroundColor="@android:color/transparent"
+
+    android:paddingBottom="@dimen/slice_align"
+
+    android:layout_marginStart="2dp"
+    android:layout_marginEnd="2dp"
+
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+<LinearLayout
+
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+
+    android:paddingTop="@dimen/round_padding"
+    android:paddingBottom="@dimen/round_padding"
+    android:paddingStart="@dimen/slice_align"
+    android:paddingEnd="@dimen/slice_align"
+
+    android:background="@color/angel_white"
+    android:orientation="vertical">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal">
+
+        <TextView
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_marginStart="@dimen/round_padding"
+
+            android:gravity="left"
+
+            android:id="@+id/sku"
+
+            android:text="MES102BGT6"
+
+            android:textColor="@color/supreme_blue"
+            android:textSize="23sp"/>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+
+            android:orientation="horizontal"
+            android:gravity="right">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+
+                android:visibility="gone"
+
+                android:id="@+id/sell_out_bar"
+
+                android:layout_gravity="center_vertical"
+
+                android:layout_marginEnd="@dimen/slice_align">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+
+                    android:text="ยอดขาย"
+                    android:textColor="@color/lemon_resonance_structure"
+                    android:textSize="@dimen/font_text_view"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+
+                    android:layout_marginStart="@dimen/round_padding"
+                    android:layout_marginEnd="@dimen/round_padding"
+
+                    android:id="@+id/XBar"
+
+                    android:text="35"
+                    android:textColor="@color/stone_gray"
+                    android:textSize="@dimen/font_text_view"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+
+                    android:text="@string/currency_piece_th"
+                    android:textColor="@color/lemon_resonance_structure"
+                    android:textSize="@dimen/font_text_view"/>
+            </LinearLayout>
+
+            <Button
+                android:layout_width="36dp"
+                android:layout_height="36dp"
+                android:layout_gravity="center"
+
+                android:background="@drawable/ic_chevron_right_gray_24dp"
+
+                android:id="@+id/more_info"
+                style="@style/Base.Widget.AppCompat.Button.Borderless" />
+        </LinearLayout>
+    </LinearLayout>
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="horizontal"
+
+        android:paddingTop="@dimen/slice_align"
+        android:paddingStart="@dimen/round_padding"
+
+        android:layout_marginEnd="@dimen/slice_align">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="horizontal">
+
+            <LinearLayout
+                android:layout_width="wrap_content"
+                android:layout_height="match_parent"
+                android:gravity="center_vertical|left">
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+
+                    android:text="สต็อก"
+                    android:textColor="@color/lemon_resonance_structure"
+                    android:textSize="@dimen/font_text_view"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+
+                    android:layout_marginStart="@dimen/round_padding"
+                    android:layout_marginEnd="@dimen/round_padding"
+
+                    android:id="@+id/storage"
+
+                    android:text="35"
+                    android:textColor="@color/stone_gray"
+                    android:textSize="@dimen/font_text_view"/>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+
+                    android:id="@+id/unit"
+
+                    android:text="@string/currency_piece_th"
+                    android:textColor="@color/lemon_resonance_structure"
+                    android:textSize="@dimen/font_text_view"/>
+
+            </LinearLayout>
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+
+                android:orientation="horizontal"
+                android:gravity="right">
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+
+                    android:textSize="@dimen/font_text_view"
+                    android:textColor="@color/rising_green"
+                    android:text="Day Cover " />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+
+                    android:layout_marginStart="@dimen/round_padding"
+                    android:layout_marginEnd="@dimen/round_padding"
+
+                    android:id="@+id/day_cover"
+
+                    android:textSize="@dimen/font_text_view"
+
+                    android:textColor="@color/stone_gray"
+                    android:text="999,999" />
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent"
+
+                    android:id="@+id/unit_day_cover"
+
+                    android:text="@string/currency_date_th"
+                    android:textColor="@color/lemon_resonance_structure"
+                    android:textSize="@dimen/font_text_view"/>
+            </LinearLayout>
+        </LinearLayout>
+    </LinearLayout>
+</LinearLayout>
+</android.support.v7.widget.CardView>
\ No newline at end of file
Index: app/src/main/java/user/user/item/ItemSection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/user/user/item/ItemSection.java	(revision )
+++ app/src/main/java/user/user/item/ItemSection.java	(revision )
@@ -0,0 +1,32 @@
+package user.user.item;
+
+import user.UserBaseItem;
+
+/**
+ * Created by Administrator on 15/11/2559.
+ */
+public class ItemSection extends UserBaseItem {
+    String section;
+
+    int color;
+
+    public ItemSection() {
+        super.setViewType(0);
+    }
+
+    public String getSection() {
+        return section;
+    }
+
+    public void setSection(String section) {
+        this.section = section;
+    }
+
+    public int getColor() {
+        return color;
+    }
+
+    public void setColor(int color) {
+        this.color = color;
+    }
+}
Index: app/src/main/java/AppBar/BarType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/AppBar/BarType.java	(revision )
+++ app/src/main/java/AppBar/BarType.java	(revision )
@@ -0,0 +1,10 @@
+package AppBar;
+
+/**
+ * Created by Administrator on 12/1/2560.
+ */
+
+public class BarType {
+    public static final int TYPE_SHOP_SEARCH = 12;
+    public static final int TYPE_APPLICATION_NAME = 1;
+}
Index: app/src/main/java/com/example/administrator/myapplication/SearchUserData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/SearchUserData.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/SearchUserData.java	(revision )
@@ -0,0 +1,20 @@
+package com.example.administrator.myapplication;
+
+/**
+ * Created by Administrator on 18/10/2559.
+ */
+public class SearchUserData {
+    private String usr_mac_address = null;
+
+    public SearchUserData(String usr_mac_address) {
+        this.usr_mac_address = usr_mac_address;
+    }
+
+    public String getUsr_mac_address() {
+        return usr_mac_address;
+    }
+
+    public void setUsr_mac_address(String usr_mac_address) {
+        this.usr_mac_address = usr_mac_address;
+    }
+}
Index: app/src/main/res/layout/view_section.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/view_section.xml	(revision )
+++ app/src/main/res/layout/view_section.xml	(revision )
@@ -0,0 +1,40 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="horizontal"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:paddingTop="7dp"
+    android:weightSum="1">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+
+        android:paddingTop="18dp"
+        android:paddingBottom="18dp"
+        android:paddingLeft="10dp"
+
+        android:layout_gravity="center"
+        android:gravity="left|center"
+        android:background="@color/natural_green"
+        android:id="@+id/sectionBar">
+
+        <!--<ImageView-->
+            <!--android:layout_width="wrap_content"-->
+            <!--android:layout_height="wrap_content"-->
+            <!--android:src="@drawable/ic_view_headline_white_24dp"-->
+            <!--android:visibility="gone"/>-->
+
+        <TextView
+            android:layout_marginLeft="@dimen/activity_horizontal_margin"
+            android:textColor="@color/angel_white"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:id="@+id/sectionTextView"
+            android:text="Testing"
+            android:textStyle="bold"
+            android:textSize="25sp"/>
+
+    </LinearLayout>
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/location/LocationDialogRangeTime.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/location/LocationDialogRangeTime.java	(revision )
+++ app/src/main/java/location/LocationDialogRangeTime.java	(revision )
@@ -0,0 +1,88 @@
+package location;
+
+import android.app.Activity;
+import android.app.Dialog;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.DialogFragment;
+import android.support.v4.app.FragmentTabHost;
+import android.view.Gravity;
+import android.view.View;
+import android.view.Window;
+import android.view.WindowManager;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.FragmentTab;
+import com.example.administrator.myapplication.R;
+
+/**
+ * Created by Administrator on 6/12/2559.
+ */
+public class LocationDialogRangeTime extends DialogFragment {
+
+    private Activity activity;
+
+    private Dialog dialog;
+
+    private FragmentTabHost mTabHost;
+
+    public void showDialog(final Activity activity) {
+
+        this.activity = activity;
+
+        dialog = new Dialog(activity);
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
+        dialog.setCancelable(false);
+        dialog.setContentView(R.layout.dialog_timepick);
+
+//        ImageView dialogButton = (ImageView) dialog.findViewById(R.id.dialog_close);
+//        dialogButton.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                dialog.dismiss();
+//            }
+//        });
+
+        WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
+        lp.copyFrom(dialog.getWindow().getAttributes());
+        lp.width = WindowManager.LayoutParams.MATCH_PARENT;
+        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
+        lp.gravity = Gravity.CENTER;
+
+        dialog.getWindow().setAttributes(lp);
+
+//        TextView dialogHeader = (TextView) dialog.findViewById(R.id.dialog_header);
+//        dialogHeader.setText("ระบุเวลาสำหรับแสดงผล");
+
+        mTabHost = (FragmentTabHost) activity.findViewById(R.id.tabs);
+        mTabHost.setup(activity, getFragmentManager(), R.id.realtabcontent);
+
+        Bundle b = new Bundle();
+        b.putString("key", "tab1");
+        mTabHost.addTab(mTabHost.newTabSpec("tab1").setIndicator("Start"), FragmentTab.class, b);
+
+        b = new Bundle();
+        b.putString("key", "tab2");
+        mTabHost.addTab(mTabHost.newTabSpec("tab2").setIndicator("Ending"), FragmentTab.class, b);
+
+        Button btnCancel = (Button) activity.findViewById(R.id.cancel);
+        btnCancel.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+            }
+        });
+
+        Button btnDone = (Button) activity.findViewById(R.id.done);
+
+        dialog.show();
+    }
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        setRetainInstance(true);
+    }
+}
\ No newline at end of file
Index: app/src/main/java/seller/graph/ChartCandidateType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/graph/ChartCandidateType.java	(revision )
+++ app/src/main/java/seller/graph/ChartCandidateType.java	(revision )
@@ -0,0 +1,13 @@
+package seller.graph;
+
+/**
+ * Created by Administrator on 6/1/2560.
+ */
+public class ChartCandidateType {
+    public static final int TYPE_30_CANDIDATE = 30;
+    public static final int TYPE_60_CANDIDATE = 60;
+    public static final int TYPE_180_CANDIDATE = 180;
+
+    public static final int TYPE_BEST_SELLER_TOP_10 = 1;
+    public static final int TYPE_BEST_SELLER_LAST_10 = 2;
+}
Index: app/src/main/java/seller/graph/MyValueFormatter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/graph/MyValueFormatter.java	(revision )
+++ app/src/main/java/seller/graph/MyValueFormatter.java	(revision )
@@ -0,0 +1,38 @@
+package seller.graph;
+
+import android.util.Log;
+
+import com.github.mikephil.charting.components.AxisBase;
+import com.github.mikephil.charting.data.Entry;
+import com.github.mikephil.charting.formatter.AxisValueFormatter;
+import com.github.mikephil.charting.formatter.ValueFormatter;
+import com.github.mikephil.charting.utils.ViewPortHandler;
+
+
+import java.text.DecimalFormat;
+import java.text.NumberFormat;
+import java.util.Locale;
+
+import seller.SellerData;
+
+/**
+ * Created by Administrator on 21/12/2559.
+ */
+public class MyValueFormatter implements ValueFormatter {
+
+    private DecimalFormat mFormat;
+
+    public MyValueFormatter() {
+    }
+
+    @Override
+    public String getFormattedValue(float value, Entry entry, int dataSetIndex, ViewPortHandler viewPortHandler) {
+        if(value >= 0.00 ) {
+            String finalText = NumberFormat.getNumberInstance(Locale.US).format((int) value);
+
+            return finalText + SellerData.graphUnit;
+        } else {
+            return "";
+        }
+    }
+}
Index: app/src/main/java/AppBar/InterfaceOnAppbar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/AppBar/InterfaceOnAppbar.java	(revision )
+++ app/src/main/java/AppBar/InterfaceOnAppbar.java	(revision )
@@ -0,0 +1,7 @@
+package AppBar;
+
+/**
+ * Created by Administrator on 12/1/2560.
+ */
+public interface InterfaceOnAppbar {
+}
Index: app/src/main/java/URL/ServiceURL.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/URL/ServiceURL.java	(revision )
+++ app/src/main/java/URL/ServiceURL.java	(revision )
@@ -0,0 +1,11 @@
+package URL;
+
+/**
+ * Created by Administrator on 18/11/2559.
+ */
+public class ServiceURL {
+    public static final String SERVER_BASE_URL = "http://angsila.informatics.buu.ac.th";
+
+    public static final String PROCUCT_BASE_URL = "http://shopinfo.wacoal.co.th";
+
+}
Index: app/src/main/java/seller/SellerGraphType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/SellerGraphType.java	(revision )
+++ app/src/main/java/seller/SellerGraphType.java	(revision )
@@ -0,0 +1,12 @@
+package seller;
+
+/**
+ * Created by Administrator on 30/11/2559.
+ */
+public class SellerGraphType {
+    public static final int TYPE_NORMAL = 0;
+
+    public static final int TYPE_GRAPH_LINE = 1;
+    public static final int TYPE_GRAPH_BAR = 2;
+    public static final int TYPE_GRAPH_PIE = 12;
+}
Index: app/src/main/java/seller/InterfaceOnItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/InterfaceOnItem.java	(revision )
+++ app/src/main/java/seller/InterfaceOnItem.java	(revision )
@@ -0,0 +1,8 @@
+package seller;
+
+/**
+ * Created by Administrator on 22/11/2559.
+ */
+public interface InterfaceOnItem {
+    public void onItemClickListener(String collectionCode);
+}
Index: app/src/main/java/seller/titlebar/SellerTitleDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/titlebar/SellerTitleDAO.java	(revision )
+++ app/src/main/java/seller/titlebar/SellerTitleDAO.java	(revision )
@@ -0,0 +1,35 @@
+package seller.titlebar;
+
+import com.google.gson.annotations.SerializedName;
+
+/**
+ * Created by Administrator on 17/11/2559.
+ */
+public class SellerTitleDAO {
+    @SerializedName("title")
+    private String title;
+
+    @SerializedName("id")
+    private int id;
+
+    public String getTitle() {
+        return title;
+    }
+
+    public void setTitle(String title) {
+        this.title = title;
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    @Override
+    public String toString() {
+        return title;
+    }
+}
Index: app/src/main/java/com/example/administrator/myapplication/SearchUserDialogFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/SearchUserDialogFragment.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/SearchUserDialogFragment.java	(revision )
@@ -0,0 +1,113 @@
+package com.example.administrator.myapplication;
+
+import android.annotation.SuppressLint;
+import android.app.Dialog;
+import android.content.Context;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.DialogFragment;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+import android.widget.Spinner;
+
+import com.squareup.otto.Bus;
+import com.squareup.otto.ThreadEnforcer;
+
+/**
+ * Created by Administrator on 17/10/2559.
+ */
+public class SearchUserDialogFragment extends DialogFragment {
+
+    static SearchUserDialogFragment newInstance() {
+        return new SearchUserDialogFragment();
+    }
+
+    public SearchUserDialogFragment(){}
+
+    private String[] dataSet = null;
+
+    private Spinner spinner = null;
+
+    private View v = null;
+
+    @SuppressLint("ValidFragment")
+    public SearchUserDialogFragment(String[] dataSet) {
+        this.dataSet = dataSet;
+
+        //bus = new Bus(ThreadEnforcer.MAIN);
+        //bus.register(this);
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        BusProvider.getInstance().register(this);
+    }
+
+    @Override
+    public void onPause() {
+        super.onPause();
+        BusProvider.getInstance().unregister(this);
+    }
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setRetainInstance(true);
+    }
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+        v = inflater.inflate(R.layout.dialog_search_user, container, false);
+        if(this.dataSet != null) {
+
+            spinner = (Spinner) v.findViewById(R.id.spinnerSearchUser);
+            ArrayAdapter<String> spinnerArrayAdapter = new ArrayAdapter<String>(getContext(), android.R.layout.simple_spinner_dropdown_item, this.dataSet); //selected item will look like a spinner set from XML
+            spinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+            spinner.setAdapter(spinnerArrayAdapter);
+        }
+
+        getDialog().setTitle("กรุณาเลือกผู้ใช้งาน");
+
+        Button doneSearchUserBtn = (Button) v.findViewById(R.id.doneSearchUser);
+        doneSearchUserBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View btnView) {
+                spinner = (Spinner) v.findViewById(R.id.spinnerSearchUser);
+                Log.v("vvvvvv", "spinner:value "+spinner.getSelectedItem().toString());
+
+                SearchUserData searchUserData = new SearchUserData( spinner.getSelectedItem().toString() );
+                //bus.post(searchUserData);
+                //BusProvider busProvider = new BusProvider();
+                //BusProvider.getInstance().register(this);//
+                BusProvider.getInstance().post(searchUserData);
+                getDialog().dismiss();
+            }
+        });
+
+        Button cancelSearchUserBtn = (Button) v.findViewById(R.id.cancelSearchUser);
+        cancelSearchUserBtn.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View btnView) {
+                getDialog().cancel();
+            }
+        });
+
+        return v;
+    }
+
+    @Override
+    public void onDestroyView() {
+        Dialog dialog = getDialog();
+
+        if ((dialog != null) && getRetainInstance())
+            dialog.setDismissMessage(null);
+
+        super.onDestroyView();
+    }
+}
Index: app/src/main/java/seller/item/SellerBaseItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/item/SellerBaseItem.java	(revision )
+++ app/src/main/java/seller/item/SellerBaseItem.java	(revision )
@@ -0,0 +1,20 @@
+package seller.item;
+
+/**
+ * Created by Administrator on 17/11/2559.
+ */
+public class SellerBaseItem {
+    public int type;
+
+    public int getType() {
+        return type;
+    }
+
+    public void setType(int type) {
+        this.type = type;
+    }
+
+    public SellerBaseItem(int type) {
+        this.type = type;
+    }
+}
Index: app/src/main/java/seller/services/prototype/InterfaceBestSeller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/services/prototype/InterfaceBestSeller.java	(revision )
+++ app/src/main/java/seller/services/prototype/InterfaceBestSeller.java	(revision )
@@ -0,0 +1,36 @@
+package seller.services.prototype;
+
+import retrofit2.http.GET;
+import retrofit2.http.Header;
+import retrofit2.http.POST;
+import retrofit2.http.Query;
+import rx.Observable;
+import seller.pojo.SellerBestSellerPOJO;
+import seller.pojo.SellerCollectionPOJO;
+
+/**
+ * Created by Administrator on 18/11/2559.
+ */
+public interface InterfaceBestSeller {
+
+    //@GET("/~55160509/android/SimpleOrder/getbestseller.php")
+    @GET("/Application/getBestSeller.php")
+    Observable<SellerBestSellerPOJO> getBestSeller (
+            @Query("shop_code") String shopCode
+    );
+
+    @GET("/Application/getBestSellerTwice.php")
+    Observable<SellerBestSellerPOJO> getBestSellerByItemCode (
+            @Query("shop_code") String shopCode,
+            @Query("itemcode") String itemCode,
+            @Query("dataSet") int dataSet
+    );
+
+    @GET("/Application/getBestSellerTwice.php")
+    Observable<SellerBestSellerPOJO> getBestSellerTwice (
+            @Query("shop_code") String shopCode,
+            @Query("date_range") int dateRange,
+            @Query("optional") int optional
+    );
+
+}
Index: app/src/main/java/AppBar/ApplicationBar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/AppBar/ApplicationBar.java	(revision )
+++ app/src/main/java/AppBar/ApplicationBar.java	(revision )
@@ -0,0 +1,165 @@
+package AppBar;
+
+import android.os.Build;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.design.widget.FloatingActionButton;
+import android.support.design.widget.NavigationView;
+import android.support.v4.content.ContextCompat;
+import android.support.v4.view.GravityCompat;
+import android.support.v4.view.ViewCompat;
+import android.support.v4.widget.DrawerLayout;
+import android.support.v7.app.ActionBarDrawerToggle;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.view.MenuItem;
+import android.view.View;
+import android.view.animation.OvershootInterpolator;
+import android.widget.Button;
+import android.widget.LinearLayout;
+import android.widget.RelativeLayout;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.R;
+
+/**
+ * Created by Administrator on 12/1/2560.
+ */
+
+public class ApplicationBar implements NavigationView.OnNavigationItemSelectedListener {
+
+    public static final int APPLICATION_APP_MENU_BAR = 201;
+    public static final int APPLICATION_APP_BACK_PRESSED = 202;
+
+    public static final int APPLICATION_SHOP_BACK_PRESS = 902;
+
+    private AppCompatActivity activity;
+
+    private int type;
+
+    private FABController _FAB_instance;
+
+    public ApplicationBar(AppCompatActivity activity, int type) {
+        this.activity = activity;
+        this.type = type;
+
+        this._FAB_instance = null;
+    }
+
+    public void setAppName(String appName) {
+        setNavigatorMenu();
+
+        RelativeLayout appNameBar = (RelativeLayout) activity.findViewById(R.id.appNameBar);
+        appNameBar.setVisibility(View.VISIBLE);
+
+        TextView textAppName = (TextView) activity.findViewById(R.id.textAppName);
+
+//        RelativeLayout.LayoutParams params = new RelativeLayout.LayoutParams(RelativeLayout.LayoutParams.WRAP_CONTENT, RelativeLayout.LayoutParams.WRAP_CONTENT);
+//        params.setMargins(-1*R.dimen.double_round , 0 , 0 ,0);
+//
+//        textAppName.setLayoutParams(params);
+        textAppName.setText(appName);
+    }
+
+    public void setAppNameWithBackPressed(String appName) {
+        setStateBackPressed();
+
+        RelativeLayout appNameBar = (RelativeLayout) activity.findViewById(R.id.appNameBar);
+        appNameBar.setVisibility(View.VISIBLE);
+
+        TextView textAppName = (TextView) activity.findViewById(R.id.textAppName);
+        textAppName.setText(appName);
+    }
+
+    public void setShopBar() {
+        setStateBackPressed();
+
+        RelativeLayout shopSearchBar = (RelativeLayout) activity.findViewById(R.id.shopSearchBar);
+        shopSearchBar.setVisibility(View.VISIBLE);
+    }
+
+    // กำหนดว่าปุ่มนี้กดแล้วต้องกลับเท่านั้น
+    private void setStateBackPressed() {
+        if(activity != null) {
+            Button backPressedState = (Button) activity.findViewById(R.id.backPressedState);
+            backPressedState.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    activity.finish();
+                }
+            });
+        }
+    }
+
+    @NonNull
+    @Nullable
+    private void setNavigatorMenu() {
+        if(activity != null) {
+
+            LinearLayout frontOptionLayout = (LinearLayout) activity.findViewById(R.id.frontOptionLayout);
+            frontOptionLayout.setVisibility(View.GONE);
+
+            Toolbar toolbar = (Toolbar) activity.findViewById(R.id.toolbar);
+
+            DrawerLayout drawer = (DrawerLayout) activity.findViewById(R.id.drawer_layout);
+            ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
+                    activity, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
+
+            drawer.setDrawerListener(toggle);
+            toggle.syncState();
+
+            NavigationView navigationView = (NavigationView) activity.findViewById(R.id.nav_view);
+            navigationView.setNavigationItemSelectedListener(this);
+        }
+    }
+
+    // Floating Action Button ...
+    public void createFABInstance() {this._FAB_instance = new FABController();}
+    public FABController getFABInstance() { return this._FAB_instance!=null? this._FAB_instance:null; }
+    public class FABController {
+        public void setFABDrawable(int drawable) {
+            if(activity != null) {
+                FloatingActionButton fab = (FloatingActionButton) activity.findViewById(R.id.floatingActionButton);
+
+                if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.LOLLIPOP) {
+                    fab.setImageDrawable(activity.getResources().getDrawable(drawable, activity.getTheme()));
+                } else {
+                    fab.setImageDrawable(activity.getResources().getDrawable(drawable));
+                }
+            }
+        }
+
+        public void turnOnNavigatorMenu() {
+            if(activity != null) {
+                final FloatingActionButton fab = (FloatingActionButton) activity.findViewById(R.id.floatingActionButton);
+
+                fab.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        DrawerLayout drawer = (DrawerLayout) activity.findViewById(R.id.drawer_layout);
+                        drawer.openDrawer(GravityCompat.END);
+                    }
+                });
+            }
+        }
+
+        public void setToggle() {
+            if(activity != null) {
+                final FloatingActionButton fab = (FloatingActionButton) activity.findViewById(R.id.floatingActionButton);
+
+                if(fab.getVisibility() == View.VISIBLE) {
+                    fab.setVisibility(View.GONE);
+                } else {
+                    fab.setVisibility(View.VISIBLE);
+                }
+            }
+        }
+    }
+
+    @Override
+    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+        DrawerLayout drawer = (DrawerLayout) activity.findViewById(R.id.drawer_layout);
+        drawer.closeDrawer(GravityCompat.END);
+        return true;
+    }
+}
Index: app/src/main/java/invoice/ServiceInvoice.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/invoice/ServiceInvoice.java	(revision )
+++ app/src/main/java/invoice/ServiceInvoice.java	(revision )
@@ -0,0 +1,139 @@
+package invoice;
+
+import android.os.Bundle;
+import android.os.Debug;
+import android.provider.Settings;
+import android.util.Log;
+
+import com.google.gson.Gson;
+import com.google.gson.GsonBuilder;
+import com.google.gson.JsonArray;
+import com.google.gson.JsonObject;
+import com.google.gson.JsonParser;
+
+import org.json.JSONArray;
+import org.json.JSONObject;
+import org.parceler.Parcels;
+
+import java.io.IOException;
+import java.security.Security;
+import java.util.List;
+import java.util.concurrent.TimeUnit;
+
+import URL.ServiceURL;
+import invoice.item.ItemInvoicePreview;
+import invoice.item.ParcelInvoice;
+import log.LogIndentify;
+import okhttp3.MediaType;
+import okhttp3.OkHttpClient;
+import okhttp3.RequestBody;
+import okio.BufferedSink;
+import retrofit.InterfaceListen;
+import retrofit2.Retrofit;
+import retrofit2.adapter.rxjava.RxJavaCallAdapterFactory;
+import retrofit2.converter.gson.GsonConverterFactory;
+import rx.Observable;
+import rx.Observer;
+import rx.android.schedulers.AndroidSchedulers;
+import rx.schedulers.Schedulers;
+import seller.SellerData;
+import seller.TypeSellerReport;
+import seller.pojo.SellerBestSellerMonthToDatePOJO;
+import seller.pojo.SellerBestSellerPOJO;
+import seller.pojo.SellerCollectionPOJO;
+import seller.pojo.SellerStockKeeperPOJO;
+import seller.pojo.SellerStorageDateCoverPOJO;
+import seller.services.prototype.InterfaceBestSeller;
+import seller.services.prototype.InterfaceBestSellerMonthToDate;
+import seller.services.prototype.InterfaceCollection;
+import seller.services.prototype.InterfaceStorageDateCover;
+
+/**
+ * Created by Administrator on 1/3/2560.
+ */
+
+public class ServiceInvoice {
+
+    private void styzf(Observable<?> observable, final InterfaceListen listener, final Retrofit retrofit) {
+        observable.subscribeOn(Schedulers.io())
+            .observeOn(AndroidSchedulers.mainThread())
+            .subscribe(new Observer<Object>() {
+                @Override
+                public void onCompleted() {}
+
+                @Override
+                public void onError(Throwable e) {
+                    Log.e("error", e.getMessage().toString() + " " + LogIndentify._LOG_RETROFIT_ERROR_[1]);
+                }
+
+                @Override
+                public void onNext(Object data) {
+                    if (data == null) {
+                        Log.e("error", "Retrofit got error is null.");
+                        listener.onBodyErrorIsNull();
+                    } else {
+                        listener.onResponse( data, retrofit );
+                    }
+                }
+            });
+    }
+
+    public void callServer(final InterfaceListen listener, int method, Object data) {
+
+        int unitTiming = 600;
+
+        OkHttpClient okHttpClient = new OkHttpClient()
+                .newBuilder()
+                .connectTimeout(unitTiming, TimeUnit.SECONDS)
+                .readTimeout(unitTiming, TimeUnit.SECONDS)
+                .writeTimeout(unitTiming, TimeUnit.SECONDS)
+                .build();
+
+        final Retrofit retrofit = new Retrofit.Builder()
+                .baseUrl(ServiceURL.PROCUCT_BASE_URL)
+                .client(okHttpClient)
+                .addConverterFactory(GsonConverterFactory.create())
+                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())
+                .build();
+
+        InterfaceInvoice interfaceInvoice = retrofit.create( InterfaceInvoice.class );
+
+        Observable<Object> observable = null;
+        if( data == null ) {
+        } else {
+            if( data instanceof List) {
+                RequestBody base64bMPx1 = RequestBody.create(MediaType.parse("text/plain"), (String) ((List) data).get(0));
+                //observable = interfaceInvoice.sendBmPx1Server( base64bMPx1 );
+							  observable = null;
+            } else if( data instanceof Bundle) {
+							 	// Clone Bundle
+								Bundle b = (Bundle) data;
+
+							  // Unwrap Parcelable to Object
+							  ParcelInvoice p = Parcels.unwrap(b.getParcelable(InvoiceData.INVOICE_PARCEL));
+
+							 	Gson gson = new GsonBuilder().create();
+							 	JsonArray cVzsFx = gson.toJsonTree(p.getListInvoice()).getAsJsonArray();
+							 	RequestBody jsonItmInC4 = RequestBody.create(MediaType.parse("application/json; charset=utf-8"), cVzsFx.toString());
+
+							 // Create Request body From Bitmap String
+							  RequestBody base64bMPx1 = RequestBody.create(MediaType.parse("text/plain"), p.getBitmap());
+
+							 	RequestBody latitude = RequestBody.create(MediaType.parse("text/plain"), p.getLatitude());
+
+							 	RequestBody longitude = RequestBody.create(MediaType.parse("text/plain"), p.getLongitude());
+
+							 	RequestBody userID = RequestBody.create(MediaType.parse("text/plain"), p.getUserID());
+
+							  // Put data to interface
+							 	observable = interfaceInvoice.sendBmPx1Server(jsonItmInC4,
+												latitude,
+												longitude,
+												userID,
+												base64bMPx1);
+            }
+        }
+
+        this.styzf(observable, listener, retrofit);
+    }
+}
Index: app/src/main/java/seller/viewholder/SellerBestSellerLineGraphViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/viewholder/SellerBestSellerLineGraphViewHolder.java	(revision )
+++ app/src/main/java/seller/viewholder/SellerBestSellerLineGraphViewHolder.java	(revision )
@@ -0,0 +1,20 @@
+package seller.viewholder;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+
+import com.example.administrator.myapplication.R;
+import com.github.mikephil.charting.charts.PieChart;
+
+/**
+ * Created by Administrator on 30/11/2559.
+ */
+public class SellerBestSellerLineGraphViewHolder extends RecyclerView.ViewHolder {
+
+    public PieChart bestSellerPieChart;
+
+    public SellerBestSellerLineGraphViewHolder(View itemView) {
+        super(itemView);
+        bestSellerPieChart = (PieChart) itemView.findViewById(R.id.bestSellerPieChart);
+    }
+}
\ No newline at end of file
Index: app/src/main/res/_A0_seller/layout/activity_seller_sub.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/activity_seller_sub.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/activity_seller_sub.xml	(revision )
@@ -0,0 +1,56 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:orientation="vertical"
+
+    android:background="@color/little_light_gray"
+
+    android:paddingTop="@dimen/slice_align"
+    android:layout_marginTop="-4dp"
+
+    tools:context="com.example.administrator.myapplication.SellerSubActivity">
+
+    <include
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        layout="@layout/view_sub_seller_title"/>
+
+    <android.support.v7.widget.RecyclerView
+
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+
+        android:id="@+id/sellerSubRecyclerView"
+
+        android:layout_marginTop="@dimen/slice_align"
+
+        android:layout_marginBottom="24dp"
+
+        android:clipToPadding="false">
+    </android.support.v7.widget.RecyclerView>
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:id="@+id/seller_extend_part"
+
+        android:layout_below="@id/sellerSubRecyclerView"
+
+        android:layout_marginTop="-24dp">
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+
+            android:gravity="left|center"
+
+            android:layout_marginStart="@dimen/slice_align"
+
+            android:text="@string/test_value"
+            android:textColor="@color/stone_gray"/>
+
+    </RelativeLayout>
+
+</LinearLayout>
Index: app/src/main/java/seller/convert/data/ConvertContent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/convert/data/ConvertContent.java	(revision )
+++ app/src/main/java/seller/convert/data/ConvertContent.java	(revision )
@@ -0,0 +1,168 @@
+package seller.convert.data;
+
+import android.util.Log;
+
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+
+import rx.Observable;
+import rx.Observer;
+import rx.android.schedulers.AndroidSchedulers;
+import rx.schedulers.Schedulers;
+import seller.TypeSellerReport;
+import seller.item.ItemSellerBestSeller;
+import seller.item.ItemSellerBestSellerMonthToDate;
+import seller.item.ItemSellerCollection;
+import seller.item.ItemSellerLoadingScreen;
+import seller.item.ItemSellerStockKeeper;
+import seller.item.ItemSellerStorageDateCover;
+import seller.pojo.SellerBestSellerMonthToDatePOJO;
+import seller.pojo.SellerBestSellerPOJO;
+import seller.pojo.SellerCollectionPOJO;
+import seller.pojo.SellerStockKeeperPOJO;
+import seller.pojo.SellerStorageDateCoverPOJO;
+
+/**
+ * Created by Administrator on 18/11/2559.
+ */
+public class ConvertContent {
+    public static List<ItemSellerCollection> listItemSellerCollection(SellerCollectionPOJO sellerCollectionPOJO) {
+        List<ItemSellerCollection> temp = new ArrayList<>();
+        for(SellerCollectionPOJO.Data eachData : sellerCollectionPOJO.getData()) {
+            ItemSellerCollection itemSellerCollection = new ItemSellerCollection(TypeSellerReport.TYPE_SELLER_COLLECTION);
+            itemSellerCollection.setCollectionItemCode( eachData.getCollection() );
+            itemSellerCollection.setCollectionBal( eachData.getBAL() );
+            //itemSellerCollection.setCollectionNet( eachData.getNet() );
+            temp.add(itemSellerCollection);
+        }
+        return temp;
+    }
+
+    public static ItemSellerCollection itemSellerCollectionGraph(SellerCollectionPOJO sellerCollectionPOJO, int reportId) {
+        ItemSellerCollection temp = new ItemSellerCollection(reportId);
+
+        temp.forGraph = new ArrayList<>();
+        try {
+            for (SellerCollectionPOJO.Data eachData : sellerCollectionPOJO.getData()) {
+                ItemSellerCollection itemSellerCollection = new ItemSellerCollection(reportId);
+                itemSellerCollection.setCollectionItemCode( eachData.getCollection() );
+                itemSellerCollection.setCollectionBal( eachData.getBAL() );
+
+                temp.forGraph.add(itemSellerCollection);
+            }
+        } catch (NumberFormatException e ) {
+            Log.e("NumberFormatError", e.getMessage());
+        }
+        return temp;
+    }
+
+    public static List<ItemSellerBestSeller> listItemSellerBestSeller(SellerBestSellerPOJO sellerBestSellerPOJO) {
+        List<ItemSellerBestSeller> temp = new ArrayList<>();
+        for(SellerBestSellerPOJO.Data eachData : sellerBestSellerPOJO.getData()) {
+            ItemSellerBestSeller itemSellerBestSeller = ItemSellerBestSeller.makeItem(TypeSellerReport.TYPE_SELLER_BEST_SELLER);
+            itemSellerBestSeller.setCollectionNet( eachData.getNet() );
+            itemSellerBestSeller.setCollectionItemCode( eachData.getCollection() );
+            temp.add(itemSellerBestSeller);
+        }
+        return temp;
+    }
+
+    public static ItemSellerBestSeller itemSellerBestSellerGraph(SellerBestSellerPOJO sellerBestSellerPOJO, int reportId) {
+        // แก้ไอตรงนี้ด้วยนะ 30/11/59
+        ItemSellerBestSeller temp = ItemSellerBestSeller.makeItem( reportId );
+        temp.forGraph = new ArrayList<>();
+        Double sum = 0.00;
+        try {
+            for (SellerBestSellerPOJO.Data eachData : sellerBestSellerPOJO.getData()) {
+                ItemSellerBestSeller itemSellerBestSeller = ItemSellerBestSeller.makeItem( reportId );
+                itemSellerBestSeller.setCollectionNet(eachData.getNet());
+                itemSellerBestSeller.setCollectionItemCode(eachData.getCollection());
+                itemSellerBestSeller.setCollectionLastSumNet(eachData.getLastSumNet());
+                sum+= Double.parseDouble( eachData.getNet().replaceAll("[$,]", "") );
+                temp.forGraph.add(itemSellerBestSeller);
+            }
+        } catch (NumberFormatException e ) {
+            Log.e("NumberFormatError", e.getMessage());
+            sum = 0.00;
+        }
+        temp.setSum(sum);
+        return temp;
+    }
+
+    public static ItemSellerBestSellerMonthToDate itemSellerBestSellerMonthToDateGraph(List <SellerBestSellerMonthToDatePOJO> pojo, int reportId) {
+        ItemSellerBestSellerMonthToDate temp = ItemSellerBestSellerMonthToDate.makeItem( reportId );
+        temp.forGraph = new ArrayList<>();
+
+        int i =0;
+        for(SellerBestSellerMonthToDatePOJO eachData : pojo) {
+            ItemSellerBestSellerMonthToDate inner = ItemSellerBestSellerMonthToDate.makeItem( reportId );
+
+            inner.setCollectionItemCode(eachData.getCollection());
+            inner.setCollectionNet(eachData.getNet().replaceAll("[$,]", ""));
+            temp.forGraph.add(inner);
+            i++;
+        }
+        return temp;
+    }
+
+    public static List<ItemSellerStorageDateCover> itemSellerStorageDateCover(List <SellerStorageDateCoverPOJO> pojo, int reportId) {
+        List<ItemSellerStorageDateCover>  temp = new ArrayList<>();
+
+        for(SellerStorageDateCoverPOJO eachData : pojo) {
+            ItemSellerStorageDateCover inner = new ItemSellerStorageDateCover(reportId);
+
+            if(eachData.getCollection() != null) { inner.setCollectionItemCode(eachData.getCollection()); }
+
+            if(eachData.getDayCover() != null) { inner.setCollectionDayCover(eachData.getDayCover()); }
+
+            if(eachData.getCandidateBal() != null) { inner.setCollectionCandidateBal(eachData.getCandidateBal()); }
+
+            if(eachData.getXBar() != null) { inner.setCollectionXBar(eachData.getXBar()); }
+
+            if(eachData.getStorage() != null) { inner.setCollectionStorage(eachData.getStorage()); }
+
+            temp.add(inner);
+        }
+        return temp;
+    }
+
+    public static ItemSellerStorageDateCover itemSellerStorageDateCoverGraph(List <SellerStorageDateCoverPOJO> pojo, int reportId) {
+        ItemSellerStorageDateCover temp = ItemSellerStorageDateCover.makeItem( reportId );
+        temp.forGraph = new ArrayList<>();
+
+        int i = 0;
+        for(SellerStorageDateCoverPOJO eachData : pojo) {
+            ItemSellerStorageDateCover inner = ItemSellerStorageDateCover.makeItem( reportId );
+
+            inner.setCollectionItemCode(eachData.getCollection());
+            inner.setCollectionDayCover(eachData.getDayCover());
+            inner.setCollectionCandidateBal(eachData.getCandidateBal());
+            temp.forGraph.add(inner);
+            i++;
+        }
+        return temp;
+    }
+
+    public static ItemSellerStockKeeper itemSellerStockKeeperGraph(List <SellerStockKeeperPOJO> pojo, int reportId) {
+
+        ItemSellerStockKeeper temp = ItemSellerStockKeeper.makeItem( reportId );
+
+        temp.forGraph = new ArrayList<>();
+
+        for(SellerStockKeeperPOJO eachData : pojo) {
+            ItemSellerStockKeeper inner = ItemSellerStockKeeper.makeItem( reportId );
+
+            if(eachData.getCollection() != null) { inner.setCollection(eachData.getCollection()); }
+            if(eachData.getStock() != null) { inner.setStock(eachData.getStock()); }
+
+            temp.forGraph.add(inner);
+        }
+        return temp;
+    }
+
+    public static ItemSellerLoadingScreen getLoadingScreenItem() {
+        ItemSellerLoadingScreen temp = new ItemSellerLoadingScreen();
+        return temp;
+    }
+}
Index: app/src/main/java/seller/services/prototype/InterfaceBestSellerMonthToDate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/services/prototype/InterfaceBestSellerMonthToDate.java	(revision )
+++ app/src/main/java/seller/services/prototype/InterfaceBestSellerMonthToDate.java	(revision )
@@ -0,0 +1,21 @@
+package seller.services.prototype;
+
+import java.util.Iterator;
+import java.util.List;
+
+import retrofit2.http.GET;
+import retrofit2.http.Query;
+import rx.Observable;
+import seller.pojo.SellerBestSellerMonthToDatePOJO;
+import seller.pojo.SellerBestSellerPOJO;
+
+/**
+ * Created by Administrator on 18/1/2560.
+ */
+public interface InterfaceBestSellerMonthToDate {
+
+    @GET("/Application/getBestSellerMonthToDate.php")
+    Observable<List<SellerBestSellerMonthToDatePOJO>> getBestSellerMonthToDate (
+            @Query("shop_code") String shopCode
+    );
+}
Index: app/src/main/java/seller/item/ItemSellerLoadingScreen.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/item/ItemSellerLoadingScreen.java	(revision )
+++ app/src/main/java/seller/item/ItemSellerLoadingScreen.java	(revision )
@@ -0,0 +1,13 @@
+package seller.item;
+
+import seller.TypeSellerReport;
+
+/**
+ * Created by Administrator on 6/1/2560.
+ */
+public class ItemSellerLoadingScreen extends SellerBaseItem {
+
+    public ItemSellerLoadingScreen() {
+        super(TypeSellerReport.TYPE_SELLER_LOADING);
+    }
+}
Index: app/src/main/java/shopFinding/InterfaceGetShop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/shopFinding/InterfaceGetShop.java	(revision )
+++ app/src/main/java/shopFinding/InterfaceGetShop.java	(revision )
@@ -0,0 +1,15 @@
+package shopFinding;
+
+import java.util.List;
+
+import retrofit2.http.POST;
+import retrofit2.http.Query;
+import rx.Observable;
+
+/**
+ * Created by Administrator on 23/11/2559.
+ */
+public interface InterfaceGetShop {
+    @POST("/Application/getShop.php")
+    Observable<List<ShopDetailPOJO>> getShopDetail();
+}
Index: app/src/main/java/com/example/administrator/myapplication/CustomScannerActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/CustomScannerActivity.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/CustomScannerActivity.java	(revision )
@@ -0,0 +1,156 @@
+package com.example.administrator.myapplication;
+
+import android.content.pm.ActivityInfo;
+import android.content.pm.PackageManager;
+import android.os.Bundle;
+import android.support.v7.app.AppCompatActivity;
+import android.view.KeyEvent;
+import android.view.View;
+import android.widget.Button;
+import android.widget.ImageButton;
+import android.widget.RelativeLayout;
+import android.widget.TextView;
+
+import com.journeyapps.barcodescanner.CaptureManager;
+import com.journeyapps.barcodescanner.DecoratedBarcodeView;
+
+import invoice.InvoiceData;
+
+/**
+ * Created by Administrator on 14/3/2560.
+ */
+
+public class CustomScannerActivity extends AppCompatActivity implements
+				DecoratedBarcodeView.TorchListener {
+
+	 private CaptureManager capture;
+	 private DecoratedBarcodeView barcodeScannerView;
+	 private Button switchFlashlightButton;
+
+	 private Bundle b = new Bundle();
+
+	 @Override
+	 protected void onCreate(Bundle savedInstanceState) {
+			super.onCreate(savedInstanceState);
+			setContentView(R.layout.activity_custom_scanner);
+
+			barcodeScannerView = (DecoratedBarcodeView)findViewById(R.id.zxing_barcode_scanner);
+			barcodeScannerView.setTorchListener(this);
+			barcodeScannerView.setStatusText("หมายเหตุ : กรุณาทาบเส้นสีแดงให้คลอบคลุมรหัสบาร์โค้ด");
+
+			b = getIntent().getExtras();
+
+			//switchFlashlightButton = (Button)findViewById(R.id.switch_flashlight);
+
+			// if the device does not have flashlight in its camera,
+			// then remove the switch flashlight button...
+			if( !hasFlash() ) {
+				 	//switchFlashlightButton.setVisibility(View.GONE);
+			}
+
+			capture = new CaptureManager(this, barcodeScannerView);
+			capture.initializeFromIntent(getIntent(), savedInstanceState);
+			capture.decode();
+
+			Button back = (Button) findViewById(R.id.backPressedState);
+			Button next = (Button) findViewById(R.id.nextPressedState);
+
+			if( b != null ) {
+				 	RelativeLayout ns = (RelativeLayout) findViewById(R.id.view_zxing_next_state);
+				 	if( ns != null && b.containsKey(InvoiceData.INVOICE_CASE) ) {
+						  switch( b.getInt(InvoiceData.INVOICE_CASE) ) {
+									case InvoiceData.INVOICE_CASE_INVOICE_USER_ID:
+										 back.setVisibility(View.GONE);
+										 break;
+									case InvoiceData.INVOICE_CASE_INVOICE_PREVIEW:
+									default:
+										 ns.setVisibility(View.GONE);
+										 break;
+							}
+				 	}
+
+				 	TextView textScannerPreview = (TextView) findViewById(R.id.textScannerPreview);
+				 	if( textScannerPreview != null && b.containsKey(InvoiceData.INVOICE_PREVIEW ) ) {
+						 	textScannerPreview.setText(b.getString(InvoiceData.INVOICE_PREVIEW));
+					}
+			}
+
+			View.OnClickListener onClick = new View.OnClickListener() {
+				 @Override
+				 public void onClick(View v) {
+						finish();
+				 }
+			};
+
+			back.setOnClickListener(onClick);
+			next.setOnClickListener(onClick);
+	 }
+
+	 @Override
+	 protected void onResume() {
+			super.onResume();
+			capture.onResume();
+	 }
+
+	 @Override
+	 protected void onPause() {
+			super.onPause();
+			capture.onPause();
+	 }
+
+	 @Override
+	 protected void onDestroy() {
+			super.onDestroy();
+			capture.onDestroy();
+	 }
+
+	 @Override
+	 protected void onSaveInstanceState(Bundle outState) {
+			super.onSaveInstanceState(outState);
+			capture.onSaveInstanceState(outState);
+			outState.putAll(b);
+	 }
+
+	 @Override
+	 protected void onRestoreInstanceState(Bundle savedInstanceState) {
+			super.onRestoreInstanceState(savedInstanceState);
+			if( savedInstanceState != null ) {
+				 	b = savedInstanceState;
+			} else if( getIntent().getExtras() != null ) {
+				  b = getIntent().getExtras();
+			} else { b = new Bundle(); }
+	 }
+
+	 @Override
+	 public boolean onKeyDown(int keyCode, KeyEvent event) {
+			return barcodeScannerView.onKeyDown(keyCode, event) || super.onKeyDown(keyCode, event);
+	 }
+
+	 /**
+		* Check if the device's camera has a Flashlight.
+		* @return true if there is Flashlight, otherwise false.
+		*/
+	 private boolean hasFlash() {
+			return getApplicationContext().getPackageManager()
+							.hasSystemFeature(PackageManager.FEATURE_CAMERA_FLASH);
+	 }
+
+	 public void switchFlashlight(View view) {
+//			if (getString(R.string.turn_on_flashlight).equals(switchFlashlightButton.getText())) {
+//				 barcodeScannerView.setTorchOn();
+//			} else {
+//				 barcodeScannerView.setTorchOff();
+//			}
+	 }
+
+	 @Override
+	 public void onTorchOn() {
+			//switchFlashlightButton.setText(R.string.turn_off_flashlight);
+	 }
+
+	 @Override
+	 public void onTorchOff() {
+			//switchFlashlightButton.setText(R.string.turn_on_flashlight);
+	 }
+
+}
Index: app/src/main/java/com/example/administrator/myapplication/EBusinessActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/EBusinessActivity.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/EBusinessActivity.java	(revision )
@@ -0,0 +1,121 @@
+package com.example.administrator.myapplication;
+
+import android.support.annotation.LayoutRes;
+import android.support.annotation.NonNull;
+import android.support.design.widget.NavigationView;
+import android.support.v4.content.ContextCompat;
+import android.support.v4.view.GravityCompat;
+import android.support.v4.widget.DrawerLayout;
+import android.support.v7.app.ActionBarDrawerToggle;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.support.v7.widget.Toolbar;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.FrameLayout;
+import android.widget.RelativeLayout;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import AppBar.ApplicationBar;
+import AppBar.BarType;
+import user.UserAdapter;
+import user.UserBaseItem;
+import user.user.item.ItemMenu;
+import user.user.item.ItemSection;
+
+public class EBusinessActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {
+
+    public static RecyclerView userRecyclerView;
+
+    public static UserAdapter userAdapter;
+
+    @Override
+    public void setContentView(@LayoutRes int layoutResID) {
+
+        DrawerLayout fullLayout = (DrawerLayout) getLayoutInflater().inflate(layoutResID, null);
+
+        FrameLayout frameLayout = (FrameLayout) fullLayout.findViewById(R.id.content);
+
+        getLayoutInflater().inflate(R.layout.activity_ebusiness, frameLayout, true);
+
+        super.setContentView(fullLayout);
+
+        new ApplicationBar(this, BarType.TYPE_APPLICATION_NAME).setAppName("Administrator");
+
+    }
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        setContentView(R.layout.activity_main);
+
+        userRecyclerView = (RecyclerView) findViewById(R.id.userRecyclerView);
+        userRecyclerView.setLayoutManager(new LinearLayoutManager(this));
+
+        userAdapter = new UserAdapter();
+        userRecyclerView.setAdapter(userAdapter);
+
+        List<UserBaseItem> userBaseItems = new ArrayList<>();
+
+        int sectionTheme = ContextCompat.getColor(getApplicationContext(), R.color.sky_light_blue);
+
+        ItemSection itemSection = new ItemSection();
+        itemSection.setSection("ระบบหน้าร้าน");
+        itemSection.setColor( sectionTheme );
+        userBaseItems.add(itemSection);
+
+        ItemMenu itemMenu = null;
+
+        itemMenu = new ItemMenu();
+        itemMenu.setImageSource(R.drawable.ic_my_location_white_24dp);
+        itemMenu.setImageResourceColor(sectionTheme);
+        itemMenu.setMenuName("พิกัดพนักงาน");
+        itemMenu.setDetailName("แสดงพิกัดของพนักงานตามหมายเลขโทรศัพท์มือถือที่ท่านเลือก");
+        itemMenu.setIntent(null, LocationActivity.class);
+        userBaseItems.add(itemMenu);
+
+        itemMenu = new ItemMenu();
+        itemMenu.setImageSource(R.drawable.ic_view_array_black_24dp);
+        itemMenu.setImageResourceColor(sectionTheme);
+        itemMenu.setMenuName("ตำแหน่งหน้าร้าน");
+        itemMenu.setDetailName("แสดงตำแหน่งหน้าร้านทั้งหมดในแผนที่ บันทึกพิกัดหน้าร้าน");
+        itemMenu.setIntent(null, ShopInfoActivity.class);
+        userBaseItems.add(itemMenu);
+
+        sectionTheme = ContextCompat.getColor(getApplicationContext(), R.color.honest_green);
+        itemSection = new ItemSection();
+        itemSection.setSection("ระบบยอดขาย");
+        itemSection.setColor( sectionTheme );
+        userBaseItems.add(itemSection);
+
+        itemMenu = new ItemMenu();
+        itemMenu.setImageSource(R.drawable.ic_strikethrough_s_black_24dp);
+        itemMenu.setImageResourceColor(sectionTheme);
+        itemMenu.setMenuName("รายการยอดขายสุทธิ");
+        itemMenu.setDetailName("ยอดขายทั้งหมดของผลิตภัณฑ์จำแนกตามรหัส Collection ทั้งหมดของหน้าร้าน ");
+        itemMenu.setIntent(null, SellerActivity.class);
+        userBaseItems.add(itemMenu);
+
+        userAdapter.setRecyclerAdapter(userBaseItems);
+        userAdapter.notifyDataSetChanged();
+    }
+
+    @Override
+    protected void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+    }
+
+    @Override
+    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+        drawer.closeDrawer(GravityCompat.START);
+        return true;
+    }
+
+
+}
Index: app/src/main/java/seller/InterfaceOnProductDetail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/InterfaceOnProductDetail.java	(revision )
+++ app/src/main/java/seller/InterfaceOnProductDetail.java	(revision )
@@ -0,0 +1,15 @@
+package seller;
+
+import android.os.Parcelable;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+import java.io.Serializable;
+
+/**
+ * Created by Administrator on 5/1/2560.
+ */
+public interface InterfaceOnProductDetail extends Serializable {
+    public void onProductDetailDestroy();
+}
Index: app/src/main/java/seller/viewholder/BarChartViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/viewholder/BarChartViewHolder.java	(revision )
+++ app/src/main/java/seller/viewholder/BarChartViewHolder.java	(revision )
@@ -0,0 +1,26 @@
+package seller.viewholder;
+
+import android.support.v4.widget.NestedScrollView;
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+import android.widget.LinearLayout;
+
+import com.example.administrator.myapplication.R;
+import com.github.mikephil.charting.charts.BarChart;
+import com.github.mikephil.charting.charts.HorizontalBarChart;
+
+/**
+ * Created by Administrator on 30/11/2559.
+ */
+public class BarChartViewHolder extends RecyclerView.ViewHolder {
+
+    public HorizontalBarChart barChart;
+
+    public LinearLayout barChartLegend;
+
+    public BarChartViewHolder(View itemView) {
+        super(itemView);
+        barChart = (HorizontalBarChart) itemView.findViewById(R.id.barChart);
+        barChartLegend = (LinearLayout) itemView.findViewById(R.id.barChartLegend);
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/administrator/myapplication/ParallelDataOne.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/ParallelDataOne.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/ParallelDataOne.java	(revision )
@@ -0,0 +1,33 @@
+package com.example.administrator.myapplication;
+
+/**
+ * Created by Administrator on 30/9/2559.
+ */
+public class ParallelDataOne {
+    private int minute;
+    private int hour;
+
+    public ParallelDataOne() {
+    }
+
+    public ParallelDataOne(int minute, int hour) {
+        this.minute = minute;
+        this.hour = hour;
+    }
+
+    public int getMinute() {
+        return minute;
+    }
+
+    public void setMinute(int minute) {
+        this.minute = minute;
+    }
+
+    public int getHour() {
+        return hour;
+    }
+
+    public void setHour(int hour) {
+        this.hour = hour;
+    }
+}
Index: app/src/main/res/layout-land/nav_header_main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/nav_header_main.xml	(revision )
+++ app/src/main/res/layout-land/nav_header_main.xml	(revision )
@@ -0,0 +1,36 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="@dimen/nav_header_height"
+    android:background="@color/supreme_blue"
+    android:gravity="left"
+    android:orientation="vertical"
+    android:paddingBottom="@dimen/activity_vertical_margin_land"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin_land"
+    android:theme="@style/ThemeOverlay.AppCompat.Dark">
+
+    <ImageView
+        android:id="@+id/imageView"
+        android:layout_width="85dp"
+        android:layout_height="85dp"
+        android:paddingTop="0dp"
+        android:src="@mipmap/ic_launcher" />
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:paddingTop="@dimen/nav_header_vertical_spacing"
+        android:text="Testing Application"
+        android:textSize="20sp"
+        android:textAppearance="@style/TextAppearance.AppCompat.Body1" />
+
+    <TextView
+        android:id="@+id/textView"
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:textSize="20sp"
+        android:text="แอปพลิเคชันสำหรับทดสอบ" />
+
+</LinearLayout>
Index: app/src/main/java/seller/viewholder/SellerContentViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/viewholder/SellerContentViewHolder.java	(revision )
+++ app/src/main/java/seller/viewholder/SellerContentViewHolder.java	(revision )
@@ -0,0 +1,13 @@
+package seller.viewholder;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+
+/**
+ * Created by Administrator on 17/11/2559.
+ */
+public class SellerContentViewHolder extends RecyclerView.ViewHolder {
+    public SellerContentViewHolder(View itemView) {
+        super(itemView);
+    }
+}
Index: app/src/main/java/seller/viewholder/LoadingScreenViewHoler.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/viewholder/LoadingScreenViewHoler.java	(revision )
+++ app/src/main/java/seller/viewholder/LoadingScreenViewHoler.java	(revision )
@@ -0,0 +1,20 @@
+package seller.viewholder;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+import android.widget.ProgressBar;
+
+import com.example.administrator.myapplication.R;
+
+/**
+ * Created by Administrator on 6/1/2560.
+ */
+public class LoadingScreenViewHoler extends RecyclerView.ViewHolder {
+
+    public ProgressBar progressBar;
+
+    public LoadingScreenViewHoler(View itemView) {
+        super(itemView);
+        this.progressBar = (ProgressBar) itemView.findViewById(R.id.spinnerLoading);
+    }
+}
Index: app/src/main/res/layout/view_barcode.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/view_barcode.xml	(revision )
+++ app/src/main/res/layout/view_barcode.xml	(revision )
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:tobavity="center"
+
+    android:background="@color/stone_gray">
+
+    <include layout="@layout/zxing_capture"/>
+
+    <Button
+        android:layout_width="36dp"
+        android:layout_height="36dp"
+        android:layout_marginTop="@dimen/round_padding"
+        android:layout_marginStart="@dimen/double_round"
+        android:id="@+id/zxing_back_button"
+        android:background="@drawable/ic_arrow_back_36_white_fixed" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="36dp"
+        android:layout_marginTop="@dimen/round_padding"
+        android:layout_marginStart="@dimen/round_padding"
+        android:text="(ยกเลิก)"
+        android:textSize="@dimen/font_app_name"
+        android:textColor="@color/angel_white"
+
+        android:gravity="center"
+
+        android:layout_alignParentTop="true"
+        android:layout_toEndOf="@+id/zxing_back_button"/>
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="กรุณาถ่ายแถบ Barcode ของใบสั่งสินค้า"
+        android:textSize="27sp"
+        android:textColor="@color/angel_white"
+
+        android:gravity="center"
+
+        android:layout_alignParentBottom="true"/>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/administrator/myapplication/MyFirebaseMessagingService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/MyFirebaseMessagingService.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/MyFirebaseMessagingService.java	(revision )
@@ -0,0 +1,79 @@
+package com.example.administrator.myapplication;
+
+import android.content.Context;
+import android.os.Handler;
+import android.os.Looper;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.widget.LinearLayout;
+
+import com.google.firebase.messaging.FirebaseMessagingService;
+import com.google.firebase.messaging.RemoteMessage;
+
+import junit.framework.Test;
+
+/**
+ * Created by Administrator on 24/10/2559.
+ */
+public class MyFirebaseMessagingService extends FirebaseMessagingService {
+    private static final String TAG = "Message";
+
+    Context ctx;
+    View v;
+    LinearLayout ll;// = (LinearLayout) findViewById(R.id.ll);
+
+    @Override
+    public void onMessageReceived(final RemoteMessage remoteMessage) {
+        //BusProvider.getInstance().register(this);
+
+        // Maybe an error occurred.
+        final String txt = remoteMessage.getData().get("Test");
+        final NotificationData nd = new NotificationData(txt);
+
+        new Handler(Looper.getMainLooper()).post(new Runnable() {
+            @Override
+            public void run() {
+                Log.d("UI thread", "I am the UI thread");
+
+                BusProvider.getInstance().post(nd);
+                //TestActivity.callBack.onSended(txt);
+                /*if (NotificationData.ctx != null) {
+
+
+                    //ctx = NotificationData.ctx;
+                    //v = LayoutInflater.from(NotificationData.ctx).inflate(R.layout.activity_test, null , false);
+                    //(LayoutInflater) NotificationData.ctx.
+                            //ctx.getSystemService( Context.LAYOUT_INFLATER_SERVICE );
+                    //v = inflater.inflate( R.layout.activity_test, null );
+
+                    ll = (LinearLayout) v.findViewById(R.id.ll);
+
+                } else {
+
+                }*/
+            }
+        });
+
+        //BusProvider.getInstance().post(nd);
+
+        /*if (NotificationData.ctx != null) {
+            ctx = NotificationData.ctx;
+            inflater = (LayoutInflater) ctx.getSystemService( Context.LAYOUT_INFLATER_SERVICE );
+            v = inflater.inflate( R.layout.activity_test, null );
+
+            ll = (LinearLayout) v.findViewById(R.id.ll);
+
+        } else {
+
+        }*/
+
+
+        //BusProvider.getInstance().post(nd);
+
+        Log.v("vvvvvv", "test01:"+txt);
+
+        //BusProvider.getInstance().unregister(TestActivity.class);
+        //String box = remoteMessage.getData().get("box");
+    }
+}
Index: app/src/main/java/invoice/item/InvoiceBaseItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/invoice/item/InvoiceBaseItem.java	(revision )
+++ app/src/main/java/invoice/item/InvoiceBaseItem.java	(revision )
@@ -0,0 +1,21 @@
+package invoice.item;
+
+/**
+ * Created by Administrator on 6/3/2560.
+ */
+
+public class InvoiceBaseItem {
+    public int type;
+
+    public int getType() {
+        return type;
+    }
+
+    public void setType(int type) {
+        this.type = type;
+    }
+
+    public InvoiceBaseItem(int type) {
+        this.type = type;
+    }
+}
Index: app/src/main/res/layout/view_signature_canvas.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/view_signature_canvas.xml	(revision )
+++ app/src/main/res/layout/view_signature_canvas.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/seller/item/ItemSellerBestSeller.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/item/ItemSellerBestSeller.java	(revision )
+++ app/src/main/java/seller/item/ItemSellerBestSeller.java	(revision )
@@ -0,0 +1,84 @@
+package seller.item;
+
+import java.util.List;
+
+import seller.graph.ChartCandidateType;
+
+/**
+ * Created by Administrator on 18/11/2559.
+ */
+public class ItemSellerBestSeller extends SellerBaseItem {
+
+    public String collectionItemCode;
+    public String collectionNet;
+    public String collectionLastSumNet;
+
+    public Double sum = 0.00;
+
+    public List<ItemSellerBestSeller> forGraph = null;
+
+    public int bestSellerCandidateType;
+    public int bestSellerOrderType;
+
+    public static ItemSellerBestSeller makeItem(int report_id) {
+        return new ItemSellerBestSeller(report_id);
+    }
+
+    public ItemSellerBestSeller(int type) {
+        super(type);
+        bestSellerCandidateType = ChartCandidateType.TYPE_30_CANDIDATE;
+        bestSellerOrderType = ChartCandidateType.TYPE_BEST_SELLER_TOP_10;
+    }
+
+    public String getCollectionItemCode() {
+        return collectionItemCode;
+    }
+
+    public void setCollectionItemCode(String collectionItemCode) {
+        this.collectionItemCode = collectionItemCode;
+    }
+
+    public String getCollectionNet() {
+        return collectionNet;
+    }
+
+    public void setCollectionNet(String collectionNet) {
+        this.collectionNet = collectionNet;
+    }
+
+    public List<ItemSellerBestSeller> getForGraph() {
+        return forGraph;
+    }
+
+    public void setSum(Double sum) {
+        this.sum = sum;
+    }
+
+    public Double getSum() {
+        return sum;
+    }
+
+    public String getCollectionLastSumNet() {
+        return collectionLastSumNet;
+    }
+
+    public void setCollectionLastSumNet(String collectionLastSumNet) {
+        this.collectionLastSumNet = collectionLastSumNet;
+    }
+
+    public int getBestSellerCandidateType() {
+        return bestSellerCandidateType;
+    }
+
+    public void setBestSellerCandidateType(int bestSellerCandidateType) {
+        this.bestSellerCandidateType = bestSellerCandidateType;
+    }
+
+    public int getBestSellerOrderType() {
+        return bestSellerOrderType;
+    }
+
+    public void setBestSellerOrderType(int bestSellerOrderType) {
+        this.bestSellerOrderType = bestSellerOrderType;
+    }
+}
Index: app/src/main/java/seller/ViewProductDetailDialogFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/ViewProductDetailDialogFragment.java	(revision )
+++ app/src/main/java/seller/ViewProductDetailDialogFragment.java	(revision )
@@ -0,0 +1,338 @@
+package seller;
+
+import android.annotation.SuppressLint;
+import android.app.Dialog;
+import android.os.Bundle;
+import android.os.Handler;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.v4.app.DialogFragment;
+import android.support.v4.content.ContextCompat;
+import android.util.Log;
+import android.util.TypedValue;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.Window;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.R;
+
+import okhttp3.ResponseBody;
+import retrofit.InterfaceListen;
+import retrofit2.Retrofit;
+import seller.pojo.SellerBestSellerPOJO;
+import seller.pojo.SellerCollectionPOJO;
+import seller.services.retrofit.ServiceCollection;
+
+/**
+ * Created by Administrator on 5/1/2560.
+ */
+public class ViewProductDetailDialogFragment extends DialogFragment {
+
+    private InterfaceOnProductDetail setUpDialog = null;
+
+    private int reportId = 0;
+    private String collection = "";
+    private String shopCode = "";
+
+    @SuppressLint("ValidFragment")
+    public ViewProductDetailDialogFragment(int reportId, String collection, String shopCode, InterfaceOnProductDetail setUpDialog) {
+        this.setUpDialog = setUpDialog;
+        this.reportId = reportId;
+        this.collection = collection;
+        this.shopCode = shopCode;
+    }
+
+    @Override
+    public void onStart() {
+        super.onStart();
+        Dialog dialog = getDialog();
+        if (dialog != null) {
+            int width = ViewGroup.LayoutParams.MATCH_PARENT;
+            int height = ViewGroup.LayoutParams.WRAP_CONTENT;
+            dialog.getWindow().setLayout(width, height);
+
+            LinearLayout content = (LinearLayout) dialog.findViewById(R.id.dialog_content);
+
+            LinearLayout.LayoutParams llPm =
+                    new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT);
+
+            float density = getActivity().getResources().getDisplayMetrics().density;
+            int paddingDp = (int)(7 * density);
+
+            LinearLayout llNr = new LinearLayout(getActivity());
+
+            llNr.setLayoutParams(llPm);
+            llNr.setOrientation(LinearLayout.HORIZONTAL);
+            llNr.setPadding(paddingDp,paddingDp,paddingDp,paddingDp);
+            llNr.setBackgroundColor(ContextCompat.getColor(getActivity(), R.color.angel_white));
+            llNr.setGravity(Gravity.CENTER_HORIZONTAL);
+
+            ProgressBar progressBar = new ProgressBar(getActivity());
+            llNr.addView(progressBar);
+            content.addView(llNr);
+
+        }
+    }
+
+    @NonNull
+    @Override
+    public Dialog onCreateDialog(Bundle savedInstanceState) {
+        Dialog dialog = super.onCreateDialog(savedInstanceState);
+
+        dialog.getWindow().requestFeature(Window.FEATURE_NO_TITLE);
+
+        dialog.setCancelable(true);
+
+        return dialog;
+    }
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setRetainInstance(true);
+    }
+
+    private View passView = null;
+
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        final View v = inflater.inflate(R.layout.dialog_seller_detail, container, false);
+
+        passView = v;
+
+        final Handler handler = new Handler();
+        handler.postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                new ServiceCollection().callServer(interfaceListen, reportId, shopCode, collection);
+            }
+        }, 1000);
+
+        ImageView backPressedState = (ImageView) v.findViewById(R.id.backPressedState);
+        backPressedState.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                getDialog().dismiss();
+            }
+        });
+
+//        final InstantAutocomplete option = (InstantAutocomplete) v.findViewById(R.id.option);
+//
+//        final ItemSellerTitle itemSellerTitle = new ItemSellerTitle();
+//        itemSellerTitle.setListTitleDescription(SellerTitleBar.getSellerTitleList());
+//
+//        option.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                option.showDropDown();
+//            }
+//        });
+//        option.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+//            @Override
+//            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+//                //interfaceTitleCallback.onChangeTitleCallBack(itemSellerTitle.listOptionValue.get(position).getId());
+//                reportPicked = position;
+//            }
+//        });
+//
+//        ArrayAdapter<SellerTitleDAO> autoCompleteAdapter = new ArrayAdapter<>(getContext(), android.R.layout.select_dialog_singlechoice, itemSellerTitle.getListTitleDescription());
+//        option.setAdapter(autoCompleteAdapter);
+//
+//        Button viewDialogDescriptionClose = (Button) v.findViewById(R.id.view_dialog_description_close);
+//        viewDialogDescriptionClose.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                getDialog().dismiss();
+//            }
+//        });
+//
+//        Button viewDialogDescriptionSubmit = (Button) v.findViewById(R.id.view_dialog_description_submit);
+//        viewDialogDescriptionSubmit.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                //interfaceTitleCallback.onChangeTitleCallBack(itemSellerTitle.listOptionValue.get(reportPicked).getId(), itemSellerTitle.listOptionValue.get(reportPicked).getTitle());
+//                getDialog().dismiss();
+//            }
+//        });
+
+        return v;
+    }
+
+    InterfaceListen interfaceListen = new InterfaceListen() {
+
+        @Override
+        public void onResponse(Object data, Retrofit retrofit) {
+
+            LinearLayout content = (LinearLayout) passView.findViewById(R.id.dialog_content);
+
+            content.removeAllViews();
+
+            TextView dialogHeaderTextview = (TextView) passView.findViewById(R.id.dialog_header);
+
+            if (data instanceof SellerCollectionPOJO) {
+
+                dialogHeaderTextview.setText("รายละเอียดจำนวนสินค้าหน้าร้าน");
+
+                SellerCollectionPOJO temp = (SellerCollectionPOJO) data;
+
+                if (temp != null && temp.getData() != null) {
+
+                    for (SellerCollectionPOJO.Data each : temp.getData()) {
+                        LinearLayout llNr = new LinearLayout(getActivity());
+
+                        LinearLayout.LayoutParams llPm =
+                                new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT);
+
+                        float density = getActivity().getResources().getDisplayMetrics().density;
+                        int paddingDp = (int) (7 * density);
+
+                        llNr.setLayoutParams(llPm);
+                        llNr.setOrientation(LinearLayout.HORIZONTAL);
+                        llNr.setPadding(paddingDp, paddingDp, paddingDp, paddingDp);
+                        llNr.setBackgroundColor(ContextCompat.getColor(getActivity(), R.color.angel_white));
+
+                        TextView itemCodeTitle = new TextView(getActivity());
+                        itemCodeTitle.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        itemCodeTitle.setText("");
+                        itemCodeTitle.setTextColor(ContextCompat.getColor(getActivity(), R.color.supreme_blue));
+                        itemCodeTitle.setTextSize(TypedValue.COMPLEX_UNIT_SP, 21);
+                        llNr.addView(itemCodeTitle);
+
+                        TextView itemCodeBestSeller = new TextView(getActivity());
+                        itemCodeBestSeller.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        itemCodeBestSeller.setText(each.getCollection());
+                        itemCodeBestSeller.setTextColor(ContextCompat.getColor(getActivity(), R.color.jet_black));
+                        itemCodeBestSeller.setTextSize(TypedValue.COMPLEX_UNIT_SP, 21);
+                        llNr.addView(itemCodeBestSeller);
+
+                        content.addView(llNr);
+
+                        llNr = new LinearLayout(getActivity());
+                        llNr.setLayoutParams(llPm);
+                        llNr.setOrientation(LinearLayout.HORIZONTAL);
+                        llNr.setPadding(paddingDp, paddingDp, paddingDp, paddingDp);
+                        llNr.setBackgroundColor(ContextCompat.getColor(getActivity(), R.color.angel_white));
+
+                        TextView netTitle = new TextView(getActivity());
+                        netTitle.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        netTitle.setText("จำนวนสินค้า ");
+                        netTitle.setTextColor(ContextCompat.getColor(getActivity(), R.color.dark_honest_green));
+                        netTitle.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18);
+                        llNr.addView(netTitle);
+
+                        TextView netBestSeller = new TextView(getActivity());
+                        netBestSeller.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        netBestSeller.setText(each.getBAL());
+                        netBestSeller.setTextColor(ContextCompat.getColor(getActivity(), R.color.space_gray));
+                        netBestSeller.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18);
+                        llNr.addView(netBestSeller);
+
+                        TextView netCurrency = new TextView(getActivity());
+                        netCurrency.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        netCurrency.setText(" ชิ้น");
+                        netCurrency.setTextColor(ContextCompat.getColor(getActivity(), R.color.dark_honest_green));
+                        netCurrency.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18);
+                        llNr.addView(netCurrency);
+
+                        content.addView(llNr);
+                    }
+                }
+
+            } else if (data instanceof SellerBestSellerPOJO) {
+
+                SellerBestSellerPOJO temp = (SellerBestSellerPOJO) data;
+
+                dialogHeaderTextview.setText("รายละเอียดยอดขายสินค้า");
+
+                if (temp != null && temp.getData() != null) {
+
+                    for (SellerBestSellerPOJO.Data each : temp.getData()) {
+                        LinearLayout llNr = new LinearLayout(getActivity());
+
+                        LinearLayout.LayoutParams llPm =
+                                new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT);
+
+                        float density = getActivity().getResources().getDisplayMetrics().density;
+                        int paddingDp = (int) (7 * density);
+
+                        llNr.setLayoutParams(llPm);
+                        llNr.setOrientation(LinearLayout.HORIZONTAL);
+                        llNr.setPadding(paddingDp, paddingDp, paddingDp, paddingDp);
+                        llNr.setBackgroundColor(ContextCompat.getColor(getActivity(), R.color.angel_white));
+
+                        TextView itemCodeTitle = new TextView(getActivity());
+                        itemCodeTitle.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        itemCodeTitle.setText("");
+                        itemCodeTitle.setTextColor(ContextCompat.getColor(getActivity(), R.color.supreme_blue));
+                        itemCodeTitle.setTextSize(TypedValue.COMPLEX_UNIT_SP, 21);
+                        llNr.addView(itemCodeTitle);
+
+                        TextView itemCodeBestSeller = new TextView(getActivity());
+                        itemCodeBestSeller.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        itemCodeBestSeller.setText(each.getCollection());
+                        itemCodeBestSeller.setTextColor(ContextCompat.getColor(getActivity(), R.color.jet_black));
+                        itemCodeBestSeller.setTextSize(TypedValue.COMPLEX_UNIT_SP, 21);
+                        llNr.addView(itemCodeBestSeller);
+
+                        content.addView(llNr);
+
+                        llNr = new LinearLayout(getActivity());
+                        llNr.setLayoutParams(llPm);
+                        llNr.setOrientation(LinearLayout.HORIZONTAL);
+                        llNr.setPadding(paddingDp, paddingDp, paddingDp, paddingDp);
+                        llNr.setBackgroundColor(ContextCompat.getColor(getActivity(), R.color.angel_white));
+
+                        TextView netTitle = new TextView(getActivity());
+                        netTitle.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        netTitle.setText("ยอดขายสุทธิ ");
+                        netTitle.setTextColor(ContextCompat.getColor(getActivity(), R.color.dark_honest_green));
+                        netTitle.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18);
+                        llNr.addView(netTitle);
+
+                        TextView netBestSeller = new TextView(getActivity());
+                        netBestSeller.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        netBestSeller.setText(each.getNet());
+                        netBestSeller.setTextColor(ContextCompat.getColor(getActivity(), R.color.space_gray));
+                        netBestSeller.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18);
+                        llNr.addView(netBestSeller);
+
+                        TextView netCurrency = new TextView(getActivity());
+                        netCurrency.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        netCurrency.setText(" บาท");
+                        netCurrency.setTextColor(ContextCompat.getColor(getActivity(), R.color.dark_honest_green));
+                        netCurrency.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18);
+                        llNr.addView(netCurrency);
+
+                        content.addView(llNr);
+                    }
+                }
+            }
+        }
+
+        @Override
+        public void onBodyError(ResponseBody responseBodyError) {
+
+        }
+
+        @Override
+        public void onBodyErrorIsNull() {
+
+        }
+
+        @Override
+        public void onFailure(Throwable t) {
+
+        }
+    };
+
+    @Override
+    public void onDestroyView() {
+        super.onDestroyView();
+        this.setUpDialog.onProductDetailDestroy();
+    }
+}
\ No newline at end of file
Index: app/src/main/res/_A0_location/layout/view_choose_phone.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_location/layout/view_choose_phone.xml	(revision )
+++ app/src/main/res/_A0_location/layout/view_choose_phone.xml	(revision )
@@ -0,0 +1,82 @@
+<?xml version="1.0" encoding="utf-8"?>
+<android.support.v4.widget.NestedScrollView xmlns:android="http://schemas.android.com/apk/res/android"
+
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+
+    android:fillViewport="true">
+
+    <LinearLayout
+        android:orientation="vertical"
+
+        android:gravity="top|center_vertical"
+
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+
+        android:background="@color/honest_green">
+
+        <ImageButton
+            android:layout_width="36dp"
+            android:layout_height="36dp"
+            android:layout_gravity="left"
+
+            android:layout_margin="@dimen/round_padding"
+
+            android:background="@android:color/transparent"
+
+            android:src="@drawable/ic_arrow_back"
+
+            android:tint="@color/lemon_resonance_structure"/>
+
+        <ImageView
+
+            android:layout_marginTop="40dp"
+            android:layout_marginBottom="@dimen/double_round"
+
+            android:layout_width="match_parent"
+            android:layout_height="128dp"
+
+            android:src="@drawable/ic_smartphone_rounded"/>
+
+        <autocomplete.InstantAutocomplete
+
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+
+            android:id="@+id/location_search_tv"
+
+            android:drawableRight="@drawable/ic_arrow_drop_down_black"
+            android:background="@color/dark_honest_green"
+
+            android:textColor="@color/angel_white"
+            android:textSize="17sp"
+            android:hint="เลือกหมายเลขโทรศัพท์"
+
+            android:focusable="false"
+            android:focusableInTouchMode="true"
+
+            android:padding="@dimen/round_padding"
+            android:layout_margin="@dimen/double_round"
+
+            android:gravity="center"/>
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+
+            android:gravity="center"
+
+            android:textColor="#009060"
+            android:textSize="17sp"
+            android:text="เลือกหมายเลขเครื่องโทรศัพท์เพื่อแสดงพิกัดของพนักงาน"
+
+            android:layout_marginBottom="@dimen/double_round"
+
+            android:drawablePadding="@dimen/round_padding"
+
+            android:padding="@dimen/double_round"/>
+
+    </LinearLayout>
+</android.support.v4.widget.NestedScrollView>
\ No newline at end of file
Index: app/src/main/res/_A0_seller/layout/view_best_seller_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/view_best_seller_graph.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/view_best_seller_graph.xml	(revision )
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent" >
+
+    <com.github.mikephil.charting.charts.PieChart
+        android:id="@+id/bestSellerPieChart"
+        android:layout_marginBottom="@dimen/round_padding"
+        android:layout_marginTop="@dimen/round_padding"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:background="@color/angel_white"/>
+
+</LinearLayout>
Index: app/src/main/java/com/example/administrator/myapplication/MultipartEntity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/MultipartEntity.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/MultipartEntity.java	(revision )
@@ -0,0 +1,17 @@
+package com.example.administrator.myapplication;
+
+/**
+ * Created by Administrator on 2/3/2560.
+ */
+
+
+import java.io.ByteArrayInputStream;
+import java.io.ByteArrayOutputStream;
+import java.io.File;
+import java.io.FileInputStream;
+import java.io.FileNotFoundException;
+import java.io.IOException;
+import java.io.InputStream;
+import java.io.OutputStream;
+
+public class MultipartEntity {}
\ No newline at end of file
Index: app/src/main/java/seller/viewholder/DialogFragmentGraphOption.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/viewholder/DialogFragmentGraphOption.java	(revision )
+++ app/src/main/java/seller/viewholder/DialogFragmentGraphOption.java	(revision )
@@ -0,0 +1,142 @@
+package seller.viewholder;
+
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.DialogFragment;
+import android.support.v4.content.ContextCompat;
+import android.util.Log;
+import android.view.Gravity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.Window;
+import android.view.WindowManager;
+import android.widget.Button;
+import android.widget.LinearLayout;
+import android.widget.RadioButton;
+import android.widget.RadioGroup;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.R;
+
+import seller.SellerGraphType;
+
+/**
+ * Created by Administrator on 8/12/2559.
+ */
+public class DialogFragmentGraphOption extends DialogFragment {
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setRetainInstance(true);
+    }
+
+    final RadioButton [] rb = new RadioButton[3];
+
+    @Nullable
+    @Override
+    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
+
+        getDialog().requestWindowFeature(Window.FEATURE_NO_TITLE);
+        getDialog().setCancelable(false);
+
+        View v = inflater.inflate(R.layout.dialog_seller_detail, container, false);
+
+//        WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
+//        lp.copyFrom( getActivity().getWindow().getAttributes());
+//        lp.width = WindowManager.LayoutParams.MATCH_PARENT;
+//        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
+//        lp.gravity = Gravity.CENTER;
+//
+//        getActivity().getWindow().setAttributes(lp);
+
+        getDialog().setTitle("My Dialog Title");
+
+//        TextView dialogHeader = (TextView) v.findViewById(R.id.dialog_header);
+//        //dialogHeader.setText("เลือกประเภทรายงานการแสดงผล");
+//
+//        LinearLayout content = (LinearLayout) v.findViewById(R.id.dialog_content);
+//
+//        LinearLayout.LayoutParams llPm =
+//                new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT);
+//
+//        float density = getActivity().getResources().getDisplayMetrics().density;
+//        int paddingDp = (int)(7 * density);
+//
+//        LinearLayout llNr = new LinearLayout(getContext());
+//
+//        llNr.setLayoutParams(llPm);
+//        llNr.setOrientation(LinearLayout.VERTICAL);
+//        llNr.setPadding(paddingDp,paddingDp,paddingDp,paddingDp);
+//        llNr.setBackgroundColor(ContextCompat.getColor(getContext(), R.color.angel_white));
+//        llNr.setGravity(Gravity.CENTER_HORIZONTAL);
+//
+//        dialogHeader.setText("เลือกรูปแบบการแสดงผล");
+//
+//        //final RadioButton[] rb = new RadioButton[3];
+//        // Secondary let's standing with radio group
+//        final RadioGroup rg = new RadioGroup(getContext());
+//        rg.setId(0);
+//        rg.setOrientation(RadioGroup.HORIZONTAL);
+//        rg.setGravity(Gravity.CENTER);
+//        rg.setLayoutParams(new RadioGroup.LayoutParams(RadioGroup.LayoutParams.MATCH_PARENT, RadioGroup.LayoutParams.MATCH_PARENT));
+//
+//        rb[0] = new RadioButton(getContext());
+//        rb[0].setText("กราฟเส้น");
+//        rb[0].setId(SellerGraphType.TYPE_GRAPH_LINE+0);
+//
+//        rg.addView(rb[0]);
+//
+//        rb[1] = new RadioButton(getContext());
+//        rb[1].setText("กราฟแท่ง");
+//        rb[1].setId(SellerGraphType.TYPE_GRAPH_BAR+0);
+//
+//        rg.addView(rb[1]);
+//
+//        rb[2] = new RadioButton(getContext());
+//        rb[2].setText("กราฟพาย");
+//        rb[2].setId(SellerGraphType.TYPE_GRAPH_PIE+0);
+//
+//        rg.addView(rb[2]);
+//
+//        rg.check(SellerGraphType.TYPE_GRAPH_PIE+0);
+//
+//        llNr.addView(rg);
+//
+//        content.addView(llNr);
+//
+//        llNr = new LinearLayout(getContext());
+//
+//        llPm.setMargins(0, 14 , 0 , 0);
+//
+//        llNr.setLayoutParams(llPm);
+//        llNr.setOrientation(LinearLayout.HORIZONTAL);
+//        llNr.setPadding(paddingDp,paddingDp,paddingDp,paddingDp);
+//        llNr.setBackgroundColor(ContextCompat.getColor(getContext(), R.color.angel_white));
+//        llNr.setGravity(Gravity.CENTER);
+//
+//        Button submitButton = new Button(getContext());
+//        submitButton.setGravity(Gravity.CENTER);
+//        submitButton.setPaddingRelative(110, paddingDp, 110, paddingDp);
+//        submitButton.setTextColor( ContextCompat.getColor(getContext(), R.color.angel_white) );
+//        submitButton.setBackgroundColor(  ContextCompat.getColor(getContext(), R.color.honest_green) );
+//        submitButton.setText("เลือก");
+//        submitButton.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                int selectedId = rg.getCheckedRadioButtonId();
+//                getDialog().dismiss();
+//
+//                //optionInterface.GraphSelected(selectedId);
+//                Log.e("eeeeee", selectedId+"");
+//            }
+//        });
+//
+//        llNr.addView(submitButton);
+//
+//        content.addView(llNr);
+
+        return v;
+    }
+}
Index: app/src/main/java/user/UserBaseItem.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/user/UserBaseItem.java	(revision )
+++ app/src/main/java/user/UserBaseItem.java	(revision )
@@ -0,0 +1,16 @@
+package user;
+
+/**
+ * Created by Administrator on 15/11/2559.
+ */
+public class UserBaseItem {
+    public int viewType;
+
+    public int getViewType() {
+        return viewType;
+    }
+
+    public void setViewType(int viewType) {
+        this.viewType = viewType;
+    }
+}
Index: app/src/main/java/seller/ViewReportDialogFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/ViewReportDialogFragment.java	(revision )
+++ app/src/main/java/seller/ViewReportDialogFragment.java	(revision )
@@ -0,0 +1,152 @@
+package seller;
+
+import android.annotation.SuppressLint;
+import android.app.Dialog;
+import android.content.Context;
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.v4.app.DialogFragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.Window;
+import android.widget.AdapterView;
+import android.widget.ArrayAdapter;
+import android.widget.Button;
+
+import com.example.administrator.myapplication.R;
+
+import autocomplete.InstantAutocomplete;
+import seller.titlebar.SellerTitleBar;
+import seller.titlebar.InterfaceOnTitleBar;
+import seller.titlebar.SellerTitleDAO;
+import seller.item.ItemSellerTitle;
+
+/**
+ * Created by Administrator on 13/12/2559.
+ */
+public class ViewReportDialogFragment extends DialogFragment {
+
+    private InterfaceOnTitleBar interfaceOnTitleBar;
+
+    private int reportPicked = 0;
+
+    @SuppressLint("ValidFragment")
+    public ViewReportDialogFragment(InterfaceOnTitleBar interfaceOnTitleBar) {
+        this.interfaceOnTitleBar = interfaceOnTitleBar;
+    }
+
+    // ใช้สำหรับรับส่ง Interface ขณะ ปิด/หมุนจอ/ Everything (ใช้ดีมาก)
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+        if (context instanceof InterfaceOnTitleBar) {
+            interfaceOnTitleBar = ((InterfaceOnTitleBar) context);
+        }
+    }
+
+    @Override
+    public void onStart() {
+        super.onStart();
+        Dialog dialog = getDialog();
+        if(dialog != null) {
+            int width = ViewGroup.LayoutParams.MATCH_PARENT;
+            int height = ViewGroup.LayoutParams.WRAP_CONTENT;
+            dialog.getWindow().setLayout(width, height);
+        }
+    }
+
+    @NonNull
+    @Override
+    public Dialog onCreateDialog(Bundle savedInstanceState) {
+        Dialog dialog = super.onCreateDialog(savedInstanceState);
+
+        // request a window without the title
+        dialog.getWindow().requestFeature(Window.FEATURE_NO_TITLE);
+
+        dialog.setCancelable(false);
+        dialog.setCanceledOnTouchOutside(false);
+
+        return dialog;
+    }
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+    }
+
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+
+        setRetainInstance(true);
+
+        View v = inflater.inflate(R.layout.dialog_report_picker, container, false);
+
+        final InstantAutocomplete option = (InstantAutocomplete) v.findViewById(R.id.option);
+
+        final ItemSellerTitle itemSellerTitle = new ItemSellerTitle();
+        itemSellerTitle.setListTitleDescription(SellerTitleBar.getSellerTitleList());
+
+        option.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                option.showDropDown();
+            }
+        });
+        option.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+            @Override
+            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                reportPicked = position;
+            }
+        });
+
+        ArrayAdapter<SellerTitleDAO> autoCompleteAdapter = new ArrayAdapter<>(getContext(), android.R.layout.select_dialog_singlechoice, itemSellerTitle.getListTitleDescription());
+        option.setAdapter(autoCompleteAdapter);
+
+        Button viewDialogDescriptionClose = (Button) v.findViewById(R.id.view_dialog_description_close);
+        viewDialogDescriptionClose.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                getDialog().dismiss();
+            }
+        });
+
+        Button viewDialogDescriptionSubmit = (Button) v.findViewById(R.id.view_dialog_description_submit);
+        viewDialogDescriptionSubmit.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                interfaceOnTitleBar.onTitleChange(itemSellerTitle.listTitleDescription.get(reportPicked).getId(), itemSellerTitle.listTitleDescription.get(reportPicked).getTitle());
+                getDialog().dismiss();
+            }
+        });
+
+        return v;
+    }
+
+    @Override
+    public void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+        if(outState == null) {
+            outState = new Bundle();
+        } else {
+
+            //outState.putParcelable("interface", this.interfaceOnTitleBar);
+        }
+    }
+
+    @Override
+    public void onViewStateRestored(@Nullable Bundle savedInstanceState) {
+        super.onViewStateRestored(savedInstanceState);
+    }
+
+    @Override
+    public void onDestroyView() {
+        Dialog dialog = getDialog();
+        // thank stack
+        // handles https://code.google.com/p/android/issues/detail?id=17423
+        if (dialog != null && getRetainInstance()) {
+            dialog.setDismissMessage(null);
+        }
+        super.onDestroyView();
+    }
+}
Index: app/src/main/res/_A0_seller/layout/activity_seller.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/activity_seller.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/activity_seller.xml	(revision )
@@ -0,0 +1,62 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+
+    android:paddingTop="@dimen/slice_align"
+
+    android:layout_marginTop="-4dp"
+    android:background="@color/little_light_gray"
+
+    tools:context="com.example.administrator.myapplication.SellerActivity">
+
+    <include
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        layout="@layout/view_seller_description"/>
+
+    <android.support.v7.widget.RecyclerView
+
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+
+        android:id="@+id/sellerRecyclerView"
+
+        android:layout_marginTop="@dimen/slice_align"
+
+        android:layout_marginBottom="24dp"
+
+        android:clipToPadding="false">
+    </android.support.v7.widget.RecyclerView>
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:id="@+id/seller_extend_part"
+
+        android:layout_below="@id/sellerRecyclerView"
+
+        android:layout_marginTop="-24dp">
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+
+            android:gravity="left|center"
+
+            android:layout_marginStart="@dimen/slice_align"
+
+            android:text="@string/test_value"
+            android:textColor="@color/stone_gray"/>
+
+    </RelativeLayout>
+
+    <!--<FrameLayout-->
+        <!--android:layout_width="match_parent"-->
+        <!--android:layout_height="wrap_content"-->
+        <!--android:id="@+id/touchInterceptor"></FrameLayout>-->
+
+</LinearLayout>
Index: app/src/main/java/shopFinding/ShopDetailPOJO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/shopFinding/ShopDetailPOJO.java	(revision )
+++ app/src/main/java/shopFinding/ShopDetailPOJO.java	(revision )
@@ -0,0 +1,35 @@
+package shopFinding;
+
+import com.google.gson.annotations.SerializedName;
+
+/**
+ * Created by Administrator on 17/11/2559.
+ */
+public class ShopDetailPOJO {
+    @SerializedName("shop_code")
+    String shopId;
+
+    @SerializedName("shop_name")
+    String shopName;
+
+    public String getShopId() {
+        return shopId;
+    }
+
+    public void setShopId(String shopId) {
+        this.shopId = shopId;
+    }
+
+    public String getShopName() {
+        return shopName;
+    }
+
+    public void setShopName(String shopName) {
+        this.shopName = shopName;
+    }
+
+    @Override
+    public String toString() {
+        return shopId + " : " + shopName;
+    }
+}
Index: app/src/main/res/menu/activity_maps_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/menu/activity_maps_menu.xml	(revision )
+++ app/src/main/res/menu/activity_maps_menu.xml	(revision )
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?>
+<menu xmlns:android="http://schemas.android.com/apk/res/android">
+    <group android:checkableBehavior="single">
+        <!--<item-->
+        <!--android:id="@+id/nav_camera"-->
+        <!--android:icon="@drawable/ic_menu_camera"-->
+        <!--android:title="Import" />-->
+        <!--<item-->
+        <!--android:id="@+id/nav_gallery"-->
+        <!--android:icon="@drawable/ic_menu_gallery"-->
+        <!--android:title="Gallery" />-->
+        <!--<item-->
+        <!--android:id="@+id/nav_slideshow"-->
+        <!--android:icon="@drawable/ic_menu_slideshow"-->
+        <!--android:title="Slideshow" />-->
+        <!--<item-->
+        <!--android:id="@+id/nav_manage"-->
+        <!--android:icon="@drawable/ic_menu_manage"-->
+        <!--android:title="Tools" />-->
+    </group>
+
+    <item android:title="เมนูระบบผู้ใช้งาน">
+        <menu>
+            <item
+                android:id="@+id/nav_user"
+                android:icon="@drawable/ic_menu_send"
+                android:title="เลือกผู้ใช้" />
+        </menu>
+    </item>
+
+    <item android:title="เมนูระบบค้นหา">
+        <menu>
+            <item
+                android:id="@+id/nav_current"
+                android:icon="@drawable/ic_menu_send"
+                android:title="ตำแหน่งปัจจุบัน" />
+            <item
+                android:id="@+id/nav_datetime"
+                android:icon="@drawable/ic_menu_send"
+                android:title="ระบุช่วงเวลา" />
+        </menu>
+    </item>
+</menu>
\ No newline at end of file
Index: app/src/main/java/com/example/administrator/myapplication/SimplyGraph.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/SimplyGraph.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/SimplyGraph.java	(revision )
@@ -0,0 +1,89 @@
+package com.example.administrator.myapplication;
+
+import android.graphics.Color;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+
+import com.github.mikephil.charting.charts.BarChart;
+import com.github.mikephil.charting.data.BarData;
+import com.github.mikephil.charting.data.BarDataSet;
+import com.github.mikephil.charting.data.BarEntry;
+import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;
+import com.github.mikephil.charting.utils.ColorTemplate;
+
+import java.util.ArrayList;
+
+
+public class SimplyGraph extends AppCompatActivity {
+
+    private IBarDataSet dataSet;
+    private Object XAxisValues;
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.simply_graph);
+
+        BarChart chart = (BarChart) findViewById(R.id.chart);
+
+        BarData data = new BarData(getDataSet());
+        //BarData data = new BarData();
+        chart.setData(data);
+        chart.setDescription("My Chart");
+        chart.animateXY(2000, 2000);
+        chart.invalidate();
+    }
+
+    private ArrayList<IBarDataSet> getDataSet() {
+        ArrayList<IBarDataSet> dataSets = null;
+
+        ArrayList<BarEntry> valueSet1 = new ArrayList<>();
+        BarEntry v1e1 = new BarEntry(110.000f, 0); // Jan
+        valueSet1.add(v1e1);
+        BarEntry v1e2 = new BarEntry(40.000f, 1); // Feb
+        valueSet1.add(v1e2);
+        BarEntry v1e3 = new BarEntry(60.000f, 2); // Mar
+        valueSet1.add(v1e3);
+        BarEntry v1e4 = new BarEntry(30.000f, 3); // Apr
+        valueSet1.add(v1e4);
+        BarEntry v1e5 = new BarEntry(90.000f, 4); // May
+        valueSet1.add(v1e5);
+        BarEntry v1e6 = new BarEntry(100.000f, 5); // Jun
+        valueSet1.add(v1e6);
+
+        ArrayList<BarEntry> valueSet2 = new ArrayList<>();
+        BarEntry v2e1 = new BarEntry(150.000f, 0); // Jan
+        valueSet2.add(v2e1);
+        BarEntry v2e2 = new BarEntry(90.000f, 1); // Feb
+        valueSet2.add(v2e2);
+        BarEntry v2e3 = new BarEntry(120.000f, 2); // Mar
+        valueSet2.add(v2e3);
+        BarEntry v2e4 = new BarEntry(60.000f, 3); // Apr
+        valueSet2.add(v2e4);
+        BarEntry v2e5 = new BarEntry(20.000f, 4); // May
+        valueSet2.add(v2e5);
+        BarEntry v2e6 = new BarEntry(80.000f, 5); // Jun
+        valueSet2.add(v2e6);
+
+        BarDataSet barDataSet1 = new BarDataSet(valueSet1, "Brand 1");
+        barDataSet1.setColor(Color.rgb(0, 155, 0));
+        BarDataSet barDataSet2 = new BarDataSet(valueSet2, "Brand 2");
+        barDataSet2.setColors(ColorTemplate.COLORFUL_COLORS);
+
+        dataSets = new ArrayList<>();
+        dataSets.add(barDataSet1);
+        dataSets.add(barDataSet2);
+        return dataSets;
+    }
+
+    private ArrayList<String> getXAxisValues() {
+        ArrayList<String> xAxis = new ArrayList<>();
+        xAxis.add("JAN");
+        xAxis.add("FEB");
+        xAxis.add("MAR");
+        xAxis.add("APR");
+        xAxis.add("MAY");
+        xAxis.add("JUN");
+        return xAxis;
+    }
+}
Index: app/src/main/java/seller/item/ItemSellerStorageDateCover.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/item/ItemSellerStorageDateCover.java	(revision )
+++ app/src/main/java/seller/item/ItemSellerStorageDateCover.java	(revision )
@@ -0,0 +1,75 @@
+package seller.item;
+
+import java.util.List;
+
+/**
+ * Created by Administrator on 20/1/2560.
+ */
+public class ItemSellerStorageDateCover extends SellerBaseItem {
+
+    public String collectionItemCode;
+    public String collectionBal;
+    public String collectionCandidateBal;
+    public String collectionStorage;
+    public String collectionXBar;
+    public String collectionDayCover;
+
+    public List<ItemSellerStorageDateCover> forGraph;
+
+    public ItemSellerStorageDateCover(int type) {
+        super(type);
+        this.forGraph = null;
+    }
+
+    public static ItemSellerStorageDateCover makeItem(int report_id) {
+        return new ItemSellerStorageDateCover(report_id);
+    }
+
+    public String getCollectionItemCode() {
+        return collectionItemCode;
+    }
+
+    public void setCollectionItemCode(String collectionItemCode) {
+        this.collectionItemCode = collectionItemCode;
+    }
+
+    public String getCollectionBal() {
+        return collectionBal;
+    }
+
+    public void setCollectionBal(String collectionBal) {
+        this.collectionBal = collectionBal;
+    }
+
+    public String getCollectionCandidateBal() {
+        return collectionCandidateBal;
+    }
+
+    public void setCollectionCandidateBal(String collectionCandidateBal) {
+        this.collectionCandidateBal = collectionCandidateBal;
+    }
+
+    public String getCollectionStorage() {
+        return collectionStorage;
+    }
+
+    public void setCollectionStorage(String collectionStorage) {
+        this.collectionStorage = collectionStorage;
+    }
+
+    public String getCollectionXBar() {
+        return collectionXBar;
+    }
+
+    public void setCollectionXBar(String collectionXBar) {
+        this.collectionXBar = collectionXBar;
+    }
+
+    public String getCollectionDayCover() {
+        return collectionDayCover;
+    }
+
+    public void setCollectionDayCover(String collectionDayCover) {
+        this.collectionDayCover = collectionDayCover;
+    }
+}
Index: app/src/main/res/_A0_seller/layout/dialog_seller_detail.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/dialog_seller_detail.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/dialog_seller_detail.xml	(revision )
@@ -0,0 +1,66 @@
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="@color/angel_white">
+
+    <!--<ImageView-->
+        <!--android:layout_width="match_parent"-->
+        <!--android:layout_height="120dp"-->
+        <!--android:id="@+id/a"-->
+        <!--android:gravity="center"-->
+        <!--android:background="@color/dark_honest_green"-->
+        <!--android:scaleType="fitCenter" />-->
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:background="@color/rising_green"
+
+        android:paddingLeft="@dimen/round_padding"
+        android:paddingRight="@dimen/round_padding"
+
+        android:paddingTop="@dimen/title_expanded"
+        android:paddingBottom="@dimen/title_expanded">
+
+        <ImageView
+            android:layout_width="36dp"
+            android:layout_height="match_parent"
+
+            android:layout_marginLeft="@dimen/round_padding"
+            android:layout_marginRight="@dimen/round_padding"
+
+            android:id="@+id/backPressedState"
+            android:src="@drawable/ic_arrow_back_white_24dp"
+            android:layout_gravity="start|center_vertical"/>
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:id="@+id/dialog_header"
+            android:text="รายละเอียดยอดขายสินค้า"
+            android:textColor="@color/angel_white"
+            android:textSize="20sp"
+            android:gravity="center|start"
+            android:padding="@dimen/round_padding"
+            />
+    </LinearLayout>
+
+    <android.support.v4.widget.NestedScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/sellerNestedScrollView">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:id="@+id/dialog_content"
+            android:padding="@dimen/round_padding"
+            android:orientation="vertical"
+            android:background="@color/little_light_gray">
+        </LinearLayout>
+
+    </android.support.v4.widget.NestedScrollView>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/view_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/view_menu.xml	(revision )
+++ app/src/main/res/layout/view_menu.xml	(revision )
@@ -0,0 +1,74 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="horizontal"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:gravity="center_vertical"
+    android:layout_marginTop="7dp"
+    android:background="@color/angel_white">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="horizontal"
+        android:padding="@dimen/activity_horizontal_margin"
+        android:background="@color/angel_white">
+
+            <ImageView
+                android:layout_width="48dp"
+                android:layout_height="48dp"
+
+                android:layout_gravity="center_vertical"
+                android:id="@+id/imageSource"
+                android:background="@drawable/icon_rounded"
+                android:tint="@color/angel_white"
+                android:padding="7dp"/>
+        <!--</LinearLayout>-->
+
+        <LinearLayout
+            android:layout_height="wrap_content"
+            android:layout_width="match_parent"
+            android:orientation="vertical"
+            android:paddingRight="@dimen/activity_horizontal_margin"
+
+            android:layout_marginEnd="35dp"
+
+            android:gravity="left">
+
+            <TextView
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:textColor="@color/jet_black"
+                android:textStyle="bold"
+                android:textSize="17sp"
+                android:text="สแกนบาร์โค้ด"
+                android:paddingStart="@dimen/activity_horizontal_margin"
+                android:gravity="center_horizontal"
+                android:visibility="visible"
+                android:id="@+id/menuName"/>
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:gravity="left|center"
+                android:paddingTop="3dp"
+                android:paddingStart="@dimen/activity_horizontal_margin"
+                android:text="dddddddddsdddddddddsdfsdfdsfsdfsdfsddddddddddsdfsdfdsfsdfsdfsddfsdfdsfsdfsdfsd "
+                android:textColor="@color/space_gray"
+                android:id="@+id/detailName" />
+
+        </LinearLayout>
+
+        <ImageView
+            android:layout_width="24dp"
+            android:layout_height="24dp"
+
+            android:layout_gravity="center_vertical"
+
+            android:layout_marginStart="-35dp"
+            android:src="@drawable/ic_chevron_right_gray_24dp"/>
+
+    </LinearLayout>
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/invoice/item/ParcelInvoice.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/invoice/item/ParcelInvoice.java	(revision )
+++ app/src/main/java/invoice/item/ParcelInvoice.java	(revision )
@@ -0,0 +1,74 @@
+package invoice.item;
+
+import com.google.gson.annotations.SerializedName;
+
+import org.parceler.Parcel;
+
+import java.io.Serializable;
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by Administrator on 7/3/2560.
+ */
+
+@Parcel
+public class ParcelInvoice implements Serializable {
+
+	 @SerializedName("test")
+	 public ArrayList<ItemInvoicePreview> listInvoice;
+	 public String latitude;
+	 public String longitude;
+	 public String userID;
+	 public String bitmap;
+
+	 public ParcelInvoice() {}
+
+	 public ParcelInvoice(ArrayList<ItemInvoicePreview> listInvoice, String latitude, String longitude, String userID, String bitmap) {
+			this.listInvoice = listInvoice;
+			this.latitude = latitude;
+			this.longitude = longitude;
+			this.userID = userID;
+			this.bitmap = bitmap;
+	 }
+
+	 public ArrayList<ItemInvoicePreview> getListInvoice() {
+			return listInvoice;
+	 }
+
+	 public void setListInvoice(ArrayList<ItemInvoicePreview> listInvoice) {
+			this.listInvoice = listInvoice;
+	 }
+
+	 public String getLatitude() {
+			return latitude;
+	 }
+
+	 public void setLatitude(String latitude) {
+			this.latitude = latitude;
+	 }
+
+	 public String getLongitude() {
+			return longitude;
+	 }
+
+	 public void setLongitude(String longitude) {
+			this.longitude = longitude;
+	 }
+
+	 public String getUserID() {
+			return userID;
+	 }
+
+	 public void setUserID(String userID) {
+			this.userID = userID;
+	 }
+
+	 public String getBitmap() {
+			return bitmap;
+	 }
+
+	 public void setBitmap(String bitmap) {
+			this.bitmap = bitmap;
+	 }
+}
Index: app/src/main/java/user/user/item/MenuMethod.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/user/user/item/MenuMethod.java	(revision )
+++ app/src/main/java/user/user/item/MenuMethod.java	(revision )
@@ -0,0 +1,12 @@
+package user.user.item;
+
+/**
+ * Created by Administrator on 12/1/2560.
+ */
+public class MenuMethod {
+
+    public static final int T_PHOTO = 12327;
+    public static final int T_BARCODE = 12112;
+
+    public static final int T_REPORT = 9335;
+}
Index: app/src/main/res/layout/activity_ebusiness.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_ebusiness.xml	(revision )
+++ app/src/main/res/layout/activity_ebusiness.xml	(revision )
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingLeft="@dimen/round_padding"
+    android:paddingRight="@dimen/round_padding"
+    android:paddingBottom="@dimen/round_padding"
+    tools:context="com.example.administrator.myapplication.EBusinessActivity">
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/userRecyclerView"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+    </android.support.v7.widget.RecyclerView>
+
+</RelativeLayout>
Index: app/src/main/java/com/example/administrator/myapplication/UserActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/UserActivity.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/UserActivity.java	(revision )
@@ -0,0 +1,507 @@
+package com.example.administrator.myapplication;
+
+import android.app.Activity;
+import android.content.ContentResolver;
+import android.content.Intent;
+import android.content.pm.ActivityInfo;
+import android.content.pm.PackageManager;
+import android.graphics.Bitmap;
+import android.location.Location;
+import android.net.Uri;
+import android.os.Environment;
+import android.os.Parcelable;
+import android.provider.MediaStore;
+import android.support.annotation.LayoutRes;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.v4.app.ActivityCompat;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.content.ContextCompat;
+import android.support.v4.widget.DrawerLayout;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.util.Log;
+import android.widget.FrameLayout;
+import android.widget.Toast;
+
+import com.google.android.gms.common.ConnectionResult;
+import com.google.android.gms.common.api.GoogleApiClient;
+import com.google.android.gms.location.LocationRequest;
+import com.google.android.gms.location.LocationServices;
+import com.google.zxing.integration.android.IntentIntegrator;
+import com.google.zxing.integration.android.IntentResult;
+
+import org.parceler.Parcels;
+
+import java.io.File;
+import java.text.SimpleDateFormat;
+import java.util.ArrayList;
+import java.util.Calendar;
+import java.util.Date;
+import java.util.List;
+
+import AppBar.ApplicationBar;
+import AppBar.BarType;
+import dialog.DialogFragmentData;
+import intent.IntentKeycode;
+import invoice.InvoiceData;
+import invoice.ServiceInvoice;
+import invoice.ViewInvoiceSwitchDialogFragment;
+import invoice.item.ItemInvoicePreview;
+import invoice.item.ParcelInvoice;
+import okhttp3.ResponseBody;
+import retrofit.InterfaceListen;
+import retrofit2.Retrofit;
+import user.InterfaceCamera;
+import user.UserAdapter;
+import user.UserBaseItem;
+import user.user.item.ItemBill;
+import user.user.item.ItemMenu;
+import user.user.item.ItemSection;
+import user.user.item.MenuMethod;
+
+public class UserActivity extends AppCompatActivity implements
+        GoogleApiClient.ConnectionCallbacks,
+        GoogleApiClient.OnConnectionFailedListener,
+        com.google.android.gms.location.LocationListener {
+
+	 	// Menu
+    public static RecyclerView userRecyclerView;
+    public static UserAdapter userAdapter;
+
+    private GoogleApiClient googleApiClient;
+
+    private Uri uri;
+
+	 	// Bundle data
+    private Bundle b = null;
+    private ParcelInvoice pi = null;
+
+    // Dialog Fragment status
+    private boolean mIsStateAlreadySaved = false;
+    private boolean mPendingShowDialog = false;
+	 	private String TAG_NAME = "TEST";
+
+    @Override
+    public void setContentView(@LayoutRes int layoutResID) {
+        DrawerLayout fullLayout = (DrawerLayout) getLayoutInflater().inflate(layoutResID, null);
+
+        FrameLayout frameLayout = (FrameLayout) fullLayout.findViewById(R.id.content);
+
+        getLayoutInflater().inflate(R.layout.activity_user, frameLayout, true);
+
+        super.setContentView(fullLayout);
+
+        new ApplicationBar(this, BarType.TYPE_APPLICATION_NAME).setAppName("User");
+    }
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.activity_main);
+
+        b = new Bundle();
+
+        pi = new ParcelInvoice();
+        pi.setLatitude("0.0000");
+        pi.setLongitude("0.0000");
+
+        googleApiClient = new GoogleApiClient.Builder(this, this, this)
+                .addApi(LocationServices.API)
+                .addConnectionCallbacks(this)
+                .addOnConnectionFailedListener(this)
+                .build();
+
+        userRecyclerView = (RecyclerView) findViewById(R.id.userRecyclerView);
+        userRecyclerView.setLayoutManager(new LinearLayoutManager(this));
+
+        userAdapter = new UserAdapter();
+        userRecyclerView.setAdapter(userAdapter);
+
+        userAdapter.setInterfaceCamera(interfaceCamera);
+        userAdapter.setBundle(b);
+
+        List<UserBaseItem> userBaseItems = new ArrayList<>();
+
+        ItemSection itemSection = new ItemSection();
+        itemSection.setSection("บันทึกสินค้า");
+        itemSection.setColor( ContextCompat.getColor(getApplicationContext(), R.color.lemon_wingless));
+        userBaseItems.add(itemSection);
+
+        ItemMenu itemMenu = null;
+
+        itemMenu = new ItemMenu();
+        itemMenu.setMenuMethod(MenuMethod.T_BARCODE);
+        itemMenu.setImageSource(R.drawable.ic_view_array_black_24dp);
+        itemMenu.setMenuName("แสกนบาร์โค้ด");
+        itemMenu.setImageResourceColor( ContextCompat.getColor(getApplicationContext(), R.color.lemon_wingless));
+        itemMenu.setDetailName("แสกนบาร์โค้ดของสินค้าด้วยโทรศัพท์ของท่าน");
+        userBaseItems.add(itemMenu);
+
+        itemMenu = new ItemMenu();
+        itemMenu.setMenuMethod(MenuMethod.T_PHOTO);
+        itemMenu.setImageSource(R.drawable.ic_camera_black_24dp);
+        itemMenu.setMenuName("ถ่ายภาพสินค้า");
+        itemMenu.setImageResourceColor( ContextCompat.getColor(getApplicationContext(), R.color.lemon_wingless));
+        itemMenu.setDetailName("ถ่ายภาพประกอบรายละเอียดของสินค้า");
+        itemMenu.setIntent(new Intent(MediaStore.ACTION_IMAGE_CAPTURE));
+        userBaseItems.add(itemMenu);
+
+        userAdapter.setRecyclerAdapter(userBaseItems);
+        userAdapter.notifyDataSetChanged();
+    }
+
+    @Override
+    protected void onActivityResult(int requestCode, int resultCode, Intent data) {
+        System.gc();
+
+        Log.e("Intent ended", "true | " + requestCode);
+
+        if( resultCode == RESULT_OK ) {
+            if( requestCode == IntentIntegrator.REQUEST_CODE ) {
+                // ยิงบาร์โค้ด หรือ QR Code
+                IntentResult scanningResult = IntentIntegrator.parseActivityResult(requestCode, resultCode, data);
+
+                if( scanningResult != null ) {
+                    String scanContent = scanningResult.getContents();
+                    String scanFormat = scanningResult.getFormatName();
+
+                    if( b != null && b.containsKey(InvoiceData.INVOICE_CASE)) {
+											  Parcelable wrapped = null;
+
+											  int mode = b.getInt(InvoiceData.INVOICE_CASE);
+                        switch( mode ) {
+													 default:
+													 case InvoiceData.INVOICE_CASE_INVOICE_PREVIEW :
+															// ผลลัพธ์จากการสแกน ใบสั่งสินค้า
+															Toast toast = Toast.makeText(getApplicationContext(),
+																		 "สแกนใบสั่งสินค้า " + scanContent + " เสร็จสิ้น", Toast.LENGTH_LONG);
+															toast.show();
+
+															if( pi != null ) {
+																  SimpleDateFormat format = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
+																 	Calendar c = Calendar.getInstance();
+
+																 	format.format(c.getTime());
+
+																 	ItemInvoicePreview el = new ItemInvoicePreview();
+																 	el.setInvoicePreview(scanContent.trim());
+																 	el.setInvoiceDate(format.format(c.getTime()));
+
+																 	ArrayList<ItemInvoicePreview> aList = null;
+
+																 	if( pi.getListInvoice() == null ) {
+																		  aList = new ArrayList<>();
+																  } else {
+																  		 aList = pi.getListInvoice();
+																  }
+																  aList.add(el);
+																  pi.setListInvoice(aList);
+															}
+
+															wrapped = Parcels.wrap(pi);
+															b.putParcelable(InvoiceData.INVOICE_PARCEL, wrapped);
+
+															// Create dialog tag
+															b.putInt(DialogFragmentData.DIALOG_FRAGMENT_TAG, DialogFragmentData.DIALOG_FRAGMENT_TAG_INVOICE);
+
+															try {
+																 showInvoiceSwitchDialogFragment(b);
+															} catch( IllegalStateException ignored ) {
+																 Log.e("error","open dialog catch true");
+																 // There's no way to avoid getting this if saveInstanceState has already been called.
+															}
+															break;
+													 case InvoiceData.INVOICE_CASE_INVOICE_USER_ID :
+															// ผลลัพธ์จากการสแกน รหัสพนักงาน
+															//b.putString(InvoiceData.USER_ID, scanContent);
+															if( pi != null ) {
+																  pi.setUserID(scanContent.trim());
+																  wrapped = Parcels.wrap(pi);
+																  b.putParcelable(InvoiceData.INVOICE_PARCEL, wrapped);
+															}
+
+															ParcelInvoice temp = Parcels.unwrap( b.getParcelable(InvoiceData.INVOICE_PARCEL) );
+
+															for( ItemInvoicePreview i : temp.getListInvoice() ) {
+																	 Log.e("Invoice Preview", i.getInvoicePreview());
+																	 Log.e("Invoice Date", i.getInvoiceDate());
+															}
+															Log.e("Invoice Image Path", temp.getBitmap());
+															Log.e("Invoice Lat", temp.getLatitude());
+															Log.e("Invoice Lng", temp.getLongitude());
+															Log.e("Invoice User Id", temp.getUserID());
+
+															async();
+															break;
+                        }
+                    }
+                }
+
+            } else if (requestCode == 9999 ) {
+							 Toast.makeText(this, "Saved.", Toast.LENGTH_SHORT).show();
+
+							 getContentResolver().notifyChange(uri, null);
+							 ContentResolver cr = getContentResolver();
+
+							 try {
+
+								 Bitmap bitmap = MediaStore.Images.Media.getBitmap(cr, uri);
+								 Toast.makeText(getApplicationContext()
+												 , uri.getPath(), Toast.LENGTH_SHORT).show();
+
+							 } catch( Exception e ) {
+								 e.printStackTrace();
+							 }
+            } else if( requestCode == RESULT_CANCELED ) {
+              Toast.makeText(this, "Picture was not taken", Toast.LENGTH_SHORT).show();
+            } else if( requestCode == IntentKeycode.RESULT_CANVAS ) {
+
+                Log.e("OPEN_CAMERA_SMDD", "true");
+
+                // บังคับเปิดกล้อง สแกนบัตรพนักงาน
+                // กลับมาจาก canvas Activity (หลังจากวาดรูปเสร็จ)
+                if( data != null ) {
+									  if( pi != null )
+											  pi.setBitmap(data.getExtras().getString(InvoiceData.ENCODED_IMAGE_PATH));
+                    interfaceCamera.onBarcodeScan(InvoiceData.INVOICE_CASE_INVOICE_USER_ID, InvoiceData.INVOICE_PREVIEW_USER_ID, R.layout.view_barcode_next);
+                } else {
+                    Log.e("system tracking", "canvas data is null");
+                }
+            }
+        } else {
+					 // กรณีกด back กลับมา (Back press state pressed.)
+					 if( requestCode == IntentIntegrator.REQUEST_CODE ) {
+							 if ( b != null && b.containsKey(InvoiceData.INVOICE_CASE)) {
+										int mode = b.getInt(InvoiceData.INVOICE_CASE);
+										switch( mode ) {
+											  default :
+											  case InvoiceData.INVOICE_CASE_INVOICE_PREVIEW :
+														 if( pi.getListInvoice()!= null && pi.getListInvoice().size() != 0 ) {
+
+																 // ใส่ dialog tag
+																 b.putInt(DialogFragmentData.DIALOG_FRAGMENT_TAG, DialogFragmentData.DIALOG_FRAGMENT_TAG_INVOICE);
+																 try {
+																	 showInvoiceSwitchDialogFragment(b);
+																 } catch( IllegalStateException ignored ) {
+																		Log.e("error","Open dialog catch true");
+																	// There's no way to avoid getting this if saveInstanceState has already been called.
+																 }
+														 }
+														 break;
+											  case InvoiceData.INVOICE_CASE_INVOICE_USER_ID :
+
+														 if( pi != null ) {
+																 pi.setUserID(InvoiceData.NON_VALUES);
+																 Parcelable wrapped = Parcels.wrap(pi);
+																 b.putParcelable(InvoiceData.INVOICE_PARCEL, wrapped);
+																 async();
+														 }
+														 break;
+										}
+							}
+					 } else if( requestCode == IntentKeycode.RESULT_CANVAS ) {
+						 	// ยกเลิกการวาดรูป
+							b.putInt(DialogFragmentData.DIALOG_FRAGMENT_TAG, DialogFragmentData.DIALOG_FRAGMENT_TAG_INVOICE);
+							try {
+								 showInvoiceSwitchDialogFragment(b);
+							} catch( IllegalStateException ignored ) {
+								 Log.e("error","open dialog catch true");
+								 // There's no way to avoid getting this if saveInstanceState has already been called.
+							}
+					 }
+					 Log.e("error", "result code is not ok | Request code = "+requestCode);
+        }
+    }
+
+	 	protected void async() {
+			 if( b != null && pi != null ) {
+					 new ServiceInvoice().callServer(interfaceListen, 0, b);
+			 }
+		}
+
+	 	private InterfaceListen interfaceListen = new InterfaceListen() {
+			 @Override
+			 public void onResponse(Object data, Retrofit retrofit) {
+					Toast.makeText(UserActivity.this, "บันทึกข้อมูลเสร็จสิ้น", Toast.LENGTH_LONG).show();
+					b = new Bundle();
+					pi = new ParcelInvoice();
+			 }
+
+			 @Override
+			 public void onBodyError(ResponseBody responseBodyError) {}
+
+			 @Override
+			 public void onBodyErrorIsNull() {}
+
+			 @Override
+			 public void onFailure(Throwable t) {}
+		};
+
+    protected InterfaceCamera interfaceCamera = new InterfaceCamera() {
+        @Override
+        public void onCapture() {
+            int REQUEST_CAMERA = 17;
+            Intent intent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
+            String timeStamp = new SimpleDateFormat("yyyyMMdd_HHmmss").format(new Date());
+            String imageFileName = "IMG_" + timeStamp + ".jpg";
+            File f = new File(Environment.getExternalStorageDirectory()
+                    , "DCIM/Camera/" + imageFileName);
+
+            uri = Uri.fromFile(f);
+
+            intent.putExtra(MediaStore.EXTRA_OUTPUT, uri);
+            intent.putExtra("imageFileName", imageFileName);
+
+            startActivityForResult(Intent.createChooser(intent
+                    , "กรุณาเลือกแอปพลิเคชันกล้อง"), REQUEST_CAMERA);
+        }
+
+        @Override
+        public void onBarcodeScan(int mode, String preview,@LayoutRes int layoutID) {
+					 if( b != null )
+							 b.putInt(InvoiceData.INVOICE_CASE, mode);
+
+					 //setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);
+
+					 Intent t = new Intent(UserActivity.this, CustomScannerActivity.class);
+
+					 Bundle zxingBn = new Bundle();
+					 zxingBn.putInt(InvoiceData.INVOICE_CASE, mode);
+					 zxingBn.putString(InvoiceData.INVOICE_PREVIEW, preview);
+					 t.putExtras(zxingBn);
+					 startActivityForResult(t, IntentIntegrator.REQUEST_CODE);
+//					 IntentIntegrator scanIntegrator = new IntentIntegrator( UserActivity.this );
+//					 scanIntegrator.setDesiredBarcodeFormats(IntentIntegrator.ONE_D_CODE_TYPES);
+//					 scanIntegrator.setCameraId(0);  // Use a specific     camera of the device
+//					 scanIntegrator.setPrompt("Scan a barcode");
+//            //scanIntegrator.addExtra("PROMPT_MESSAGE", "");
+//					 //scanIntegrator.
+//					 //scanIntegrator.setCaptureLayout(layoutID);
+//					 scanIntegrator.initiateScan();
+        }
+    };
+
+    private void showInvoiceSwitchDialogFragment(Bundle b) {
+        // สเต็บนี้ยัง งง ๆ นะว่าทำงานยังไง = =//
+        if( mIsStateAlreadySaved ) {
+            mPendingShowDialog = true;
+            Log.e("dialog state", "2-times set show with mIsStateAlreadySaved is true.");
+        } else {
+            if( b != null ) {
+							 	FragmentManager fm = getSupportFragmentManager();
+								ViewInvoiceSwitchDialogFragment dialogFragment = new ViewInvoiceSwitchDialogFragment(interfaceCamera, b);
+								dialogFragment.show(fm, TAG_NAME);
+            } else {
+                Log.e("error" , "System error because bundle is null when dialog is setting up open individual away.");
+            }
+        }
+    }
+
+    @Override
+    protected void onStart() {
+        super.onStart();
+        googleApiClient.connect();
+    }
+
+    @Override
+    protected void onResumeFragments() {
+        super.onResumeFragments();
+        mIsStateAlreadySaved = false;
+        if( mPendingShowDialog ) {
+            mPendingShowDialog = false;
+
+					 	if( b != null && b.containsKey(DialogFragmentData.DIALOG_FRAGMENT_TAG) ) {
+							 	switch( b.getInt(DialogFragmentData.DIALOG_FRAGMENT_TAG) ) {
+									 case DialogFragmentData.DIALOG_FRAGMENT_TAG_INVOICE :
+											showInvoiceSwitchDialogFragment(b);
+											Log.e("dialog state", "Resume fragments with mPendingShowDialog is true");
+											break;
+									 case DialogFragmentData.DIALOG_FRAGMENT_TAG_AUTHEN :
+											Log.e("dialog state", "Resume fragments with mPendingShowDialog is true");
+											// dialog login
+											break;
+									 default:
+											Log.e("dialog state", "Error");
+											break;
+								}
+						}
+        }
+    }
+
+    @Override
+    protected void onPause() {
+        super.onPause();
+        mIsStateAlreadySaved = true;
+        Log.e("dialog state", "Pause");
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        if( googleApiClient != null && googleApiClient.isConnected() ) {
+            googleApiClient.disconnect();
+        }
+    }
+
+    @Override
+    protected void onSaveInstanceState(Bundle outState) {
+        super.onSaveInstanceState(outState);
+        Parcelable wrapped = Parcels.wrap(pi);
+        outState.putParcelable(InvoiceData.INVOICE_PARCEL, wrapped);
+        outState.putBundle(InvoiceData.STATE_BUNDLE, b);
+    }
+
+    @Override
+    protected void onRestoreInstanceState(Bundle savedInstanceState) {
+        super.onRestoreInstanceState(savedInstanceState);
+        if( savedInstanceState != null ) {
+            b = savedInstanceState.getBundle(InvoiceData.STATE_BUNDLE);
+            if( savedInstanceState.containsKey(InvoiceData.INVOICE_PARCEL) ) {
+                pi = Parcels.unwrap(savedInstanceState.getParcelable(InvoiceData.INVOICE_PARCEL));
+                Log.e("error", "Welcome back");
+            }
+        } else {
+            b = new Bundle();
+            pi = new ParcelInvoice();
+					 	pi.setLatitude("0.0000");
+					 	pi.setLongitude("0.0000");
+        }
+    }
+
+    @Override
+    public void onConnected(@Nullable Bundle bundle) {
+        LocationRequest locationRequest = new LocationRequest()
+                .setPriority(LocationRequest.PRIORITY_HIGH_ACCURACY)
+                .setInterval(10000);
+        Log.i("vvvvvv","GPS is now connected.");
+        if( ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED && ActivityCompat.checkSelfPermission(this, android.Manifest.permission.ACCESS_COARSE_LOCATION) != PackageManager.PERMISSION_GRANTED ) {
+            // TODO: Consider calling
+            return;
+        }
+        LocationServices.FusedLocationApi.requestLocationUpdates(googleApiClient, locationRequest, this);
+    }
+
+    @Override
+    public void onConnectionSuspended(int i) {
+
+    }
+
+    @Override
+    public void onConnectionFailed(@NonNull ConnectionResult connectionResult) {
+
+    }
+
+    @Override
+    public void onLocationChanged(Location location) {
+        if( pi != null && b != null ) {
+            pi.setLatitude( location.getLatitude() + "" );
+            pi.setLongitude( location.getLongitude() + "" );
+
+					  Parcelable wrapped = Parcels.wrap(pi);
+					  b.putParcelable(InvoiceData.INVOICE_PARCEL, wrapped);
+        }
+    }
+}
Index: app/src/main/java/seller/titlebar/SellerTitleBar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/titlebar/SellerTitleBar.java	(revision )
+++ app/src/main/java/seller/titlebar/SellerTitleBar.java	(revision )
@@ -0,0 +1,98 @@
+package seller.titlebar;
+
+import android.util.Log;
+
+import com.google.gson.Gson;
+import com.google.gson.reflect.TypeToken;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import seller.TypeSellerOptional;
+import seller.TypeSellerReport;
+
+/**
+ * Created by Administrator on 17/11/2559.
+ */
+public class SellerTitleBar {
+
+    private static String sellerTitle = "\n" +
+            "[\n" +
+            "    {\n" +
+//            "           \"title\" : \"ยอดขายผลิตภัณฑ์ตาม Collection\"\n," +
+//            "           \"id\" : " + TypeSellerReport.TYPE_SELLER_COLLECTION +
+//            "    },{\n" +
+//            "           \"title\" : \"ยอดขายผลิตภัณฑ์สูงสุด 10 อันดับ\"\n," +
+//            "           \"id\" : " + TypeSellerReport.TYPE_SELLER_BEST_SELLER +
+//            "    },{\n" +
+            "           \"title\" : \"เรียงตาม Day Cover ของ Item\"\n," +
+            "           \"id\" : " + TypeSellerReport.TYPE_STORAGE_DATE_COVER +
+//            "    },{\n" +
+//            "           \"title\" : \"เรียงตามสินค้าที่ไม่มีการเคลื่อนไหว\"\n," +
+//            "           \"id\" : " + TypeSellerReport.TYPE_STORAGE_UNDEFINED_DAY_COVER +
+            "    },{\n" +
+            "           \"title\" : \"เรียงตามจำนวน Stock ปัจจุบัน\"\n," +
+            "           \"id\" : " + TypeSellerReport.TYPE_STOCK_KEEPER +
+            "    },{\n" +
+            "           \"title\" : \"เรียงตามยอดขายผลิตภัณฑ์ Month to Date\"\n," +
+            "           \"id\" : " + TypeSellerReport.TYPE_BEST_SELLER_MONTH_TO_DATE +
+            "    }\n" +
+            "]\n";
+
+    private static String sellerRange = "";
+
+    private static String sellerOptional = "\n" +
+            "  [\n" +
+            "    {\n" +
+            "      \"optional\" : \"TOP 10\"\n," +
+            "\"id\" : " + TypeSellerOptional.TYPE_TOP_10 +
+            "    },{\n" +
+            "      \"optional\" : \"LAST 10\"\n," +
+            "\"id\" : " + TypeSellerOptional.TYPE_LAST_10 +
+            "    }\n" +
+            "    ]\n";
+
+    public static List<SellerTitleDAO> getSellerTitleList() {
+        Gson gson = new Gson();
+
+        List<SellerTitleDAO> a = new ArrayList<>();
+        try {
+            java.lang.reflect.Type listType = new TypeToken<ArrayList<SellerTitleDAO>>(){}.getType();
+             a = gson.fromJson(sellerTitle, listType);
+        } catch (Exception e) {
+            e.printStackTrace();
+            Log.e("error", e.getMessage());
+        }
+        return a;
+    }
+
+    public static List<SellerRangeDAO> getSellerRangeList() {
+        Gson gson = new Gson();
+
+        List<SellerRangeDAO> a = new ArrayList<>();
+        try {
+            java.lang.reflect.Type listType = new TypeToken<ArrayList<SellerRangeDAO>>(){}.getType();
+
+            a = gson.fromJson(sellerRange, listType);
+        } catch (Exception e) {
+            e.printStackTrace();
+            Log.e("error", e.getMessage());
+        }
+        return a;
+    }
+
+    public static List<SellerOptionalDAO> getSellerOptional() {
+        Gson gson = new Gson();
+
+        List<SellerOptionalDAO> a = new ArrayList<>();
+        try {
+            java.lang.reflect.Type listType = new TypeToken<ArrayList<SellerOptionalDAO>>(){}.getType();
+
+            a = gson.fromJson(sellerOptional, listType);
+        } catch (Exception e) {
+            e.printStackTrace();
+            Log.e("error", e.getMessage());
+        }
+        return a;
+    }
+}
Index: app/src/main/java/invoice/item/ItemInvoicePreview.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/invoice/item/ItemInvoicePreview.java	(revision )
+++ app/src/main/java/invoice/item/ItemInvoicePreview.java	(revision )
@@ -0,0 +1,29 @@
+package invoice.item;
+
+import java.io.Serializable;
+
+/**
+ * Created by Administrator on 7/3/2560.
+ */
+
+public class ItemInvoicePreview implements Serializable {
+
+	 private String InvoicePreview;
+	 private String InvoiceDate;
+
+	 public String getInvoicePreview() {
+			return InvoicePreview;
+	 }
+
+	 public void setInvoicePreview(String invoicePreview) {
+			InvoicePreview = invoicePreview;
+	 }
+
+	 public String getInvoiceDate() {
+			return InvoiceDate;
+	 }
+
+	 public void setInvoiceDate(String invoiceDate) {
+			InvoiceDate = invoiceDate;
+	 }
+}
Index: app/src/main/java/location/LocationData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/location/LocationData.java	(revision )
+++ app/src/main/java/location/LocationData.java	(revision )
@@ -0,0 +1,8 @@
+package location;
+
+/**
+ * Created by Administrator on 6/12/2559.
+ */
+public class LocationData {
+    public static String usr_mac_address = "";
+}
Index: app/src/main/res/layout/activity_user.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_user.xml	(revision )
+++ app/src/main/res/layout/activity_user.xml	(revision )
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/little_light_gray"
+    android:paddingLeft="5dp"
+    android:paddingRight="5dp"
+    tools:context="com.example.administrator.myapplication.UserActivity">
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/userRecyclerView"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+    </android.support.v7.widget.RecyclerView>
+
+</RelativeLayout>
Index: app/src/main/java/invoice/InvoicePOJO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/invoice/InvoicePOJO.java	(revision )
+++ app/src/main/java/invoice/InvoicePOJO.java	(revision )
@@ -0,0 +1,24 @@
+package invoice;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+import java.io.Serializable;
+
+/**
+ * Created by Administrator on 6/3/2560.
+ */
+
+public class InvoicePOJO {
+    @SerializedName("status")
+    @Expose
+    private String status;
+
+    public String getStatus() {
+        return status;
+    }
+
+    public void setStatus(String status) {
+        this.status = status;
+    }
+}
Index: app/src/main/java/location/LocationDialogMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/location/LocationDialogMenu.java	(revision )
+++ app/src/main/java/location/LocationDialogMenu.java	(revision )
@@ -0,0 +1,86 @@
+package location;
+
+import android.app.Activity;
+import android.app.Dialog;
+import android.os.Handler;
+import android.support.v4.app.FragmentActivity;
+import android.support.v4.app.FragmentManager;
+import android.support.v7.app.AppCompatActivity;
+import android.view.Gravity;
+import android.view.View;
+import android.view.Window;
+import android.view.WindowManager;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.LocationActivity;
+import com.example.administrator.myapplication.MyDialogFragment;
+import com.example.administrator.myapplication.R;
+import com.google.android.gms.maps.GoogleMap;
+
+import seller.InterfaceOnOption;
+
+/**
+ * Created by Administrator on 6/12/2559.
+ */
+public class LocationDialogMenu {
+
+    private Activity activity;
+
+    private Dialog dialog;
+
+    public void showDialog(final AppCompatActivity activity, final GoogleMap mMap, final String usr_mac_address) {
+
+        this.activity = activity;
+
+        final FragmentManager fm = activity.getSupportFragmentManager();
+
+        dialog = new Dialog(activity);
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
+        dialog.setCancelable(false);
+        dialog.setContentView(R.layout.dialog_location_option);
+
+        ImageView dialogButton = (ImageView) dialog.findViewById(R.id.dialog_close);
+        dialogButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                dialog.dismiss();
+            }
+        });
+
+        WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
+        lp.copyFrom(dialog.getWindow().getAttributes());
+        lp.width = WindowManager.LayoutParams.MATCH_PARENT;
+        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
+        lp.gravity = Gravity.CENTER;
+
+        dialog.getWindow().setAttributes(lp);
+
+        TextView dialogHeader = (TextView) dialog.findViewById(R.id.dialog_header);
+        dialogHeader.setText("ส่วนแสดงผลเพิ่มเติม");
+
+        LinearLayout rangeTimePicked = (LinearLayout) dialog.findViewById(R.id.layout_range_picked);
+
+        if(rangeTimePicked != null) {
+            rangeTimePicked.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    dialog.dismiss();
+                    Handler handler = new Handler();
+                    handler.postDelayed(new Runnable() {
+                        @Override
+                        public void run() {
+                            //new LocationDialogRangeTime().showDialog(activity);
+
+                            MyDialogFragment newFragment = new MyDialogFragment(mMap, usr_mac_address);
+                            newFragment.show(fm, "Open Dialog");
+                        }
+                    }, 500);
+                }
+            });
+        }
+
+        dialog.show();
+    }
+}
Index: app/src/main/res/layout/view_login.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/view_login.xml	(revision )
+++ app/src/main/res/layout/view_login.xml	(revision )
@@ -0,0 +1,86 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:weightSum="2"
+    android:orientation="vertical"
+    tools:context="com.example.administrator.myapplication.MainActivity">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_weight="1"
+        android:background="@color/seasonal_orange">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="horizontal"
+            android:id="@+id/users">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:orientation="vertical">
+
+
+                <TextView
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:text="User"
+                    android:gravity="top|right"
+                    android:paddingTop="25dp"
+                    android:paddingRight="25dp"
+                    android:textSize="35sp"
+                    android:textColor="@color/funny_dark_pink"/>
+
+                <ImageView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="left"
+                    android:src="@drawable/ic_person_pink_24dp" />
+            </LinearLayout>
+
+        </LinearLayout>
+
+    </LinearLayout>
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:layout_weight="1"
+        android:gravity="left"
+
+        android:id="@+id/admin"
+
+        android:background="@color/funny_dark_pink">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="vertical">
+
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:text="Administrator"
+                android:gravity="top|left"
+                android:paddingTop="25dp"
+                android:paddingLeft="25dp"
+                android:textSize="35sp"
+                android:textColor="@color/seasonal_orange"/>
+
+                <ImageView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="right"
+                    android:src="@drawable/ic_person_orange_24dp" />
+        </LinearLayout>
+
+    </LinearLayout>
+
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/seller/services/retrofit/ServiceCollection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/services/retrofit/ServiceCollection.java	(revision )
+++ app/src/main/java/seller/services/retrofit/ServiceCollection.java	(revision )
@@ -0,0 +1,191 @@
+package seller.services.retrofit;
+
+import android.util.Log;
+
+
+import java.util.List;
+import java.util.concurrent.TimeUnit;
+
+import URL.ServiceURL;
+import log.LogIndentify;
+import okhttp3.OkHttpClient;
+import retrofit2.Retrofit;
+import retrofit2.adapter.rxjava.RxJavaCallAdapterFactory;
+import retrofit2.converter.gson.GsonConverterFactory;
+import rx.Observable;
+import rx.Observer;
+import rx.android.schedulers.AndroidSchedulers;
+import rx.schedulers.Schedulers;
+import seller.SellerData;
+import seller.TypeSellerReport;
+import seller.pojo.SellerBestSellerMonthToDatePOJO;
+import seller.pojo.SellerBestSellerPOJO;
+import seller.pojo.SellerCollectionPOJO;
+import seller.pojo.SellerStockKeeperPOJO;
+import seller.pojo.SellerStorageDateCoverPOJO;
+import seller.services.prototype.InterfaceBestSeller;
+import seller.services.prototype.InterfaceBestSellerMonthToDate;
+import seller.services.prototype.InterfaceCollection;
+import retrofit.InterfaceListen;
+import seller.services.prototype.InterfaceStorageDateCover;
+
+/**
+ * Created by Administrator on 18/11/2559.
+ */
+public class ServiceCollection {
+
+    private void styzf(Observable<?> observable, final InterfaceListen listener, final Retrofit retrofit) {
+        observable.subscribeOn(Schedulers.io())
+            .observeOn(AndroidSchedulers.mainThread())
+            .subscribe(new Observer<Object>() {
+                @Override
+                public void onCompleted() {}
+
+                @Override
+                public void onError(Throwable e) {
+                    Log.e("error", e.getMessage().toString() + " " + LogIndentify._LOG_RETROFIT_ERROR_[1]);
+                }
+
+                @Override
+                public void onNext(Object data) {
+                    if (data == null) {
+                        Log.e("error", "Retrofit got error is null.");
+                        listener.onBodyErrorIsNull();
+                    } else {
+                        listener.onResponse( data, retrofit );
+                    }
+                }
+            });
+    }
+
+    public void callServer(final InterfaceListen listener, int reportId, String shopCode, Object data) {
+
+        int unitTiming = 600;
+
+        OkHttpClient okHttpClient = new OkHttpClient().newBuilder()
+                .connectTimeout(unitTiming, TimeUnit.SECONDS)
+                .readTimeout(unitTiming, TimeUnit.SECONDS)
+                .writeTimeout(unitTiming, TimeUnit.SECONDS)
+                .build();
+
+        final Retrofit retrofit = new Retrofit.Builder()
+                .baseUrl(ServiceURL.PROCUCT_BASE_URL)
+                .client(okHttpClient)
+                .addConverterFactory(GsonConverterFactory.create())
+                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())
+                .build();
+
+        if (reportId == TypeSellerReport.TYPE_SELLER_COLLECTION) {
+            InterfaceCollection interfaceCollection = retrofit.create( InterfaceCollection.class );
+            Observable<SellerCollectionPOJO> observable = null;
+            if(data == null) {
+                //observable = interfaceCollection.getStorageTwice(shopCode);
+            } else {
+                if(data instanceof List && ((List<String>) data).get(0).equals(SellerData._PURE_DATA_TRANSFER_PORT_)) {
+                    observable = interfaceCollection.getStorageTwice(shopCode);
+                } else {
+                    observable = interfaceCollection.getStorageTwiceByItemCode(shopCode, "");
+                }
+            }
+
+            this.styzf(observable, listener, retrofit);
+        } else if (reportId == TypeSellerReport.TYPE_SELLER_BEST_SELLER) {
+            InterfaceBestSeller interfaceBestSeller = retrofit.create( InterfaceBestSeller.class );
+            Observable<SellerBestSellerPOJO> observable = null;
+
+            if(data == null) {
+            } else {
+                if(data instanceof List && ((List<String>) data).get(0).equals(SellerData._PURE_DATA_TRANSFER_PORT_)) {
+                    int BestSellerOptional = SellerData.reportOptional;
+                    observable = interfaceBestSeller.getBestSellerTwice(shopCode, 0, BestSellerOptional);
+                } else {
+                    observable = interfaceBestSeller.getBestSellerByItemCode(shopCode, "", SellerData.dataSetNumber);
+                }
+            }
+
+            this.styzf(observable, listener, retrofit);
+        } else if (reportId == TypeSellerReport.TYPE_BEST_SELLER_MONTH_TO_DATE) {
+
+            InterfaceBestSellerMonthToDate styzfInterface = retrofit.create( InterfaceBestSellerMonthToDate.class );
+            Observable<List<SellerBestSellerMonthToDatePOJO>> observable = null;
+
+            if(data == null) {
+
+            } else {
+                if(data instanceof List && ((List<String>) data).get(0).equals(SellerData._PURE_DATA_TRANSFER_PORT_)) {
+                    observable = styzfInterface.getBestSellerMonthToDate(shopCode);
+                }
+            }
+
+            this.styzf(observable, listener, retrofit);
+        } else if (reportId == TypeSellerReport.TYPE_STORAGE_DATE_COVER) {
+
+            InterfaceStorageDateCover styzfInterface = retrofit.create( InterfaceStorageDateCover.class );
+            Observable<List<SellerStorageDateCoverPOJO>> observable = null;
+
+            if(data == null) {
+
+            } else {
+                if(data instanceof List && (((List) data).get(0).equals(SellerData._PURE_DATA_TRANSFER_PORT_))) {
+                    observable = styzfInterface.getStorageDateCover(shopCode);
+                } else {
+                    observable = styzfInterface.getSkuDayCover(shopCode, (String) ((List) data).get(0));
+                }
+            }
+
+            this.styzf(observable, listener, retrofit);
+        } else if (reportId == TypeSellerReport.TYPE_STORAGE_UNDEFINED_DAY_COVER) {
+
+            InterfaceStorageDateCover styzfInterface = retrofit.create( InterfaceStorageDateCover.class );
+            Observable<List<SellerStorageDateCoverPOJO>> observable = null;
+
+            if(data == null) {
+
+            } else {
+                if(data instanceof List && (((List) data).get(0).equals(SellerData._PURE_DATA_TRANSFER_PORT_))) {
+                    observable = styzfInterface.getSkuUndefinedDayCover(shopCode, "", "true");
+                } else {
+                    observable = styzfInterface.getSkuUndefinedDayCover(shopCode, (String) ((List) data).get(0), "true");
+                }
+            }
+
+            this.styzf(observable, listener, retrofit);
+        } else if (reportId == TypeSellerReport.TYPE_SELLER_SUB_SKU_DAY_COVER) {
+
+            InterfaceStorageDateCover styzfInterface = retrofit.create( InterfaceStorageDateCover.class );
+            Observable<List<SellerStorageDateCoverPOJO>> observable = null;
+
+            if(data == null) {
+
+            } else {
+                if(data instanceof List) {
+                    if (((List) data).get(0).equals(SellerData._PURE_DATA_TRANSFER_PORT_)) {}
+                    else {
+                        observable = styzfInterface.getSkuDayCover(shopCode, (String) ((List) data).get(0));
+                    }
+                } else {
+                    // data ไม่ใช่ List
+                }
+            }
+
+            this.styzf(observable, listener, retrofit);
+        } else if (reportId == TypeSellerReport.TYPE_STOCK_KEEPER) {
+            InterfaceCollection styzfInterface = retrofit.create( InterfaceCollection.class );
+            Observable<List<SellerStockKeeperPOJO>> observable = null;
+
+            if(data == null) {
+
+            } else {
+                if(data instanceof List) {
+                    if (((List) data).get(0).equals(SellerData._PURE_DATA_TRANSFER_PORT_)) {
+                        observable = styzfInterface.getStockKeeper(shopCode);
+                    }
+                } else {
+                    // data ไม่ใช่ List
+                }
+
+                this.styzf(observable, listener, retrofit);
+            }
+        }
+    }
+}
Index: app/src/main/java/location/services/LocationRetrofit.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/location/services/LocationRetrofit.java	(revision )
+++ app/src/main/java/location/services/LocationRetrofit.java	(revision )
@@ -0,0 +1,59 @@
+package location.services;
+
+import android.util.Log;
+
+import java.util.List;
+
+import URL.ServiceURL;
+import location.pojo.MacAddressPOJO;
+import retrofit2.Retrofit;
+import retrofit2.adapter.rxjava.RxJavaCallAdapterFactory;
+import retrofit2.converter.gson.GsonConverterFactory;
+import rx.Observable;
+import rx.Observer;
+import rx.android.schedulers.AndroidSchedulers;
+import rx.schedulers.Schedulers;
+import retrofit.InterfaceListen;
+
+/**
+ * Created by Administrator on 6/12/2559.
+ */
+public class LocationRetrofit {
+
+    private void styzf(Observable<?> observable, final InterfaceListen listener, final Retrofit retrofit) {
+        observable.subscribeOn(Schedulers.io())
+                .observeOn(AndroidSchedulers.mainThread())
+                .subscribe(new Observer<Object>() {
+                    @Override
+                    public void onCompleted() {}
+
+                    @Override
+                    public void onError(Throwable e) {
+                        Log.e("error", e.getMessage().toString());
+                    }
+
+                    @Override
+                    public void onNext(Object data) {
+                        if (data == null) {
+                            listener.onBodyErrorIsNull();
+                        } else {
+                            listener.onResponse( data, retrofit );
+                        }
+                    }
+                });
+    }
+
+    public void callServer(final InterfaceListen listener) {
+        final Retrofit retrofit = new Retrofit.Builder()
+                .baseUrl(ServiceURL.SERVER_BASE_URL )
+                .addConverterFactory(GsonConverterFactory.create())
+                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())
+                .build();
+
+        InterfaceGetMacAddress interfaceGetMacAddress = retrofit.create(InterfaceGetMacAddress.class);
+        Observable<List<MacAddressPOJO>> observable = null;
+        observable = interfaceGetMacAddress.getMacAddress();
+
+        styzf(observable, listener, retrofit);
+    }
+}
\ No newline at end of file
Index: app/src/main/res/layout/dialog_timepick.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/dialog_timepick.xml	(revision )
+++ app/src/main/res/layout/dialog_timepick.xml	(revision )
@@ -0,0 +1,111 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"-->
+    <!--android:layout_height="match_parent"-->
+    <!--android:layout_width="match_parent"-->
+    <!--android:orientation="vertical">-->
+
+    <!--<FrameLayout-->
+        <!--android:id="@+id/realtabcontent"-->
+        <!--android:layout_width="match_parent"-->
+        <!--android:layout_height="0dip"-->
+        <!--android:layout_gravity="top"-->
+        <!--android:layout_weight="1" />-->
+
+        <!--<android.support.v4.app.FragmentTabHost-->
+            <!--android:layout_width="match_parent"-->
+            <!--android:layout_height="wrap_content"-->
+            <!--android:id="@+id/tabs">-->
+
+            <!--<FrameLayout-->
+                <!--android:id="@+id/tabcontent"-->
+                <!--android:layout_width="0dp"-->
+                <!--android:layout_height="0dp"-->
+                <!--android:layout_weight="0"-->
+                <!--android:layout_gravity="top"-->
+                <!--/>-->
+
+        <!--</android.support.v4.app.FragmentTabHost>-->
+<!--</LinearLayout>-->
+
+
+<!--<android.support.design.widget.CoordinatorLayout-->
+    <!--android:id="@+id/rootLayout"-->
+    <!--xmlns:app="http://schemas.android.com/apk/res-auto"-->
+    <!--xmlns:android="http://schemas.android.com/apk/res/android"-->
+    <!--android:layout_width="match_parent"-->
+    <!--android:layout_height="match_parent">-->
+
+    <android.support.v4.app.FragmentTabHost
+        xmlns:app="http://schemas.android.com/apk/res-auto"
+        xmlns:android="http://schemas.android.com/apk/res/android"
+        android:id="@+id/tabs"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="vertical" >
+            <FrameLayout
+                android:layout_marginTop="35dp"
+                android:id="@+id/tabcontent"
+                android:layout_width="0dp"
+                android:layout_height="0dp"
+                android:layout_weight="0" />
+            <FrameLayout
+                app:layout_behavior="@string/appbar_scrolling_view_behavior"
+                android:id="@+id/realtabcontent"
+                android:layout_width="wrap_content"
+                android:layout_height="0dp"
+                android:layout_gravity="center"
+                android:layout_weight="1" />
+                <LinearLayout
+                    android:id="@+id/bottomLayout"
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:orientation="horizontal"
+                    android:gravity="center"
+                    android:layout_gravity="center">
+                    <Button
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:id="@+id/cancel"
+                        android:padding="10dp"
+                        android:text="Cancel"
+                        android:background="#00ffffff"
+                        android:layout_margin="15dp"
+                        android:textColor="?attr/colorAccent" />
+
+                    <Button
+                        android:layout_marginLeft="15dp"
+                        android:layout_marginRight="15dp"
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:id="@+id/done"
+                        android:padding="10dp"
+                        android:text="Done"
+                        android:background="#00ffffff"
+                        android:textColor="?attr/colorAccent"
+                        />
+                </LinearLayout>
+        </LinearLayout>
+    </android.support.v4.app.FragmentTabHost>
+
+    <!--<FrameLayout-->
+        <!--android:layout_marginTop="35dp"-->
+        <!--android:id="@+id/bottomLayout"-->
+        <!--android:layout_width="0dp"-->
+        <!--android:layout_height="0dp"-->
+        <!--android:layout_weight="0">-->
+        <!--<Button-->
+            <!--android:layout_width="wrap_content"-->
+            <!--android:layout_height="wrap_content"-->
+            <!--android:id="@+id/cancel"-->
+            <!--android:text="Cancel"/>-->
+
+        <!--<Button-->
+            <!--android:layout_width="wrap_content"-->
+            <!--android:layout_height="wrap_content"-->
+            <!--android:id="@+id/done"-->
+            <!--android:text="Set"/>-->
+    <!--</FrameLayout>-->
+<!--</android.support.design.widget.CoordinatorLayout>-->
\ No newline at end of file
Index: app/src/main/java/autocomplete/InstantAutocomplete.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/autocomplete/InstantAutocomplete.java	(revision )
+++ app/src/main/java/autocomplete/InstantAutocomplete.java	(revision )
@@ -0,0 +1,62 @@
+package autocomplete;
+
+import android.app.Activity;
+import android.content.Context;
+import android.graphics.Rect;
+import android.util.AttributeSet;
+import android.util.DisplayMetrics;
+import android.util.Log;
+import android.view.View;
+import android.view.inputmethod.InputMethodManager;
+import android.widget.AutoCompleteTextView;
+
+import com.example.administrator.myapplication.R;
+
+/**
+ * Created by Administrator on 17/11/2559.
+ */
+public class InstantAutocomplete extends AutoCompleteTextView {
+
+    public InstantAutocomplete(Context context) {
+        super(context);
+    }
+
+    public InstantAutocomplete(Context arg0, AttributeSet arg1) {
+        super(arg0, arg1);
+    }
+
+    public InstantAutocomplete(Context arg0, AttributeSet arg1, int arg2) {
+        super(arg0, arg1, arg2);
+    }
+
+    @Override
+    public boolean enoughToFilter() {
+        return true;
+    }
+
+    @Override
+    protected void onFocusChanged(boolean focused, int direction,
+                                  Rect previouslyFocusedRect) {
+        super.onFocusChanged(focused, direction, previouslyFocusedRect);
+    }
+
+    @Override
+    public void setOnFocusChangeListener(OnFocusChangeListener l) {
+        super.setOnFocusChangeListener(l);
+    }
+
+    @Override
+    protected void finalize() throws Throwable {
+        super.finalize();
+    }
+
+    @Override
+    public void setDropDownWidth(int width) {
+        super.setDropDownWidth(width);
+    }
+
+    @Override
+    public boolean isSuggestionsEnabled() {
+        return false;
+    }
+}
Index: app/src/main/java/seller/titlebar/SellerOptionalDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/titlebar/SellerOptionalDAO.java	(revision )
+++ app/src/main/java/seller/titlebar/SellerOptionalDAO.java	(revision )
@@ -0,0 +1,35 @@
+package seller.titlebar;
+
+import com.google.gson.annotations.SerializedName;
+
+/**
+ * Created by Administrator on 28/12/2559.
+ */
+public class SellerOptionalDAO {
+    @SerializedName("optional")
+    private String optional;
+
+    @SerializedName("id")
+    private int id;
+
+    public String getOptional() {
+        return optional;
+    }
+
+    public void setOptional(String optional) {
+        this.optional = optional;
+    }
+
+    public int getId() {
+        return id;
+    }
+
+    public void setId(int id) {
+        this.id = id;
+    }
+
+    @Override
+    public String toString() {
+        return optional;
+    }
+}
Index: app/src/main/res/_A0_seller/layout/view_layout_loading.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/view_layout_loading.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/view_layout_loading.xml	(revision )
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+
+    android:gravity="center|center">
+
+    <ProgressBar
+        android:layout_width="wrap_content"
+        android:layout_height="wrap_content"
+        android:id="@+id/spinnerLoading"/>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/authen/AuthenData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/authen/AuthenData.java	(revision )
+++ app/src/main/java/authen/AuthenData.java	(revision )
@@ -0,0 +1,8 @@
+package authen;
+
+/**
+ * Created by Administrator on 15/3/2560.
+ */
+
+public class AuthenData {
+}
Index: app/src/main/java/seller/InterfaceOnOption.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/InterfaceOnOption.java	(revision )
+++ app/src/main/java/seller/InterfaceOnOption.java	(revision )
@@ -0,0 +1,8 @@
+package seller;
+
+/**
+ * Created by Administrator on 30/11/2559.
+ */
+public interface InterfaceOnOption {
+    public void GraphSelected(int graphId);
+}
Index: app/src/main/java/seller/ViewDialogProductDetail.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/ViewDialogProductDetail.java	(revision )
+++ app/src/main/java/seller/ViewDialogProductDetail.java	(revision )
@@ -0,0 +1,265 @@
+package seller;
+
+import android.app.Activity;
+import android.app.Dialog;
+import android.os.Handler;
+import android.support.v4.content.ContextCompat;
+import android.util.TypedValue;
+import android.view.Gravity;
+import android.view.View;
+import android.view.Window;
+import android.view.WindowManager;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.ProgressBar;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.R;
+
+import java.util.List;
+
+import okhttp3.ResponseBody;
+import retrofit2.Retrofit;
+import seller.pojo.SellerBestSellerPOJO;
+import seller.pojo.SellerCollectionPOJO;
+import retrofit.InterfaceListen;
+import seller.services.retrofit.ServiceCollection;
+
+/**
+ * Created by Administrator on 22/11/2559.
+ */
+public class ViewDialogProductDetail {
+
+    private String itemCode;
+
+    private Activity activity;
+
+    private Dialog dialog;
+
+    public void showDialog(Activity activity, final String itemCode) {
+
+        this.activity = activity;
+
+        this.itemCode = itemCode;
+
+        dialog = new Dialog(activity);
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
+        dialog.setCancelable(false);
+        dialog.setContentView(R.layout.dialog_seller_detail);
+
+        ImageView dialogButton = (ImageView) dialog.findViewById(R.id.dialog_close);
+        dialogButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                dialog.dismiss();
+            }
+        });
+
+        WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
+        lp.copyFrom(dialog.getWindow().getAttributes());
+        lp.width = WindowManager.LayoutParams.MATCH_PARENT;
+        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
+        lp.gravity = Gravity.CENTER;
+
+        dialog.getWindow().setAttributes(lp);
+
+        LinearLayout content = (LinearLayout) dialog.findViewById(R.id.dialog_content);
+
+        LinearLayout.LayoutParams llPm =
+                new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT);
+
+        float density = activity.getResources().getDisplayMetrics().density;
+        int paddingDp = (int)(7 * density);
+
+        LinearLayout llNr = new LinearLayout(activity);
+
+        llNr.setLayoutParams(llPm);
+        llNr.setOrientation(LinearLayout.HORIZONTAL);
+        llNr.setPadding(paddingDp,paddingDp,paddingDp,paddingDp);
+        llNr.setBackgroundColor(ContextCompat.getColor(activity, R.color.angel_white));
+        llNr.setGravity(Gravity.CENTER_HORIZONTAL);
+
+        ProgressBar progressBar = new ProgressBar(activity);
+        llNr.addView(progressBar);
+        content.addView(llNr);
+
+        dialog.show();
+
+        final Handler handler = new Handler();
+        handler.postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                new ServiceCollection().callServer(interfaceListen, SellerData.reportId, SellerData.shopCode, itemCode);
+            }
+        }, 1000);
+    }
+
+    InterfaceListen interfaceListen = new InterfaceListen() {
+
+        @Override
+        public void onResponse(Object data, Retrofit retrofit) {
+
+            LinearLayout content = (LinearLayout) dialog.findViewById(R.id.dialog_content);
+
+            content.removeAllViews();
+
+            if(data instanceof SellerCollectionPOJO) {
+
+                SellerCollectionPOJO temp = (SellerCollectionPOJO) data;
+
+                if(temp != null && temp.getData() != null) {
+
+                    List<SellerCollectionPOJO.Data> dataList = temp.getData();
+
+                    for(SellerCollectionPOJO.Data each : dataList) {
+
+                        LinearLayout llNr = new LinearLayout(activity);
+
+                        LinearLayout.LayoutParams llPm =
+                                new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT);
+
+                        float density = activity.getResources().getDisplayMetrics().density;
+                        int paddingDp = (int) (7 * density);
+
+                        llNr.setLayoutParams(llPm);
+                        llNr.setOrientation(LinearLayout.HORIZONTAL);
+                        llNr.setPadding(paddingDp, paddingDp, paddingDp, paddingDp);
+                        llNr.setBackgroundColor(ContextCompat.getColor(activity, R.color.angel_white));
+
+                        TextView itemCodeTitle = new TextView(activity);
+                        itemCodeTitle.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        itemCodeTitle.setText("รหัสผลิตภัณฑ์ : ");
+                        itemCodeTitle.setTextColor(ContextCompat.getColor(activity, R.color.supreme_blue));
+                        itemCodeTitle.setTextSize(TypedValue.COMPLEX_UNIT_SP, 21);
+                        llNr.addView(itemCodeTitle);
+
+                        TextView itemCodeBestSeller = new TextView(activity);
+                        itemCodeBestSeller.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        itemCodeBestSeller.setText(each.getCollection());
+                        itemCodeBestSeller.setTextColor(ContextCompat.getColor(activity, R.color.jet_black));
+                        itemCodeBestSeller.setTextSize(TypedValue.COMPLEX_UNIT_SP, 21);
+                        llNr.addView(itemCodeBestSeller);
+
+                        content.addView(llNr);
+
+                        llNr = new LinearLayout(activity);
+                        llNr.setLayoutParams(llPm);
+                        llNr.setOrientation(LinearLayout.HORIZONTAL);
+                        llNr.setPadding(paddingDp, paddingDp, paddingDp, paddingDp);
+                        llNr.setBackgroundColor(ContextCompat.getColor(activity, R.color.angel_white));
+
+                        TextView balTitle = new TextView(activity);
+                        balTitle.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        balTitle.setText("BAL : ");
+                        balTitle.setTextColor(ContextCompat.getColor(activity, R.color.dark_honest_green));
+                        balTitle.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18);
+                        llNr.addView(balTitle);
+
+                        TextView balCollection = new TextView(activity);
+                        balCollection.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        balCollection.setText(each.getBAL());
+                        balCollection.setTextColor(ContextCompat.getColor(activity, R.color.space_gray));
+                        balCollection.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18);
+                        llNr.addView(balCollection);
+
+                        content.addView(llNr);
+
+                        llNr = new LinearLayout(activity);
+                        llNr.setLayoutParams(llPm);
+                        llNr.setOrientation(LinearLayout.HORIZONTAL);
+                        llNr.setPadding(paddingDp, paddingDp, 0, 0);
+                        llNr.setBackgroundColor(ContextCompat.getColor(activity, R.color.little_light_gray));
+
+                        content.addView(llNr);
+                    }
+                }
+
+
+            } else if(data instanceof SellerBestSellerPOJO) {
+
+                SellerBestSellerPOJO temp = (SellerBestSellerPOJO) data;
+
+                if(temp != null && temp.getData() != null) {
+
+                    List<SellerBestSellerPOJO.Data> dataList = temp.getData();
+
+                    for(SellerBestSellerPOJO.Data each : dataList) {
+
+                        LinearLayout llNr = new LinearLayout(activity);
+
+                        LinearLayout.LayoutParams llPm =
+                                new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT);
+
+                        float density = activity.getResources().getDisplayMetrics().density;
+                        int paddingDp = (int) (7 * density);
+
+                        llNr.setLayoutParams(llPm);
+                        llNr.setOrientation(LinearLayout.HORIZONTAL);
+                        llNr.setPadding(paddingDp, paddingDp, paddingDp, paddingDp);
+                        llNr.setBackgroundColor(ContextCompat.getColor(activity, R.color.angel_white));
+
+                        TextView itemCodeTitle = new TextView(activity);
+                        itemCodeTitle.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        itemCodeTitle.setText("รหัสผลิตภัณฑ์ : ");
+                        itemCodeTitle.setTextColor(ContextCompat.getColor(activity, R.color.supreme_blue));
+                        itemCodeTitle.setTextSize(TypedValue.COMPLEX_UNIT_SP, 21);
+                        llNr.addView(itemCodeTitle);
+
+                        TextView itemCodeBestSeller = new TextView(activity);
+                        itemCodeBestSeller.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        itemCodeBestSeller.setText(each.getCollection());
+                        itemCodeBestSeller.setTextColor(ContextCompat.getColor(activity, R.color.jet_black));
+                        itemCodeBestSeller.setTextSize(TypedValue.COMPLEX_UNIT_SP, 21);
+                        llNr.addView(itemCodeBestSeller);
+
+                        content.addView(llNr);
+
+                        llNr = new LinearLayout(activity);
+                        llNr.setLayoutParams(llPm);
+                        llNr.setOrientation(LinearLayout.HORIZONTAL);
+                        llNr.setPadding(paddingDp, paddingDp, paddingDp, paddingDp);
+                        llNr.setBackgroundColor(ContextCompat.getColor(activity, R.color.angel_white));
+
+                        TextView netTitle = new TextView(activity);
+                        netTitle.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        netTitle.setText("ยอดขายทั้งหมด : ");
+                        netTitle.setTextColor(ContextCompat.getColor(activity, R.color.dark_honest_green));
+                        netTitle.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18);
+                        llNr.addView(netTitle);
+
+                        TextView netBestSeller = new TextView(activity);
+                        netBestSeller.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        netBestSeller.setText(each.getNet());
+                        netBestSeller.setTextColor(ContextCompat.getColor(activity, R.color.space_gray));
+                        netBestSeller.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18);
+                        llNr.addView(netBestSeller);
+
+                        TextView netCurrency = new TextView(activity);
+                        netCurrency.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.WRAP_CONTENT, LinearLayout.LayoutParams.MATCH_PARENT));
+                        netCurrency.setText(" ฿.");
+                        netCurrency.setTextColor(ContextCompat.getColor(activity, R.color.dark_honest_green));
+                        netCurrency.setTextSize(TypedValue.COMPLEX_UNIT_SP, 18);
+                        llNr.addView(netCurrency);
+
+                        content.addView(llNr);
+                    }
+                }
+            }
+        }
+
+        @Override
+        public void onBodyError(ResponseBody responseBodyError) {
+
+        }
+
+        @Override
+        public void onBodyErrorIsNull() {
+
+        }
+
+        @Override
+        public void onFailure(Throwable t) {
+
+        }
+    };
+}
Index: app/src/main/java/seller/services/prototype/InterfaceStorageDateCover.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/services/prototype/InterfaceStorageDateCover.java	(revision )
+++ app/src/main/java/seller/services/prototype/InterfaceStorageDateCover.java	(revision )
@@ -0,0 +1,32 @@
+package seller.services.prototype;
+
+import java.util.List;
+
+import retrofit2.http.GET;
+import retrofit2.http.Query;
+import rx.Observable;
+import seller.pojo.SellerBestSellerPOJO;
+import seller.pojo.SellerStorageDateCoverPOJO;
+
+/**
+ * Created by Administrator on 20/1/2560.
+ */
+public interface InterfaceStorageDateCover {
+    @GET("/Application/check_stock.php")
+    Observable<List<SellerStorageDateCoverPOJO>> getStorageDateCover (
+            @Query("shop_code") String shopCode
+    );
+
+    @GET("/Application/check_stock.php")
+    Observable<List<SellerStorageDateCoverPOJO>> getSkuDayCover (
+            @Query("shop_code") String shopCode,
+            @Query("item") String item
+    );
+
+    @GET("/Application/getStorageDateCover.php")
+    Observable<List<SellerStorageDateCoverPOJO>> getSkuUndefinedDayCover (
+            @Query("shop_code") String shopCode,
+            @Query("item") String item,
+            @Query("getUndefinedDayCover") String isGet
+    );
+}
Index: app/src/main/java/com/example/administrator/myapplication/ParallelDataTwo.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/ParallelDataTwo.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/ParallelDataTwo.java	(revision )
@@ -0,0 +1,33 @@
+package com.example.administrator.myapplication;
+
+/**
+ * Created by Administrator on 30/9/2559.
+ */
+public class ParallelDataTwo {
+    private int minute;
+    private int hour;
+
+    public ParallelDataTwo() {
+    }
+
+    public ParallelDataTwo(int minute, int hour) {
+        this.minute = minute;
+        this.hour = hour;
+    }
+
+    public int getMinute() {
+        return minute;
+    }
+
+    public void setMinute(int minute) {
+        this.minute = minute;
+    }
+
+    public int getHour() {
+        return hour;
+    }
+
+    public void setHour(int hour) {
+        this.hour = hour;
+    }
+}
Index: app/src/main/java/seller/item/ItemSellerBestSellerMonthToDate.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/item/ItemSellerBestSellerMonthToDate.java	(revision )
+++ app/src/main/java/seller/item/ItemSellerBestSellerMonthToDate.java	(revision )
@@ -0,0 +1,50 @@
+package seller.item;
+
+import java.util.List;
+
+/**
+ * Created by Administrator on 19/1/2560.
+ */
+public class ItemSellerBestSellerMonthToDate extends SellerBaseItem {
+
+    public String collectionItemCode;
+    public String collectionNet;
+
+    public List<ItemSellerBestSellerMonthToDate> forGraph;
+
+    private double sum;
+
+    public static ItemSellerBestSellerMonthToDate makeItem(int report_id) {
+        return new ItemSellerBestSellerMonthToDate(report_id);
+    }
+
+    public ItemSellerBestSellerMonthToDate(int type) {
+        super(type);
+        this.forGraph = null;
+        this.sum = 0;
+    }
+
+    public String getCollectionItemCode() {
+        return collectionItemCode;
+    }
+
+    public void setCollectionItemCode(String collectionItemCode) {
+        this.collectionItemCode = collectionItemCode;
+    }
+
+    public String getCollectionNet() {
+        return collectionNet;
+    }
+
+    public void setCollectionNet(String collectionNet) {
+        this.collectionNet = collectionNet;
+    }
+
+    public double getSum() {
+        return sum;
+    }
+
+    public void setSum(double sum) {
+        this.sum = sum;
+    }
+}
Index: app/src/main/java/shopFinding/SetShopAutoCompleteView.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/shopFinding/SetShopAutoCompleteView.java	(revision )
+++ app/src/main/java/shopFinding/SetShopAutoCompleteView.java	(revision )
@@ -0,0 +1,263 @@
+package shopFinding;
+
+import android.content.Context;
+import android.content.res.Resources;
+import android.support.v7.app.AppCompatActivity;
+import android.text.Editable;
+import android.text.TextWatcher;
+import android.util.Log;
+import android.view.Display;
+import android.view.MotionEvent;
+import android.view.Surface;
+import android.view.View;
+import android.view.WindowManager;
+import android.view.inputmethod.InputMethodManager;
+import android.widget.AdapterView;
+import android.widget.AutoCompleteTextView;
+
+import com.example.administrator.myapplication.R;
+import com.example.administrator.myapplication.SellerActivity;
+
+import java.util.List;
+
+import URL.ServiceURL;
+import retrofit2.Retrofit;
+import retrofit2.adapter.rxjava.RxJavaCallAdapterFactory;
+import retrofit2.converter.gson.GsonConverterFactory;
+import rx.Observable;
+import rx.Observer;
+import rx.android.schedulers.AndroidSchedulers;
+import rx.schedulers.Schedulers;
+import seller.SellerData;
+import seller.ViewReportDialogFragment;
+import seller.titlebar.InterfaceOnTitleBar;
+
+/**
+ * Created by Administrator on 17/11/2559.
+ */
+public class SetShopAutoCompleteView {
+
+    private boolean showing = false;
+
+    public static String language = "[{\"shop_id\":\"11079252\",\"shop_name\":\"พาราก้อน A1\"},{\"shop_id\":\"11079259\",\"shop_name\":\"สยามสแควร์ B3\"}]";
+
+    private AutoCompleteTextView acTextView;
+
+    public SetShopAutoCompleteView() { acTextView = null; }
+
+    public void setView(final AppCompatActivity activity, final boolean autoShowKeyboard) {
+
+        acTextView = (AutoCompleteTextView) activity.findViewById(R.id.search_box);
+
+        final Retrofit retrofit = new Retrofit.Builder()
+                .baseUrl(ServiceURL.PROCUCT_BASE_URL )
+                .addConverterFactory(GsonConverterFactory.create())
+                .addCallAdapterFactory(RxJavaCallAdapterFactory.create())
+                .build();
+
+        InterfaceGetShop interfaceCollection = retrofit.create( InterfaceGetShop.class );
+        Observable<List<ShopDetailPOJO>> observable = interfaceCollection.getShopDetail();
+
+        observable.subscribeOn(Schedulers.io())
+            .observeOn(AndroidSchedulers.mainThread())
+            .subscribe(new Observer<Object>() {
+                @Override
+                public void onCompleted() {}
+
+                @Override
+                public void onError(Throwable e) {
+                    Log.e("error", e.getMessage().toString());
+                }
+
+                @Override
+                public void onNext(Object data) {
+
+                    if (data != null) {
+
+                        List<ShopDetailPOJO> temp = (List<ShopDetailPOJO>) data;
+
+                        Display display = ((WindowManager) activity.getSystemService(Context.WINDOW_SERVICE)).getDefaultDisplay();
+
+                        if(display.getOrientation() == Surface.ROTATION_0 || display.getOrientation() == Surface.ROTATION_180) {
+                            acTextView.setFocusable(true);
+                            acTextView.setFocusableInTouchMode(true);
+                        } else {
+                            acTextView.setFocusable(false);
+                            acTextView.setFocusableInTouchMode(false);
+                        }
+
+                        final ShopArrayAdapter autoCompleteAdapter = new ShopArrayAdapter(activity, R.layout.view_search_paging, temp);
+
+                        acTextView.setLongClickable(false);
+
+                        acTextView.setDropDownWidth(Resources.getSystem().getDisplayMetrics().widthPixels);
+
+                        acTextView.setOnClickListener(new View.OnClickListener() {
+                            @Override
+                            public void onClick(View v) {
+                                if(showing) {
+                                    acTextView.showDropDown();
+                                } else {
+                                    acTextView.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.ic_clear_black_24dp, 0);
+
+                                    acTextView.showDropDown();
+
+                                    setShowing();
+                                }
+                            }
+                        });
+
+                        acTextView.setOnFocusChangeListener(new View.OnFocusChangeListener() {
+                            @Override
+                            public void onFocusChange(View v, boolean hasFocus) {
+                                if(hasFocus) {
+                                    if (showing) {
+
+                                    } else {
+                                        acTextView.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.ic_clear_black_24dp, 0);
+
+                                        acTextView.showDropDown();
+
+                                        setShowing();
+                                    }
+                                }
+                            }
+                        });
+
+                        acTextView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+                            @Override
+                            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+
+                                // ควร Callback กลับไปที่ Activity หลัก ไม่ใช่มาทำในนี้ แก้โค้ดบานบอกเลย
+                                acTextView.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.ic_search_black_24dp, 0);
+
+                                acTextView.clearFocus();
+
+                                InputMethodManager imm = (InputMethodManager) activity.getSystemService(Context.INPUT_METHOD_SERVICE);
+                                imm.hideSoftInputFromWindow(activity.getWindow().getCurrentFocus().getWindowToken(), 0);
+
+                                Log.e("autocomplete status", "an item picked and hide dropdown");
+                                setShowing();
+
+                                // ตั้งค่าให้เลือก Report ทันที หลังจากเลือกร้านค้า
+                                // setFragment(activity);
+
+                                // Call Back to Seller Activity
+                                // คอลแบ็คกลับไปทำงานที่ Seller Activity ~
+                                if( activity != null) {
+                                    InterfaceOnShop interfaceOnShop = (InterfaceOnShop) activity;
+                                    interfaceOnShop.shopSelected(acTextView.getText().toString());
+                                }
+                            }
+                        });
+
+                        acTextView.setOnTouchListener(new View.OnTouchListener() {
+                            @Override
+                            public boolean onTouch(View v, MotionEvent event) {
+                                final int DRAWABLE_LEFT = 0;
+                                final int DRAWABLE_TOP = 1;
+                                final int DRAWABLE_RIGHT = 2;
+                                final int DRAWABLE_BOTTOM = 3;
+
+                                if(event.getAction() == MotionEvent.ACTION_UP) {
+
+                                    // touch right icon ...
+                                    if(event.getRawX() >= (acTextView.getRight() - acTextView.getCompoundDrawables()[DRAWABLE_RIGHT].getBounds().width())) {
+
+                                        Log.e("autocomplete status", "right icon touch.");
+
+                                        if(showing) {
+                                            // dropdown is already shown.
+                                            if(acTextView.getText().toString().equals("")) {
+                                                acTextView.clearFocus();
+
+                                                acTextView.dismissDropDown();
+
+                                                setShowing();
+                                                Log.e("autocomplete status", "e - hide dropdown");
+
+                                                acTextView.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.ic_search_black_24dp, 0);
+
+                                                InputMethodManager imm = (InputMethodManager) activity.getSystemService(Context.INPUT_METHOD_SERVICE);
+                                                imm.hideSoftInputFromWindow(activity.getWindow().getCurrentFocus().getWindowToken(), 0);
+
+                                            } else {
+                                                acTextView.setText("");
+
+                                                acTextView.requestFocus();
+
+                                                InputMethodManager imm = (InputMethodManager) activity.getSystemService(Context.INPUT_METHOD_SERVICE);
+                                                imm.showSoftInput(acTextView, InputMethodManager.SHOW_IMPLICIT);
+
+                                                acTextView.showDropDown();
+                                            }
+
+                                        } else {
+                                            // all listed dropdown is hidden.
+
+                                            // start showing now.
+                                            acTextView.showDropDown();
+
+                                            setShowing();
+                                            Log.e("autocomplete status", "e - show dropdown");
+
+                                            acTextView.setCompoundDrawablesWithIntrinsicBounds(0, 0, R.drawable.ic_clear_black_24dp, 0);
+                                        }
+                                        return true;
+                                    }
+                                }
+
+                                return false;
+                            }
+                        });
+
+                        acTextView.addTextChangedListener(new TextWatcher() {
+                            @Override
+                            public void beforeTextChanged(CharSequence s, int start, int count, int after) {
+
+                            }
+
+                            @Override
+                            public void onTextChanged(CharSequence s, int start, int before, int count) {
+
+                            }
+
+                            @Override
+                            public void afterTextChanged(Editable s) {
+
+                                String SC = s.toString();
+
+                                if(SC.split(":").length > 1 ) {
+                                    //SellerData.shopCode = SC.split(":")[0].trim();
+
+                                    //InterfaceOnShop interfaceOnShop = (InterfaceOnShop) activity;
+                                    //interfaceOnShop.shopSelected(acTextView.getText().toString());
+                                }
+                            }
+                        });
+
+                        acTextView.setAdapter(autoCompleteAdapter);
+
+                        if (autoShowKeyboard) {
+                            acTextView.showDropDown();
+                            acTextView.requestFocus();
+                        }
+
+                    }
+                }
+            });
+    }
+
+    private void setShowing() {
+        if(this.showing) {
+            this.showing = false;
+        } else {
+            this.showing = true;
+        }
+    }
+
+    private void setFragment(AppCompatActivity activity) {
+        ViewReportDialogFragment newFragment = new ViewReportDialogFragment((InterfaceOnTitleBar) activity);
+        newFragment.show( activity.getSupportFragmentManager(), "Open Dialog");
+    }
+}
Index: app/src/main/java/seller/viewholder/SellerCollectionViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/viewholder/SellerCollectionViewHolder.java	(revision )
+++ app/src/main/java/seller/viewholder/SellerCollectionViewHolder.java	(revision )
@@ -0,0 +1,25 @@
+package seller.viewholder;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.R;
+
+/**
+ * Created by Administrator on 17/11/2559.
+ */
+public class SellerCollectionViewHolder extends RecyclerView.ViewHolder {
+
+    public TextView collectionItemCode;
+    public TextView collectionBal;
+    public TextView collectionNet;
+
+    public SellerCollectionViewHolder(View itemView) {
+        super(itemView);
+
+        collectionItemCode = (TextView) itemView.findViewById(R.id.collectionItemCode);
+        collectionBal = (TextView) itemView.findViewById(R.id.collectionBal);
+        collectionNet = (TextView) itemView.findViewById(R.id.collectionNet);
+    }
+}
Index: app/src/main/java/animation/SimplyAnimation.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/animation/SimplyAnimation.java	(revision )
+++ app/src/main/java/animation/SimplyAnimation.java	(revision )
@@ -0,0 +1,8 @@
+package animation;
+
+/**
+ * Created by Administrator on 21/2/2560.
+ */
+
+public class SimplyAnimation {
+}
Index: app/src/main/java/invoice/ViewInvoiceSwitchDialogFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/invoice/ViewInvoiceSwitchDialogFragment.java	(revision )
+++ app/src/main/java/invoice/ViewInvoiceSwitchDialogFragment.java	(revision )
@@ -0,0 +1,127 @@
+package invoice;
+
+import android.app.Dialog;
+import android.content.Context;
+import android.content.Intent;
+import android.os.Bundle;
+import android.support.annotation.NonNull;
+import android.support.v4.app.DialogFragment;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.Window;
+import android.widget.Button;
+import android.widget.ImageButton;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.CanvasActivity;
+import com.example.administrator.myapplication.InvoiceInfoActivity;
+import com.example.administrator.myapplication.R;
+
+import intent.IntentKeycode;
+import user.InterfaceCamera;
+
+/**
+ * Created by Administrator on 24/2/2560.
+ */
+
+public class ViewInvoiceSwitchDialogFragment extends DialogFragment {
+
+    private InterfaceCamera interfaceCamera;
+    private Bundle b;
+
+    public ViewInvoiceSwitchDialogFragment(InterfaceCamera interfaceCamera, Bundle b) {
+			 this.interfaceCamera = interfaceCamera;
+			 this.b = b;
+    }
+
+    // ใช้สำหรับรับส่ง Interface ขณะ ปิด/หมุนจอ/ Everything (ใช้ดีมาก)
+    @Override
+    public void onAttach(Context context) {
+        super.onAttach(context);
+    }
+
+    @Override
+    public void onStart() {
+        super.onStart();
+        Dialog dialog = getDialog();
+        if(dialog != null) {
+            int width = ViewGroup.LayoutParams.MATCH_PARENT;
+            int height = ViewGroup.LayoutParams.WRAP_CONTENT;
+            dialog.getWindow().setLayout(width, height);
+        }
+    }
+
+    @NonNull
+    @Override
+    public Dialog onCreateDialog(Bundle savedInstanceState) {
+        Dialog dialog = super.onCreateDialog(savedInstanceState);
+
+        // request a window without the title
+        dialog.getWindow().requestFeature(Window.FEATURE_NO_TITLE);
+
+        dialog.setCancelable(false);
+        dialog.setCanceledOnTouchOutside(false);
+
+        return dialog;
+    }
+
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+				 setRetainInstance(true);
+
+				 View v = inflater.inflate(R.layout.dialog_invoice, container, false);
+
+				 ImageButton backPressedState = (ImageButton) v.findViewById(R.id.backPressedState);
+			 	 backPressedState.setOnClickListener(new View.OnClickListener() {
+						@Override
+						public void onClick(View v) {
+							 getDialog().dismiss();
+						}
+				 });
+
+				 Button btnMoreScan = (Button) v.findViewById(R.id.btn_more_scan);
+				 if(btnMoreScan != null) {
+						btnMoreScan.setOnClickListener(new View.OnClickListener() {
+								@Override
+								public void onClick(View v) {
+									 getDialog().dismiss();
+									 interfaceCamera.onBarcodeScan(InvoiceData.INVOICE_CASE_INVOICE_PREVIEW, InvoiceData.INVOICE_PREVIEW_PRODUCT, R.layout.view_barcode);
+								}
+						});
+				 }
+
+				 Button btnMoreInfo = (Button) v.findViewById(R.id.btn_more_info);
+				 btnMoreInfo.setOnClickListener(new View.OnClickListener() {
+						@Override
+						public void onClick(View v) {
+							 Intent t = new Intent(getActivity(), InvoiceInfoActivity.class);
+							 Bundle _b_ = b;
+							 t.putExtras(_b_);
+							 getActivity().startActivityForResult(t, 1929);
+						}
+				 });
+
+				 Button btnNext = (Button) v.findViewById(R.id.btn_next);
+				 btnNext.setOnClickListener(new View.OnClickListener() {
+				 @Override
+				 public void onClick(View v) {
+						getDialog().dismiss();
+						Intent t = new Intent(getActivity(), CanvasActivity.class);
+						getActivity().startActivityForResult(t, IntentKeycode.RESULT_CANVAS);
+				 }
+				 });
+
+				 return v;
+    }
+
+    @Override
+    public void onDestroyView() {
+        Dialog dialog = getDialog();
+        // thank stack
+        // handles https://code.google.com/p/android/issues/detail?id=17423
+        if (dialog != null && getRetainInstance()) {
+            dialog.setDismissMessage(null);
+        }
+        super.onDestroyView();
+    }
+}
Index: app/src/main/res/_A0_shop_info/layout/view_shop_info_menu.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_shop_info/layout/view_shop_info_menu.xml	(revision )
+++ app/src/main/res/_A0_shop_info/layout/view_shop_info_menu.xml	(revision )
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical" android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/user/user/viewholder/ViewHolderMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/user/user/viewholder/ViewHolderMenu.java	(revision )
+++ app/src/main/java/user/user/viewholder/ViewHolderMenu.java	(revision )
@@ -0,0 +1,28 @@
+package user.user.viewholder;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+import android.widget.ImageButton;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.R;
+
+/**
+ * Created by Administrator on 16/11/2559.
+ */
+public class ViewHolderMenu extends RecyclerView.ViewHolder {
+
+    public TextView menuName;
+
+    public TextView detailName;
+
+    public ImageView imageSource;
+
+    public ViewHolderMenu(View itemView) {
+        super(itemView);
+        menuName = (TextView) itemView.findViewById(R.id.menuName);
+        detailName = (TextView) itemView.findViewById(R.id.detailName);
+        imageSource = (ImageView) itemView.findViewById(R.id.imageSource);
+    }
+}
\ No newline at end of file
Index: app/src/main/res/_A0_seller/layout/activity_on_touch.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/activity_on_touch.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/activity_on_touch.xml	(revision )
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="utf-8"?>
+<FrameLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+</FrameLayout>
\ No newline at end of file
Index: app/src/main/res/layout/main.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/main.xml	(revision )
+++ app/src/main/res/layout/main.xml	(revision )
@@ -0,0 +1,12 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"  >
+
+    <fragment
+        android:id="@+id/map"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        class="com.google.android.gms.maps.SupportMapFragment" />
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/seller/titlebar/InterfaceOnTitleBar.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/titlebar/InterfaceOnTitleBar.java	(revision )
+++ app/src/main/java/seller/titlebar/InterfaceOnTitleBar.java	(revision )
@@ -0,0 +1,10 @@
+package seller.titlebar;
+
+/**
+ * Created by Administrator on 18/11/2559.
+ */
+public interface InterfaceOnTitleBar {
+    public void onTitleChange(int reportId, String reportName);
+
+    public void onOptionalChange(int reportOptional);
+}
Index: app/src/main/res/_A0_seller/layout/dialog_option_picker.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/dialog_option_picker.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/dialog_option_picker.xml	(revision )
@@ -0,0 +1,66 @@
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="@color/angel_white">
+
+    <!--<ImageView-->
+    <!--android:layout_width="match_parent"-->
+    <!--android:layout_height="120dp"-->
+    <!--android:id="@+id/a"-->
+    <!--android:gravity="center"-->
+    <!--android:background="@color/dark_honest_green"-->
+    <!--android:scaleType="fitCenter" />-->
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:background="@color/dark_honest_green"
+
+        android:paddingLeft="@dimen/round_padding"
+        android:paddingRight="@dimen/round_padding"
+
+        android:paddingTop="@dimen/title_expanded"
+        android:paddingBottom="@dimen/title_expanded">
+
+        <ImageView
+            android:layout_width="36dp"
+            android:layout_height="match_parent"
+
+            android:layout_marginLeft="@dimen/round_padding"
+            android:layout_marginRight="@dimen/round_padding"
+
+            android:id="@+id/dialog_close"
+            android:src="@drawable/ic_arrow_back_white_24dp"
+            android:layout_gravity="center_vertical"/>
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:id="@+id/dialog_header"
+            android:text="......"
+            android:textColor="@color/angel_white"
+            android:textSize="20sp"
+            android:gravity="center|left"
+            android:padding="@dimen/round_padding"
+            />
+    </LinearLayout>
+
+    <android.support.v4.widget.NestedScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/sellerNestedScrollView">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:id="@+id/dialog_content"
+            android:padding="@dimen/round_padding"
+            android:orientation="vertical"
+            android:background="@color/little_light_gray">
+        </LinearLayout>
+
+    </android.support.v4.widget.NestedScrollView>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/_A0_seller/layout/spinner_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/spinner_item.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/spinner_item.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<TextView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:textSize="18sp"
+    android:gravity="center"
+    android:textColor="@color/angel_white"
+    android:text="Spinner Item"
+    android:padding="5dip"
+    android:drawableRight="@drawable/ic_arrow_drop_down_black"/>
\ No newline at end of file
Index: app/src/main/java/com/example/administrator/myapplication/StatusBarStyle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/StatusBarStyle.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/StatusBarStyle.java	(revision )
@@ -0,0 +1,12 @@
+package com.example.administrator.myapplication;
+
+import android.view.View;
+
+/**
+ * Created by Administrator on 28/11/2559.
+ */
+public class StatusBarStyle {
+    public void setHideStatusBar(View view) {
+        //view.setSystemUiVisibility(View.SYSTEM_UI_FLAG_LAYOUT_FULLSCREEN);
+    }
+}
Index: app/src/main/java/seller/viewholder/PieChartViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/viewholder/PieChartViewHolder.java	(revision )
+++ app/src/main/java/seller/viewholder/PieChartViewHolder.java	(revision )
@@ -0,0 +1,20 @@
+package seller.viewholder;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+
+import com.example.administrator.myapplication.R;
+import com.github.mikephil.charting.charts.PieChart;
+
+/**
+ * Created by Administrator on 21/11/2559.
+ */
+public class PieChartViewHolder extends RecyclerView.ViewHolder {
+
+    public PieChart bestSellerPieChart;
+
+    public PieChartViewHolder(View itemView) {
+        super(itemView);
+        bestSellerPieChart = (PieChart) itemView.findViewById(R.id.bestSellerPieChart);
+    }
+}
Index: app/src/main/java/com/example/administrator/myapplication/MyFirebaseInstanceIDService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/MyFirebaseInstanceIDService.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/MyFirebaseInstanceIDService.java	(revision )
@@ -0,0 +1,23 @@
+package com.example.administrator.myapplication;
+
+import com.google.firebase.iid.FirebaseInstanceId;
+import com.google.firebase.iid.FirebaseInstanceIdService;
+
+/**
+ * Created by Administrator on 24/10/2559.
+ */
+public class MyFirebaseInstanceIDService extends FirebaseInstanceIdService {
+
+    @Override
+    public void onTokenRefresh() {
+
+        String refreshedToken = FirebaseInstanceId.getInstance().getToken();
+        sendRegistrationToServer(refreshedToken);
+
+    }
+
+    private void sendRegistrationToServer(String token) {
+
+    }
+
+}
Index: app/src/main/java/seller/graph/PieChartData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/graph/PieChartData.java	(revision )
+++ app/src/main/java/seller/graph/PieChartData.java	(revision )
@@ -0,0 +1,68 @@
+package seller.graph;
+
+import android.graphics.Color;
+
+import com.example.administrator.myapplication.R;
+import com.github.mikephil.charting.charts.PieChart;
+import com.github.mikephil.charting.data.PieData;
+import com.github.mikephil.charting.data.PieDataSet;
+import com.github.mikephil.charting.data.PieEntry;
+import com.github.mikephil.charting.formatter.PercentFormatter;
+import com.github.mikephil.charting.utils.ColorTemplate;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import seller.item.ItemSellerBestSeller;
+
+/**
+ * Created by Administrator on 21/11/2559.
+ */
+public class PieChartData {
+
+    public PieChartData(PieChart mChart) {
+        this.mChart = mChart;
+    }
+
+    private PieChart mChart;
+
+    public void setData(ArrayList<PieEntry> entries) {
+
+        PieDataSet dataSet = new PieDataSet(entries, "ยอดขายผลิตภัณฑ์");
+        dataSet.setSliceSpace(3f);
+        dataSet.setSelectionShift(5f);
+
+        // add a lot of colors
+        ArrayList<Integer> colors = new ArrayList<Integer>();
+
+        for (int c : ColorTemplate.VORDIPLOM_COLORS)
+            colors.add(c);
+
+        for (int c : ColorTemplate.JOYFUL_COLORS)
+            colors.add(c);
+
+        for (int c : ColorTemplate.COLORFUL_COLORS)
+            colors.add(c);
+
+        for (int c : ColorTemplate.LIBERTY_COLORS)
+            colors.add(c);
+
+        for (int c : ColorTemplate.PASTEL_COLORS)
+            colors.add(c);
+
+        colors.add(ColorTemplate.getHoloBlue());
+
+        dataSet.setColors(colors);
+
+        PieData data = new PieData(dataSet);
+        data.setValueFormatter(new PercentFormatter());
+        data.setValueTextSize(14f);
+        data.setValueTextColor(Color.BLACK);
+
+        mChart.setData(data);
+
+        mChart.highlightValues(null);
+
+        mChart.invalidate();
+    }
+}
Index: app/src/main/java/seller/viewholder/SellerTitleViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/viewholder/SellerTitleViewHolder.java	(revision )
+++ app/src/main/java/seller/viewholder/SellerTitleViewHolder.java	(revision )
@@ -0,0 +1,25 @@
+package seller.viewholder;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+import android.widget.AutoCompleteTextView;
+import android.widget.ImageView;
+import android.widget.Spinner;
+
+import com.example.administrator.myapplication.R;
+
+import autocomplete.InstantAutocomplete;
+
+/**
+ * Created by Administrator on 17/11/2559.
+ */
+public class SellerTitleViewHolder extends RecyclerView.ViewHolder {
+    public InstantAutocomplete option;
+    public ImageView settings;
+
+    public SellerTitleViewHolder(View itemView) {
+        super(itemView);
+        option = (InstantAutocomplete) itemView.findViewById(R.id.option);
+        settings = (ImageView) itemView.findViewById(R.id.settings);
+    }
+}
Index: app/src/main/java/seller/ViewDialogOption.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/ViewDialogOption.java	(revision )
+++ app/src/main/java/seller/ViewDialogOption.java	(revision )
@@ -0,0 +1,275 @@
+package seller;
+
+import android.app.Activity;
+import android.app.Dialog;
+import android.support.v4.app.DialogFragment;
+import android.support.v4.content.ContextCompat;
+import android.util.Log;
+import android.util.TypedValue;
+import android.view.Gravity;
+import android.view.View;
+import android.view.Window;
+import android.view.WindowManager;
+import android.widget.Button;
+import android.widget.ImageView;
+import android.widget.LinearLayout;
+import android.widget.RadioButton;
+import android.widget.RadioGroup;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.R;
+
+/**
+ * Created by Administrator on 29/11/2559.
+ */
+public class ViewDialogOption extends DialogFragment {
+
+    private String itemCode;
+
+    private Activity activity;
+
+    private Dialog dialog;
+
+    final RadioButton [] rb = new RadioButton[3];
+
+    public void showDialog(final Activity activity, final InterfaceOnOption optionInterface) {
+
+        setRetainInstance(true);
+
+        this.activity = activity;
+
+        dialog = new Dialog(activity);
+        dialog.requestWindowFeature(Window.FEATURE_NO_TITLE);
+        dialog.setCancelable(false);
+        dialog.setContentView(R.layout.dialog_seller_detail);
+
+        ImageView dialogButton = (ImageView) dialog.findViewById(R.id.dialog_close);
+        dialogButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                dialog.dismiss();
+            }
+        });
+
+        WindowManager.LayoutParams lp = new WindowManager.LayoutParams();
+        lp.copyFrom(dialog.getWindow().getAttributes());
+        lp.width = WindowManager.LayoutParams.MATCH_PARENT;
+        lp.height = WindowManager.LayoutParams.WRAP_CONTENT;
+        lp.gravity = Gravity.CENTER;
+
+        dialog.getWindow().setAttributes(lp);
+
+        TextView dialogHeader = (TextView) dialog.findViewById(R.id.dialog_header);
+        //dialogHeader.setText("เลือกประเภทรายงานการแสดงผล");
+
+        LinearLayout content = (LinearLayout) dialog.findViewById(R.id.dialog_content);
+
+        LinearLayout.LayoutParams llPm =
+                new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT);
+
+        float density = activity.getResources().getDisplayMetrics().density;
+        int paddingDp = (int)(7 * density);
+
+        LinearLayout llNr = new LinearLayout(activity);
+
+        llNr.setLayoutParams(llPm);
+        llNr.setOrientation(LinearLayout.VERTICAL);
+        llNr.setPadding(paddingDp,paddingDp,paddingDp,paddingDp);
+        llNr.setBackgroundColor(ContextCompat.getColor(activity, R.color.angel_white));
+        llNr.setGravity(Gravity.CENTER_HORIZONTAL);
+
+        dialogHeader.setText("เลือกรูปแบบการแสดงผล");
+
+        //final RadioButton[] rb = new RadioButton[3];
+        // Secondary let's standing with radio group
+        final RadioGroup rg = new RadioGroup(activity);
+        rg.setId(0);
+        rg.setOrientation(RadioGroup.HORIZONTAL);
+        rg.setGravity(Gravity.CENTER);
+        rg.setLayoutParams(new RadioGroup.LayoutParams(RadioGroup.LayoutParams.MATCH_PARENT, RadioGroup.LayoutParams.MATCH_PARENT));
+
+//                LinearLayout setLg = new LinearLayout(activity);
+//
+//                setLg.setLayoutParams(llPm);
+//                setLg.setOrientation(LinearLayout.VERTICAL);
+//
+//                    // next, stand for vertical align
+//                    LinearLayout ll1Pad = new LinearLayout(activity);
+//
+//                    ll1Pad.setLayoutParams(llPm);
+//                    ll1Pad.setOrientation(LinearLayout.VERTICAL);
+//                    ll1Pad.setPaddingRelative(paddingDp,paddingDp,paddingDp,paddingDp);
+//                    ll1Pad.setBackgroundColor(ContextCompat.getColor(activity, R.color.angel_white));
+//
+//                    // Inside this horizontal linear layout combine one of radio and set its label
+//                    LinearLayout llInside = null;
+//
+//                    llInside = new LinearLayout(activity);
+//                    llInside.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT));
+//                    llInside.setOrientation(LinearLayout.HORIZONTAL);
+//                    llInside.setGravity(Gravity.RIGHT);
+//
+//                    //RadioButton radioButton = createRadioButton(activity, "กราฟแท่ง", 0);
+//                    rb[0] = new RadioButton(activity);
+//                    rb[0].setText("กราฟแท่ง");
+//                    rb[0].setId(0+100);
+//
+//                    llInside.addView(rb[0]);
+//
+//                    TextView detailTextView = createTextDetail(activity, "เปรียบเทียบยอดขายสินค้าแบบทบยอด");
+//
+//                    ll1Pad.addView(llInside);
+//                    ll1Pad.addView(detailTextView);
+//
+//                setLg.addView(ll1Pad);
+//
+//                    ll1Pad = new LinearLayout(activity);
+//
+//                    ll1Pad.setLayoutParams(llPm);
+//                    ll1Pad.setOrientation(LinearLayout.VERTICAL);
+//                    ll1Pad.setPaddingRelative(paddingDp,paddingDp,paddingDp,paddingDp);
+//                    ll1Pad.setBackgroundColor(ContextCompat.getColor(activity, R.color.angel_white));
+//
+//                    // Inside this horizontal linear layout combine one of radio and set its label
+//                    llInside = new LinearLayout(activity);
+//                    llInside.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT));
+//                    llInside.setOrientation(LinearLayout.HORIZONTAL);
+//                    llInside.setGravity(Gravity.RIGHT);
+//
+//                    //radioButton = createRadioButton(activity, "กราฟเส้น", 1);
+//                    rb[1] = new RadioButton(activity);
+//                    rb[1].setText("กราฟเส้น");
+//                    rb[1].setId(1+100);
+//
+//                    llInside.addView(rb[1]);
+//
+//                    detailTextView = createTextDetail(activity, "เปรียบเทียบยอดขายแบบเส้น");
+//
+//                    ll1Pad.addView(llInside);
+//                    ll1Pad.addView(detailTextView);
+//
+//                setLg.addView(ll1Pad);
+//
+//                    ll1Pad = new LinearLayout(activity);
+//
+//                    ll1Pad.setLayoutParams(llPm);
+//                    ll1Pad.setOrientation(LinearLayout.VERTICAL);
+//                    ll1Pad.setPaddingRelative(paddingDp,paddingDp,paddingDp,paddingDp);
+//                    ll1Pad.setBackgroundColor(ContextCompat.getColor(activity, R.color.angel_white));
+//
+//                    // Inside this horizontal linear layout combine one of radio and set its label
+//
+//                    llInside = new LinearLayout(activity);
+//                    llInside.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT));
+//                    llInside.setOrientation(LinearLayout.HORIZONTAL);
+//                    llInside.setGravity(Gravity.RIGHT);
+//
+//                    //radioButton = createRadioButton(activity, "กราฟพาย", 2);
+//                    rb[2] = new RadioButton(activity);
+//                    rb[2].setText("กราฟพาย");
+//                    rb[2].setId(2+100);
+//
+//                    llInside.addView(rb[2]);
+//
+//
+//                    detailTextView = createTextDetail(activity, "เปรียบเทียบยอดขายสินค้าเชิงสัดส่วน");
+//
+//                    ll1Pad.addView(llInside);
+//                    ll1Pad.addView(detailTextView);
+//
+//                setLg.addView(ll1Pad);
+
+        //rg.addView(setLg);
+
+
+        rb[0] = new RadioButton(activity);
+        rb[0].setText("กราฟเส้น");
+        rb[0].setId(SellerGraphType.TYPE_GRAPH_LINE+0);
+
+        rg.addView(rb[0]);
+
+        rb[1] = new RadioButton(activity);
+        rb[1].setText("กราฟแท่ง");
+        rb[1].setId(SellerGraphType.TYPE_GRAPH_BAR+0);
+
+        rg.addView(rb[1]);
+
+        rb[2] = new RadioButton(activity);
+        rb[2].setText("กราฟพาย");
+        rb[2].setId(SellerGraphType.TYPE_GRAPH_PIE+0);
+
+        rg.addView(rb[2]);
+
+        rg.check(SellerGraphType.TYPE_GRAPH_PIE+0);
+
+        llNr.addView(rg);
+
+        content.addView(llNr);
+
+        llNr = new LinearLayout(activity);
+
+        llPm.setMargins(0, 14 , 0 , 0);
+
+        llNr.setLayoutParams(llPm);
+        llNr.setOrientation(LinearLayout.HORIZONTAL);
+        llNr.setPadding(paddingDp,paddingDp,paddingDp,paddingDp);
+        llNr.setBackgroundColor(ContextCompat.getColor(activity, R.color.angel_white));
+        llNr.setGravity(Gravity.CENTER);
+
+        Button submitButton = new Button(activity);
+        submitButton.setGravity(Gravity.CENTER);
+        submitButton.setPaddingRelative(110, paddingDp, 110, paddingDp);
+        submitButton.setTextColor( ContextCompat.getColor(activity, R.color.angel_white) );
+        submitButton.setBackgroundColor(  ContextCompat.getColor(activity, R.color.honest_green) );
+        submitButton.setText("เลือก");
+        submitButton.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                int selectedId = rg.getCheckedRadioButtonId();
+                dialog.dismiss();
+
+                optionInterface.GraphSelected(selectedId);
+                Log.e("eeeeee", selectedId+"");
+            }
+        });
+
+        llNr.addView(submitButton);
+
+        content.addView(llNr);
+
+        dialog.show();
+    }
+
+//    private LinearLayout createLL1Pad(Activity activity) {
+//
+//        float density = activity.getResources().getDisplayMetrics().density;
+//        int paddingDp = (int)(7 * density);
+//
+//        LinearLayout ll1Pad = new LinearLayout(activity);
+//
+//        ll1Pad.setLayoutParams(new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT));
+//        ll1Pad.setOrientation(LinearLayout.VERTICAL);
+//        ll1Pad.setPaddingRelative(paddingDp,paddingDp,paddingDp,paddingDp);
+//        ll1Pad.setBackgroundColor(ContextCompat.getColor(activity, R.color.angel_white));
+//
+//
+//    }
+
+    private RadioButton createRadioButton(Activity activity, final String label, final int labelId) {
+        rb[labelId] = new RadioButton(activity);
+        rb[labelId].setText(label);
+        rb[labelId].setId(labelId+100);
+        return rb[labelId];
+    }
+
+    private TextView createTextDetail(Activity activity, final String label) {
+        TextView detailTextView = new TextView(activity);
+        detailTextView.setLayoutParams
+                (new LinearLayout.LayoutParams(LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.WRAP_CONTENT));
+        detailTextView.setText(label);
+        detailTextView.setGravity(Gravity.RIGHT);
+        detailTextView.setTextColor(ContextCompat.getColor(activity, R.color.space_gray));
+        detailTextView.setTextSize(TypedValue.COMPLEX_UNIT_SP, 17);
+        return detailTextView;
+    }
+}
Index: app/src/main/java/location/pojo/MacAddressPOJO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/location/pojo/MacAddressPOJO.java	(revision )
+++ app/src/main/java/location/pojo/MacAddressPOJO.java	(revision )
@@ -0,0 +1,55 @@
+package location.pojo;
+
+import com.google.gson.annotations.SerializedName;
+
+/**
+ * Created by Administrator on 6/12/2559.
+ */
+public class MacAddressPOJO {
+    @SerializedName("usr_id")
+    private String usrId;
+
+    @SerializedName("usr_mac_address")
+    private String usrMacAddress;
+
+    /**
+     *
+     * @return
+     * The usrId
+     */
+    public String getUsrId() {
+        return usrId;
+    }
+
+    /**
+     *
+     * @param usrId
+     * The usr_id
+     */
+    public void setUsrId(String usrId) {
+        this.usrId = usrId;
+    }
+
+    /**
+     *
+     * @return
+     * The usrMacAddress
+     */
+    public String getUsrMacAddress() {
+        return usrMacAddress;
+    }
+
+    /**
+     *
+     * @param usrMacAddress
+     * The usr_mac_address
+     */
+    public void setUsrMacAddress(String usrMacAddress) {
+        this.usrMacAddress = usrMacAddress;
+    }
+
+    @Override
+    public String toString() {
+        return usrMacAddress;
+    }
+}
Index: app/src/main/res/layout/simply_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/simply_graph.xml	(revision )
+++ app/src/main/res/layout/simply_graph.xml	(revision )
@@ -0,0 +1,17 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    tools:context=".MainActivity">
+
+    <com.github.mikephil.charting.charts.BarChart
+        android:id="@+id/chart"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/seller/graph/BarChartData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/graph/BarChartData.java	(revision )
+++ app/src/main/java/seller/graph/BarChartData.java	(revision )
@@ -0,0 +1,565 @@
+package seller.graph;
+
+import android.content.Intent;
+import android.os.Bundle;
+import android.os.Parcel;
+import android.os.Parcelable;
+import android.provider.SyncStateContract;
+import android.support.v4.content.ContextCompat;
+import android.util.Log;
+import android.view.Gravity;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.R;
+import com.example.administrator.myapplication.SellerSubActivity;
+import com.github.mikephil.charting.charts.BarChart;
+import com.github.mikephil.charting.components.AxisBase;
+import com.github.mikephil.charting.components.XAxis;
+import com.github.mikephil.charting.components.YAxis;
+import com.github.mikephil.charting.data.BarData;
+import com.github.mikephil.charting.data.BarDataSet;
+import com.github.mikephil.charting.data.BarEntry;
+import com.github.mikephil.charting.data.Entry;
+import com.github.mikephil.charting.formatter.AxisValueFormatter;
+import com.github.mikephil.charting.highlight.Highlight;
+import com.github.mikephil.charting.interfaces.datasets.IBarDataSet;
+import com.github.mikephil.charting.listener.OnChartValueSelectedListener;
+import com.google.gson.annotations.SerializedName;
+
+import org.parceler.ParcelConstructor;
+import org.parceler.Parcels;
+
+import java.io.Serializable;
+import java.util.ArrayList;
+import java.util.Iterator;
+import java.util.List;
+import java.util.ListIterator;
+
+import seller.InterfaceOnProductDetail;
+import seller.SellerData;
+import seller.TypeSellerReport;
+import seller.item.ItemSellerBestSeller;
+import seller.item.ItemSellerBestSellerMonthToDate;
+import seller.item.ItemSellerCollection;
+import seller.item.ItemSellerStockKeeper;
+import seller.item.ItemSellerStorageDateCover;
+import seller.viewholder.BarChartViewHolder;
+
+/**
+ * Created by Administrator on 30/11/2559.
+ */
+
+public class BarChartData {
+
+    private float granularity = 5.5f;
+
+    private BarData data;
+
+    private final BarChart mChart;
+
+    private final LinearLayout barChartLegend;
+
+    private List<String> dataLabels = new ArrayList<>();
+
+    public static boolean isValueSelected = false;
+
+    public BarChartData(BarChartViewHolder vh) {
+        this.barChartLegend = vh.barChartLegend;
+        this.mChart = vh.barChart;
+    }
+
+    public void setData(Object dataObject) {
+
+        if(dataObject != null) {
+
+            XAxis xl = mChart.getXAxis();
+            xl.setLabelCount(100);
+            xl.setPosition(XAxis.XAxisPosition.BOTTOM);
+            xl.setDrawAxisLine(true);
+            xl.setDrawGridLines(false);
+            xl.setGranularity(granularity);
+
+            YAxis yl = mChart.getAxisLeft();
+            yl.setDrawAxisLine(true);
+            yl.setDrawGridLines(true);
+            yl.setStartAtZero(true);
+
+            YAxis yr = mChart.getAxisRight();
+            yr.setDrawAxisLine(true);
+            yr.setDrawGridLines(false);
+            yr.setStartAtZero(true);
+
+            mChart.setDescriptionTextSize(14f);
+
+            mChart.setHighlightFullBarEnabled(false);
+
+            mChart.setPinchZoom(true);
+
+            mChart.setDoubleTapToZoomEnabled(false);
+
+            mChart.getLegend().setEnabled(false);
+
+            mChart.setClickable(false);
+
+            mChart.animateXY(2000, 2000);
+
+            mChart.setDrawBarShadow(false);
+
+            mChart.setDrawValueAboveBar(true);
+
+            mChart.setFitBars(true);
+
+            mChart.invalidate();
+
+            mChart.setData(getDataSet(dataObject));
+
+            mChart.setOnChartValueSelectedListener(onChartValueSelectedListener);
+
+            mChart.getXAxis().setValueFormatter(new LabelFormatter(dataLabels));
+
+            mChart.getXAxis().setTextSize(15f);
+
+            mChart.setData(getDataSet(dataObject));
+        }
+    }
+
+    private BarData getDataSet(Object dataObject) {
+
+        dataLabels = new ArrayList<>();
+
+        float barWidth = 4.5f;
+        float spaceForBar = 5.5f;
+
+        ArrayList<BarEntry> yVals1 = new ArrayList<BarEntry>();
+        ArrayList<BarEntry> yVals2 = new ArrayList<BarEntry>();
+        ArrayList<BarEntry> yVals3 = new ArrayList<BarEntry>();
+
+        ArrayList<IBarDataSet> dataSets = new ArrayList<IBarDataSet>();
+
+        if(dataObject instanceof ItemSellerCollection) {
+
+            SellerData.graphUnit = " ชิ้น";
+
+            mChart.setDescription("กราฟแสดง Stock ของหน้าร้าน");
+
+            ItemSellerCollection temp = (ItemSellerCollection) dataObject;
+
+            if(temp.forGraph != null) {
+
+                int i = 0;
+                int j = 1;
+
+                int next_index = 2;
+
+                for (ItemSellerCollection _t_ : Reversed.reversed(temp.forGraph)) {
+
+                    float secondDigit = -1f;
+
+                    yVals2.add(new BarEntry(i * spaceForBar,  new float[] {0f, -1f}));
+                    yVals1.add(new BarEntry(j * spaceForBar,  new float[] {((int) Float.parseFloat(_t_.getCollectionBal().replaceAll("[$,]", ""))), secondDigit} ));
+
+                    j = j+next_index;
+                    i = i+next_index;
+
+                    dataLabels.add( "" );
+                    dataLabels.add( "\n"+_t_.getCollectionItemCode() );
+                }
+
+                dataLabels.add("");
+
+                resetCustomView();
+
+                BarDataSet set1;
+                set1 = new BarDataSet(yVals1, "");
+                set1.setDrawValues(true);
+                set1.setValueTextSize(15f);
+                set1.setColor(ContextCompat.getColor(mChart.getContext(), R.color.supreme_blue));
+                set1.setStackLabels(new String[]{"จำนวน Storage หน้าร้าน", ""});
+
+                set1.setValueTextColor(ContextCompat.getColor(mChart.getContext(),R.color.supreme_blue));
+                legendCustom("จำนวน Storage หน้าร้าน", ContextCompat.getColor(mChart.getContext(), R.color.supreme_blue));
+
+                dataSets.add(set1);
+            }
+        } else if(dataObject instanceof ItemSellerBestSeller) {
+
+            SellerData.graphUnit = mChart.getContext().getString(R.string.currency_th);
+
+            mChart.setDescription( mChart.getContext().getString(R.string.seller_barchart_best_seller_title) );
+
+            ItemSellerBestSeller temp = (ItemSellerBestSeller) dataObject;
+
+            if(temp.forGraph != null) {
+
+                int i = 0;
+                int j = 1;
+                int k = 2;
+
+                int next_index = 2;
+
+                for (ItemSellerBestSeller _t_ : Reversed.reversed(temp.forGraph)) {
+
+                    float firstDigit = -1f;
+                    float secondDigit = -1f;
+
+                    yVals1.add(new BarEntry(j * spaceForBar, new float[] {Float.parseFloat( _t_.getCollectionNet().replaceAll("[$,]", "")), firstDigit}));
+                    yVals2.add(new BarEntry(i * spaceForBar,  new float[] {Float.parseFloat( _t_.getCollectionLastSumNet().replaceAll("[$,]", "")), secondDigit}));
+                    yVals3.add(new BarEntry(k * spaceForBar,  new float[] {0f, -1f}));
+
+                    j = j+next_index;
+                    i = i+next_index;
+                    k = k+next_index;
+
+                    dataLabels.add("");
+                    dataLabels.add( _t_.getCollectionItemCode() );
+                }
+                dataLabels.add("");
+
+                resetCustomView();
+
+                String label1 = mChart.getContext().getString(R.string.seller_barchart_now);
+                BarDataSet set1;
+                set1 = new BarDataSet(yVals1, "");
+                set1.setDrawValues(true);
+                set1.setValueTextSize(15f);
+                set1.setStackLabels(new String[]{label1, ""});
+                set1.setColor(ContextCompat.getColor(mChart.getContext(), R.color.supreme_blue));
+                set1.setValueTextColor(ContextCompat.getColor(mChart.getContext(),R.color.supreme_blue));
+                legendCustom(label1, ContextCompat.getColor(mChart.getContext(), R.color.supreme_blue));
+
+                String label2 = null;
+
+                switch( temp.getBestSellerCandidateType() ) {
+                    case ChartCandidateType.TYPE_30_CANDIDATE:
+                        label2 = mChart.getContext().getString(R.string.seller_barchart_30);
+                        break;
+                    case ChartCandidateType.TYPE_60_CANDIDATE:
+                        label2 = mChart.getContext().getString(R.string.seller_barchart_60);
+                        break;
+                    case ChartCandidateType.TYPE_180_CANDIDATE:
+                        label2 = mChart.getContext().getString(R.string.seller_barchart_180);
+                        break;
+                    default:
+                        label2 = mChart.getContext().getString(R.string.seller_barchart_30);
+                        break;
+                }
+
+                BarDataSet set2;
+                set2 = new BarDataSet(yVals2, "");
+                set2.setDrawValues(true);
+                set2.setValueTextSize(15f);
+                set2.setStackLabels(new String[]{label2, ""});
+                set2.setColor(ContextCompat.getColor(mChart.getContext(), R.color.deepest_orange));
+                set2.setValueTextColor(ContextCompat.getColor(mChart.getContext(),R.color.deepest_orange));
+                legendCustom(label2, ContextCompat.getColor(mChart.getContext(), R.color.deepest_orange));
+
+                dataSets.add(set1);
+                dataSets.add(set2);
+            }
+        } else if(dataObject instanceof ItemSellerBestSellerMonthToDate) {
+            SellerData.graphUnit = mChart.getContext().getString(R.string.currency_th);
+
+            mChart.setDescription("");
+
+            ItemSellerBestSellerMonthToDate temp = (ItemSellerBestSellerMonthToDate) dataObject;
+
+            if(temp.forGraph != null) {
+
+                int i = 0;
+                int j = 1;
+
+                int next_index = 2;
+
+                for (ItemSellerBestSellerMonthToDate _t_ : Reversed.reversed(temp.forGraph)) {
+
+                    float secondDigit = -1f;
+
+                    yVals2.add(new BarEntry(i * spaceForBar,  new float[] {0f, -1f}));
+                    yVals1.add(new BarEntry(j * spaceForBar,  new float[] {((int) Float.parseFloat(_t_.collectionNet.replaceAll("[$,]", ""))), secondDigit} ));
+
+                    j = j+next_index;
+                    i = i+next_index;
+
+                    dataLabels.add( "" );
+                    dataLabels.add( _t_.getCollectionItemCode() );
+                }
+
+                dataLabels.add("");
+
+                resetCustomView();
+
+                BarDataSet set1;
+                set1 = new BarDataSet(yVals1, "");
+                set1.setDrawValues(true);
+                set1.setValueTextSize(15f);
+                set1.setColor(ContextCompat.getColor(mChart.getContext(), R.color.supreme_blue));
+                set1.setStackLabels(new String[]{"", ""});
+
+                set1.setValueTextColor(ContextCompat.getColor(mChart.getContext(),R.color.supreme_blue));
+                legendCustom("Month to Date", ContextCompat.getColor(mChart.getContext(), R.color.supreme_blue));
+
+                dataSets.add(set1);
+            }
+        } else if (dataObject instanceof ItemSellerStorageDateCover) {
+            SellerData.graphUnit = mChart.getContext().getString(R.string.currency_date_th);
+
+            mChart.setDescription("");
+
+            ItemSellerStorageDateCover temp = (ItemSellerStorageDateCover) dataObject;
+
+            if(temp.forGraph != null) {
+
+                int i = 0;
+                int j = 1;
+
+                int next_index = 2;
+
+                for (ItemSellerStorageDateCover _t_ : Reversed.reversed(temp.forGraph)) {
+
+                    float secondDigit = -1f;
+
+                    yVals2.add(new BarEntry(i * spaceForBar, new float[]{0f, -1f}));
+                    yVals1.add(new BarEntry(j * spaceForBar, new float[]{((int) Float.parseFloat(_t_.getCollectionBal().replaceAll("[$,]", "")) ), secondDigit}));
+
+                    j = j+next_index;
+                    i = i+next_index;
+
+                    dataLabels.add( "" );
+                    dataLabels.add( _t_.getCollectionItemCode() );
+                }
+
+                dataLabels.add("");
+
+                resetCustomView();
+
+                BarDataSet set1;
+                set1 = new BarDataSet(yVals1, "");
+                set1.setDrawValues(true);
+                set1.setValueTextSize(15f);
+                set1.setStackLabels(new String[]{"", ""});
+                set1.setColor(ContextCompat.getColor(mChart.getContext(), R.color.supreme_blue));
+
+                set1.setValueTextColor(ContextCompat.getColor(mChart.getContext(),R.color.supreme_blue));
+                legendCustom("จำนวน Day Cover (วัน)", ContextCompat.getColor(mChart.getContext(), R.color.supreme_blue));
+
+                dataSets.add(set1);
+            }
+        } else if(dataObject instanceof ItemSellerStockKeeper) {
+
+            SellerData.graphUnit = mChart.getContext().getString(R.string.currency_piece_th);
+
+            mChart.setDescription("");
+
+            ItemSellerStockKeeper temp = (ItemSellerStockKeeper) dataObject;
+
+            if(temp.forGraph != null) {
+
+                int i = 0;
+                int j = 1;
+
+                int next_index = 2;
+
+                for (ItemSellerStockKeeper _t_ : Reversed.reversed(temp.forGraph)) {
+
+                    float secondDigit = -1f;
+
+                    yVals2.add(new BarEntry(i * spaceForBar, new float[]{0f, -1f}));
+                    yVals1.add(new BarEntry(j * spaceForBar, new float[]{((int) Float.parseFloat(_t_.getStock().replaceAll("[$,]", ""))), secondDigit}));
+
+                    j = j + next_index;
+                    i = i + next_index;
+
+                    dataLabels.add("");
+                    dataLabels.add(_t_.getCollection());
+                }
+
+                dataLabels.add("");
+
+                resetCustomView();
+
+                BarDataSet set1;
+                set1 = new BarDataSet(yVals1, "");
+                set1.setDrawValues(true);
+                set1.setValueTextSize(15f);
+                set1.setStackLabels(new String[]{"", ""});
+                set1.setColor(ContextCompat.getColor(mChart.getContext(), R.color.supreme_blue));
+
+                set1.setValueTextColor(ContextCompat.getColor(mChart.getContext(), R.color.supreme_blue));
+                legendCustom("จำนวนสินค้า (ชิ้น)", ContextCompat.getColor(mChart.getContext(), R.color.supreme_blue));
+
+                dataSets.add(set1);
+            }
+        } else if (data == null) {
+
+        }
+
+        data = new BarData(dataSets);
+        data.setValueFormatter(new MyValueFormatter());
+        data.setValueTextSize(11.5f);
+        data.setBarWidth(barWidth);
+
+        return data;
+    }
+
+    public class LabelFormatter implements AxisValueFormatter {
+        private final List<String>  mLabels;
+
+        public LabelFormatter(List<String> labels) {
+            mLabels = labels;
+        }
+
+        @Override
+        public String getFormattedValue(float value, AxisBase axis) {
+            if((int) Math.floor(value/granularity) < mLabels.size() ) {
+                if((int) Math.floor(value/granularity) < 0) {
+                    return "";
+                } else {
+                    return mLabels.get((int) Math.floor(value / granularity));
+                }
+            } else {
+                return "";
+            }
+        }
+
+        @Override
+        public int getDecimalDigits() {
+            return 0;
+        }
+    }
+
+    public static class Reversed<T> implements Iterable<T> {
+        private final List<T> original;
+
+        public Reversed(List<T> original) {
+            this.original = original;
+        }
+
+        public Iterator<T> iterator() {
+            final ListIterator<T> i = original.listIterator(original.size());
+
+            return new Iterator<T>() {
+                public boolean hasNext() { return i.hasPrevious(); }
+                public T next() { return i.previous(); }
+                public void remove() { i.remove(); }
+            };
+        }
+
+        public static <T> Reversed<T> reversed(List<T> original) {
+            return new Reversed<T>(original);
+        }
+    }
+
+    public void resetCustomView() {
+        if((barChartLegend).getChildCount() > 0)
+            (barChartLegend).removeAllViews();
+    }
+
+    public void legendCustom(String text, int color) {
+        LinearLayout.LayoutParams parms_left_layout = new LinearLayout.LayoutParams(
+                LinearLayout.LayoutParams.MATCH_PARENT, LinearLayout.LayoutParams.MATCH_PARENT);
+        parms_left_layout.weight = 1F;
+        LinearLayout left_layout = new LinearLayout(mChart.getContext());
+        left_layout.setOrientation(LinearLayout.HORIZONTAL);
+        left_layout.setGravity(Gravity.CENTER);
+        left_layout.setLayoutParams(parms_left_layout);
+
+        LinearLayout.LayoutParams parms_legen_layout = new LinearLayout.LayoutParams(
+                20, 20);
+        parms_legen_layout.setMargins(0, 0, 20, 0);
+        LinearLayout legend_layout = new LinearLayout(mChart.getContext());
+        legend_layout.setLayoutParams(parms_legen_layout);
+        legend_layout.setOrientation(LinearLayout.HORIZONTAL);
+        legend_layout.setBackgroundColor(color);
+        left_layout.addView(legend_layout);
+
+        TextView txt_unit = new TextView(mChart.getContext());
+        txt_unit.setText(text);
+        left_layout.addView(txt_unit);
+
+        barChartLegend.addView(left_layout);
+    }
+
+    // Call Back ทั้งหลายแหล่่ --------------------------->
+
+    // Call back เมื่อรายละเอียดของผลิตภัณฑ์ถูกกระทำ
+    public static InterfaceOnProductDetail setUpDialogDetail = new InterfaceOnProductDetail() {
+
+        @Override
+        public void onProductDetailDestroy() {
+            isValueSelected = false;
+        }
+    };
+
+    // Call back เมื่อ แท่ง ถูกคลิก
+    private OnChartValueSelectedListener onChartValueSelectedListener = new OnChartValueSelectedListener() {
+        @Override
+        public void onValueSelected(Entry e, Highlight h) {
+
+            if( h.getStackIndex() == 0) {
+
+                float XAxisIndex = h.getX()%2;
+
+                int numberOfBar = 2;
+
+                int indexValue = (int) Math.floor(h.getX()/granularity);
+
+                int finalIndex = 0;
+
+                Log.e("dataSet", h.getDataSetIndex()+"");
+
+                SellerData.dataSetNumber = h.getDataSetIndex();
+
+                switch( indexValue % 2 ) {
+                    case 0:
+                        if(indexValue+1 <= dataLabels.size()) {
+                            finalIndex = indexValue+1;
+                            Log.e("EntryValue", dataLabels.get( indexValue+1 ).toString());
+
+                            // เก็บ data set index แล้วส่งไปเรียก รหัส 6 หลักจาก เซิร์ฟเวอร์
+                        } else {
+                            Log.e("error", "......");
+                        }
+                        break;
+                    case 1:
+                        if(indexValue <= dataLabels.size()) {
+                            finalIndex = indexValue;
+                            Log.e("EntryValue", dataLabels.get( indexValue ).toString());
+
+                        } else {
+                            Log.e("error", "......");
+                        }
+                        break;
+                    default:break;
+                }
+
+                if( !isValueSelected ) {
+                    isValueSelected = true;
+
+//                    Intent i = new Intent();
+//                    Bundle b = new Bundle();
+//
+//                    int reportType = SellerData.reportId;
+//                    b.putInt("reportId", reportType);
+//
+//                    String item = dataLabels.get( finalIndex ).toString();
+//                    b.putString("item", item);
+//
+//                    String shopCode = SellerData.shopCode;
+//                    b.putString("shopCode", shopCode);
+//
+//                    i.putExtras(b);
+//                    i.setClass(mChart.getContext(), SellerSubActivity.class);
+//
+//                    mChart.getContext().startActivity(i);
+
+                    //ViewProductDetailDialogFragment newFragment = new ViewProductDetailDialogFragment( SellerData.reportId, dataLabels.get( finalIndex ).toString(), SellerData.shopCode, setUpDialogDetail);
+                    //newFragment.show(((SellerActivity) mChart.getContext()).getSupportFragmentManager(), "Open Dialog");
+                }
+            }
+        }
+
+        @Override
+        public void onNothingSelected() {}
+    };
+}
Index: app/src/main/java/seller/pojo/SellerCollectionPOJO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/pojo/SellerCollectionPOJO.java	(revision )
+++ app/src/main/java/seller/pojo/SellerCollectionPOJO.java	(revision )
@@ -0,0 +1,90 @@
+package seller.pojo;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by Administrator on 18/11/2559.
+ */
+public class SellerCollectionPOJO {
+
+    @SerializedName("data")
+    @Expose
+    private List<Data> data = new ArrayList<Data>();
+
+    /**
+     *
+     * @return
+     * The data
+     */
+    public List<Data> getData() {
+        return data;
+    }
+
+    /**
+     *
+     * @param data
+     * The data
+     */
+    public void setData(List<Data> data) {
+        this.data = data;
+    }
+
+    public static class Data {
+
+        @SerializedName("collection")
+        @Expose
+        private String collection;
+        @SerializedName("bal")
+        @Expose
+        private String bAL;
+        @SerializedName("net")
+        @Expose
+        private String net;
+
+        /**
+         * @return The collection
+         */
+        public String getCollection() {
+            return collection;
+        }
+
+        /**
+         * @param collection The collection
+         */
+        public void setCollection(String collection) {
+            this.collection = collection;
+        }
+
+        /**
+         * @return The bAL
+         */
+        public String getBAL() {
+            return bAL;
+        }
+
+        /**
+         * @param bAL The BAL
+         */
+        public void setBAL(String bAL) {
+            this.bAL = bAL;
+        }
+
+        /**
+         * @return The net
+         */
+        public String getNet() {
+            return net;
+        }
+
+        /**
+         * @param net The net
+         */
+        public void setNet(String net) {
+            this.net = net;
+        }
+    }
+}
Index: app/src/main/java/seller/titlebar/SellerRangeDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/titlebar/SellerRangeDAO.java	(revision )
+++ app/src/main/java/seller/titlebar/SellerRangeDAO.java	(revision )
@@ -0,0 +1,24 @@
+package seller.titlebar;
+
+import com.google.gson.annotations.SerializedName;
+
+/**
+ * Created by Administrator on 28/12/2559.
+ */
+public class SellerRangeDAO {
+    @SerializedName("range")
+    private String range;
+
+    public String getRange() {
+        return range;
+    }
+
+    public void setRange(String range) {
+        this.range = range;
+    }
+
+    @Override
+    public String toString() {
+        return range;
+    }
+}
Index: app/src/main/java/com/example/administrator/myapplication/LoadSearchUserData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/LoadSearchUserData.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/LoadSearchUserData.java	(revision )
@@ -0,0 +1,198 @@
+package com.example.administrator.myapplication;
+
+import android.app.ProgressDialog;
+import android.content.Context;
+import android.graphics.Color;
+import android.os.AsyncTask;
+import android.support.v4.app.FragmentManager;
+import android.support.v7.app.AppCompatActivity;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.Spinner;
+
+
+import org.json.JSONArray;
+import org.json.JSONException;
+import org.json.JSONObject;
+
+import java.io.IOException;
+import java.util.ArrayList;
+import java.util.List;
+
+import okhttp3.MediaType;
+import okhttp3.OkHttpClient;
+import okhttp3.Request;
+import okhttp3.RequestBody;
+import okhttp3.Response;
+
+/**
+ * Created by Administrator on 17/10/2559.
+ */
+public class LoadSearchUserData extends AsyncTask<String, Integer, String> {
+
+    public final MediaType JSON
+            = MediaType.parse("application/json; charset=utf-8");
+
+    private ProgressDialog pd;
+
+    private final String URL = "http://angsila.informatics.buu.ac.th/~55160509/Application/index.php/getSearchUser/data";
+
+    private String res;
+
+    private OkHttpClient client;
+
+    private RequestBody body;
+    private Request request;
+
+    private FragmentManager fragmentManager = null;
+    private Context context = null;
+
+    public LoadSearchUserData() {
+        this.res = "";
+    }
+
+    private String[] userData = null;
+
+    public LoadSearchUserData(FragmentManager fragmentManager, Context context) {
+        this.fragmentManager = fragmentManager;
+        this.context = context;
+    }
+
+    @Override
+    protected void onPreExecute() {
+        super.onPreExecute();
+        pd = new ProgressDialog(this.context);
+        pd.setProgressStyle(ProgressDialog.STYLE_HORIZONTAL);
+        pd.setTitle("กรุณารอสักครู่...");
+        pd.setCancelable(false);
+        pd.setIndeterminate(false);
+        pd.setMax(100);
+        pd.setProgress(0);
+        pd.show();
+    }
+
+    @Override
+    protected void onPostExecute(String result) {
+        pd.dismiss();
+
+        if(this.fragmentManager != null) {
+
+            try {
+                jsonObject = new JSONObject(result);
+
+                jsonArray = jsonObject.getJSONArray("data");
+
+                int jsSize = jsonArray.length();
+
+                List<String> stockList = new ArrayList<String>();
+
+                JSONObject temp = null;
+
+                for(int i = 0 ; i < jsSize; i++) {
+                    temp = jsonArray.getJSONObject(i);
+                    stockList.add(temp.get("usr_mac_address").toString());
+                }
+
+                this.userData = new String[stockList.size()];
+                this.userData = stockList.toArray(this.userData);
+
+                //stockList.toArray(new String[stockList.size()]);
+
+                //View rootView = ((AppCompatActivity)this.context).getWindow().getDecorView();//.findViewById(android.R.id.content);
+
+                //String colors[] = {"Red","Blue","White","Yellow","Black", "Green","Purple","Orange","Grey"};
+
+                //ViewGroup add_phone = (ViewGroup) this.context.getLayoutInflater().inflate(R.layout.dialog_search_user, null);
+
+                //LayoutInflater inflater = (LayoutInflater) this.context.getSystemService( Context.LAYOUT_INFLATER_SERVICE );
+                //View rootView = inflater.inflate(R.layout.dialog_search_user, null);
+
+//                Spinner spinner = (Spinner) rootView.findViewById(R.id.spiinerSearchUser);
+//                ArrayAdapter<String> spinnerArrayAdapter = new ArrayAdapter<String>(this.context, android.R.layout.simple_spinner_dropdown_item, this.userData); //selected item will look like a spinner set from XML
+//                spinnerArrayAdapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
+//                spinner.setAdapter(spinnerArrayAdapter);
+
+                SearchUserDialogFragment newFragment = new SearchUserDialogFragment(this.userData);
+                newFragment.show(this.fragmentManager, "Open Dialog");
+
+            } catch (JSONException e) {
+                Log.i("vvvvvv", "JSON Parse failed.");
+                e.printStackTrace();
+            }
+        }
+
+//        if (this.mMap != null) {
+//            this.mMap.clear();
+//        } else {
+//
+//            try {
+//                jsonObject = new JSONObject(result);
+//
+//                jsonArray = jsonObject.getJSONArray("data");
+//
+//            } catch (JSONException e) {
+//                Log.i("vvvvvv", "JSON Parse failed.");
+//                e.printStackTrace();
+//            }
+////            pd.dismiss();
+//        }
+    }
+
+    protected void onProgressUpdate(Integer... values) {
+        pd.setProgress(values[0]);
+    }
+
+    JSONObject jsonObject;
+
+    JSONObject jsonRequest;
+
+    JSONArray jsonArray;
+
+    @Override
+    protected String doInBackground(String... params)   {
+        client = new OkHttpClient();
+
+        jsonObject = new JSONObject();
+        try {
+
+            //jsonObject.put("usr_id", this.usr_id);
+            //jsonObject.put("time_start", this.dateStart);
+            //jsonObject.put("time_ending", this.dateEnd);
+            //jsonObject.put("method", this.method);
+
+            //jsonArray = new JSONArray();
+            //jsonArray.put(jsonObject);
+
+            jsonRequest = new JSONObject();
+            jsonRequest.put("data", "[]");
+
+            body = RequestBody.create(JSON, jsonRequest.toString());
+            request = new Request.Builder()
+                    .url(URL)
+                    .post(body)
+                    .build();
+
+            try {
+                Response response = client.newCall(request).execute();
+                JSONObject responseObj = new JSONObject(response.body().string());
+
+                //Log.i("vvvvvv", "responseObj: " + responseObj.toString());
+
+                this.res = responseObj.toString();
+            } catch (IOException e) {
+                Log.v("vvvvvv", "response json error");
+                e.printStackTrace();
+            } catch (JSONException e) {
+                Log.v("vvvvvv", "json error");
+                e.printStackTrace();
+            }
+
+        } catch (JSONException e) {
+            e.printStackTrace();
+        }
+        return this.res;
+    }
+}
\ No newline at end of file
Index: app/src/main/java/com/example/administrator/myapplication/LocationActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/LocationActivity.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/LocationActivity.java	(revision )
@@ -0,0 +1,165 @@
+package com.example.administrator.myapplication;
+
+import android.content.Intent;
+import android.support.annotation.LayoutRes;
+import android.support.annotation.NonNull;
+import android.support.design.widget.NavigationView;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.view.GravityCompat;
+import android.support.v4.widget.DrawerLayout;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.util.Log;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.AdapterView;
+import android.widget.ArrayAdapter;
+import android.widget.AutoCompleteTextView;
+import android.widget.FrameLayout;
+import android.widget.ImageView;
+
+import com.google.android.gms.maps.GoogleMap;
+import com.google.android.gms.maps.OnMapReadyCallback;
+import com.google.android.gms.maps.SupportMapFragment;
+
+import java.util.ArrayList;
+import java.util.Arrays;
+import java.util.List;
+
+import AppBar.ApplicationBar;
+import AppBar.BarType;
+import autocomplete.InstantAutocomplete;
+import location.LocationDialogMenu;
+import location.pojo.MacAddressPOJO;
+import location.services.LocationRetrofit;
+import okhttp3.ResponseBody;
+import retrofit.InterfaceListen;
+import retrofit2.Retrofit;
+
+public class LocationActivity extends AppCompatActivity
+        implements NavigationView.OnNavigationItemSelectedListener {
+
+    public GoogleMap mMap;
+
+    public String usr_mac_address = "";
+
+    @Override
+    public boolean onNavigationItemSelected(@NonNull MenuItem item) {
+        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+        drawer.closeDrawer(GravityCompat.START);
+        return true;
+    }
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setContentView(R.layout.view_choose_phone);
+
+        // If first page selection
+        new LocationRetrofit().callServer(getMacAddressCallBack);
+    }
+
+    private InterfaceListen getMacAddressCallBack = new InterfaceListen() {
+
+        @Override
+        public void onResponse(Object data, Retrofit retrofit) {
+
+            final List<MacAddressPOJO> temp = (List<MacAddressPOJO>) data;
+
+            List<String> a = new ArrayList<>();
+
+            for(MacAddressPOJO macAddressPOJO : temp) {
+                a.add(macAddressPOJO.toString());
+            }
+
+            final InstantAutocomplete autoCompleteTextView = (InstantAutocomplete) findViewById(R.id.location_search_tv);
+
+            autoCompleteTextView.setOnClickListener(new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+                    autoCompleteTextView.showDropDown();
+                }
+            });
+
+            autoCompleteTextView.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+                @Override
+                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+                    //setContentView(R.layout.activity_location);
+
+                    usr_mac_address = temp.get(position).getUsrMacAddress();
+
+                    Intent t = new Intent(LocationActivity.this, LocationCaseFormActivity.class);
+
+                    Bundle b = new Bundle();
+
+                    b.putString("USER_MAC_ADDRESS", usr_mac_address);
+
+                    t.putExtra("LOCATION_BUNDLE", b);
+
+                    startActivity(t);
+
+                    //changeContent();
+                }
+            });
+
+            String [] b = a.toArray(new String[a.size()]);
+
+            autoCompleteTextView.setThreshold(0);
+
+            ArrayAdapter<String> arrayAdapter = new ArrayAdapter<>(LocationActivity.this, android.R.layout.select_dialog_singlechoice, b);
+
+            autoCompleteTextView.setAdapter(arrayAdapter);
+            arrayAdapter.setNotifyOnChange(true);
+        }
+
+        @Override
+        public void onBodyError(ResponseBody responseBodyError) {
+
+        }
+
+        @Override
+        public void onBodyErrorIsNull() {
+
+        }
+
+        @Override
+        public void onFailure(Throwable t) {
+
+        }
+    };
+
+    @Override
+    public void onBackPressed() {
+        super.onBackPressed();
+        finish();
+    }
+
+    @Override
+    protected void onStop() {
+        super.onStop();
+        finish();
+    }
+
+    private void changeContent() {
+
+//        ImageView mapOption = (ImageView) findViewById(R.id.map_option);
+//        mapOption.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                new LocationDialogMenu().showDialog(LocationActivity.this, mMap, usr_mac_address);
+//            }
+//        });
+
+        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
+                .findFragmentById(R.id.map);
+
+        mapFragment.getMapAsync(new OnMapReadyCallback() {
+            @Override
+            public void onMapReady(GoogleMap googleMap) {
+                if(mMap == null) {
+                    mMap = googleMap;
+                }
+            }
+        });
+    }
+}
Index: app/src/main/java/seller/SellerAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/SellerAdapter.java	(revision )
+++ app/src/main/java/seller/SellerAdapter.java	(revision )
@@ -0,0 +1,334 @@
+package seller;
+
+import android.content.Context;
+import android.content.Intent;
+import android.graphics.Color;
+import android.os.Bundle;
+import android.support.v7.widget.RecyclerView;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.view.animation.Animation;
+import android.view.animation.AnimationUtils;
+
+import com.example.administrator.myapplication.R;
+import com.example.administrator.myapplication.SellerSubActivity;
+import com.github.mikephil.charting.data.PieEntry;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import seller.graph.BarChartData;
+import seller.graph.PieChartData;
+import seller.item.ItemSellerBestSeller;
+import seller.item.ItemSellerDescription;
+import seller.item.ItemSellerStorageDateCover;
+import seller.item.SellerBaseItem;
+import seller.viewholder.BarChartViewHolder;
+import seller.viewholder.LoadingScreenViewHoler;
+import seller.viewholder.PieChartViewHolder;
+import seller.viewholder.SellerBestSellerViewHolder;
+import seller.viewholder.SellerCollectionViewHolder;
+import seller.viewholder.SellerContentViewHolder;
+import seller.viewholder.SellerDescriptionViewHolder;
+import seller.viewholder.SellerStorageDayCoverViewHolder;
+import seller.viewholder.SellerTitleViewHolder;
+
+public class SellerAdapter extends RecyclerView.Adapter {
+
+    private Context context = null;
+
+    public List<SellerBaseItem> listSellerBaseItem = new ArrayList<>();
+
+    public void setRecyclerAdapter( List<SellerBaseItem> listSellerBaseItem) { this.listSellerBaseItem = listSellerBaseItem; }
+
+    private SellerData sellerData;
+
+    public void setSellerData(SellerData sellerData) { this.sellerData = sellerData; }
+
+    public SellerAdapter(Context context) {
+        this.context = context;
+        this.sellerData = null;
+    }
+
+    private int lastPosition = -1;
+
+    // ---------------------------------------------- Method ---------------------------------------
+
+    @Override
+    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        lastPosition = -1;
+
+        View v = null;
+
+        if(viewType == TypeSellerReport.TYPE_SELLER_TITLE) {
+            v = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_seller_title, parent, false);
+            return new SellerTitleViewHolder(v);
+        } else if(viewType == TypeSellerReport.TYPE_SELLER_DESCRIPTION) {
+            v = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_seller_description, parent, false);
+            return new SellerDescriptionViewHolder(v);
+        } else if(viewType == TypeSellerReport.TYPE_SELLER_COLLECTION) {
+            v = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_collection, parent, false);
+            return new SellerCollectionViewHolder(v);
+        } else if(viewType == TypeSellerReport.TYPE_SELLER_BEST_SELLER) {
+            v = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_best_seller, parent, false);
+            return new SellerBestSellerViewHolder(v);
+        } else if(viewType == TypeSellerReport.TYPE_REPORT_PIE) {
+            v = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_best_seller_graph, parent, false);
+            return new PieChartViewHolder(v);
+        } else if(viewType == TypeSellerReport.TYPE_REPORT_LINE) {
+            v = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_best_seller, parent, false);
+            return new SellerBestSellerViewHolder(v);
+        } else if(viewType == TypeSellerReport.TYPE_REPORT_BAR) {
+            v = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_bar_chart, parent, false);
+            return new BarChartViewHolder(v);
+        } else if(viewType == TypeSellerReport.TYPE_SELLER_LOADING) {
+            v = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_layout_loading, parent, false);
+            return new LoadingScreenViewHoler(v);
+        } else if(viewType == TypeSellerReport.TYPE_STORAGE_UNDEFINED_DAY_COVER || viewType == TypeSellerReport.TYPE_STORAGE_DATE_COVER) {
+            v = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_storage_undefined_day_cover, parent, false);
+            return new SellerStorageDayCoverViewHolder(v);
+        }
+        return null;
+    }
+
+    @Override
+    public void onBindViewHolder(RecyclerView.ViewHolder holder, final int position) {
+
+        if( holder instanceof SellerTitleViewHolder) {
+//            final ItemSellerTitle itemSellerTitle = (ItemSellerTitle) listSellerBaseItem.get(position);
+//
+//            // Set Icon
+//            final SellerTitleViewHolder vh = (SellerTitleViewHolder) holder;
+//            vh.settings.setColorFilter( ContextCompat.getColor(holder.itemView.getContext(), R.color.angel_white) , PorterDuff.Mode.SRC_ATOP);
+//
+//            // Create Drawable
+//            GradientDrawable gradientDrawable = (GradientDrawable) vh.settings.getBackground();
+//            gradientDrawable.setColor( itemSellerTitle.getSettingsBackgroundColor() );
+//            gradientDrawable.setSize(120, 120);
+//
+//            vh.settings.setBackground(gradientDrawable);
+//
+//            // Set icon settings click
+//            vh.settings.setOnClickListener(new View.OnClickListener() {
+//                @Override
+//                public void onClick(View v) {
+//
+//                }
+//            });
+//
+//            vh.option.setOnClickListener(new View.OnClickListener() {
+//                @Override
+//                public void onClick(View v) {
+//                    vh.option.showDropDown();
+//                }
+//            });
+//            vh.option.setOnItemClickListener(new AdapterView.OnItemClickListener() {
+//                @Override
+//                public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
+//                    interfaceOnTitle.onTitleChange(itemSellerTitle.listOptionValue.get(position).getId(), itemSellerTitle.listOptionValue.get(position).getTitle());
+//                }
+//            });
+//
+//            ArrayAdapter<SellerTitleDAO> autoCompleteAdapter = new ArrayAdapter<>(holder.itemView.getContext(), android.R.layout.select_dialog_singlechoice, itemSellerTitle.getListTitleDescription());
+//            vh.option.setAdapter(autoCompleteAdapter);
+
+        } else if(holder instanceof SellerDescriptionViewHolder) {
+            final ItemSellerDescription itemSellerDescription = (ItemSellerDescription) listSellerBaseItem.get(position);
+
+            final SellerDescriptionViewHolder vh = (SellerDescriptionViewHolder) holder;
+
+            vh.shopDescription.setText( itemSellerDescription.getShopDescription() );
+
+            vh.reportDescription.setText( itemSellerDescription.getReportDescription() );
+
+            vh.dateDescription.setText( itemSellerDescription.getDateDescription() );
+
+            if(itemSellerDescription.isExtended) {
+                // Extended Part
+                vh.extendDatePart.setVisibility(View.VISIBLE);
+                vh.extendDateText.setText( itemSellerDescription.getExtendDateDescription() );
+            } else {
+                vh.extendDatePart.setVisibility(View.GONE);
+            }
+        } else if(holder instanceof SellerContentViewHolder) {
+
+        } else if (holder instanceof SellerCollectionViewHolder) {
+//            // get Item from list
+//            final ItemSellerCollection itemSellerCollection = (ItemSellerCollection) listSellerBaseItem.get(position);
+//
+//            // set view holder
+//            final SellerCollectionViewHolder vh = (SellerCollectionViewHolder) holder;
+//
+//            // Set item code
+//            vh.collectionItemCode.setText(itemSellerCollection.getCollectionItemCode());
+//
+//            // Set bal
+//            vh.collectionBal.setText(itemSellerCollection.getCollectionBal()+"");
+//
+//            // Set net
+//            vh.collectionNet.setText(itemSellerCollection.getCollectionNet());
+//
+//            vh.itemView.setOnClickListener(new View.OnClickListener() {
+//                @Override
+//                public void onClick(View v) {
+//                    interfaceOnItem.onItemClickListener( itemSellerCollection.getCollectionItemCode() );
+//                }
+//            });
+
+        } else if (holder instanceof SellerBestSellerViewHolder) {
+//            final ItemSellerBestSeller itemSellerBestSeller = (ItemSellerBestSeller) listSellerBaseItem.get(position);
+//
+//            SellerBestSellerViewHolder vh = (SellerBestSellerViewHolder) holder;
+//
+//            vh.sellRanking.setText(position+"");
+//            vh.collectionItemCode.setText(itemSellerBestSeller.getCollectionItemCode());
+//            vh.collectionNet.setText(itemSellerBestSeller.getCollectionNet());
+//
+//            vh.itemView.setOnClickListener(new View.OnClickListener() {
+//                @Override
+//                public void onClick(View v) {
+//                    interfaceOnItem.onItemClickListener( itemSellerBestSeller.getCollectionItemCode() );
+//                }
+//            });
+
+        } else if (holder instanceof PieChartViewHolder) {
+            ItemSellerBestSeller itemSellerBestSeller = (ItemSellerBestSeller) listSellerBaseItem.get(position);
+
+            PieChartViewHolder vh = (PieChartViewHolder) holder;
+
+            PieChartData pieChartData = new PieChartData(vh.bestSellerPieChart);
+            vh.bestSellerPieChart.setUsePercentValues(true);
+            vh.bestSellerPieChart.setEnabled(false);
+            vh.bestSellerPieChart.setExtraOffsets(5, 10, 5, 5);
+
+            vh.bestSellerPieChart.setDragDecelerationFrictionCoef(0.95f);
+
+            vh.bestSellerPieChart.setDrawHoleEnabled(true);
+            vh.bestSellerPieChart.setHoleColor(Color.WHITE);
+
+            vh.bestSellerPieChart.setTransparentCircleColor(Color.WHITE);
+            vh.bestSellerPieChart.setTransparentCircleAlpha(110);
+
+            vh.bestSellerPieChart.setHoleRadius(58f);
+            vh.bestSellerPieChart.setTransparentCircleRadius(61f);
+
+            vh.bestSellerPieChart.setDrawCenterText(true);
+
+            vh.bestSellerPieChart.setRotationAngle(0);
+
+            vh.bestSellerPieChart.setRotationEnabled(true);
+            vh.bestSellerPieChart.setHighlightPerTapEnabled(true);
+
+            if(this.sellerData != null) {
+                switch(this.sellerData.getREPORT_NO()) {
+                    case TypeSellerReport.TYPE_SELLER_BEST_SELLER:
+                        if (itemSellerBestSeller.forGraph != null) {
+                            //pieChartData.setDataSet(itemSellerBestSeller.forGraph);
+                            //pieChartData.setData(itemSellerBestSeller.forGraph.size(), 100, itemSellerBestSeller.getSum());
+
+                            ArrayList<PieEntry> entries = new ArrayList<>();
+                            for (int i = 0; i < itemSellerBestSeller.forGraph.size(); i++) {
+                                entries.add(new PieEntry((float) ( Double.parseDouble(
+                                    itemSellerBestSeller.forGraph.get(i).getCollectionNet().replaceAll("[$,]", ""))*100/itemSellerBestSeller.getSum() ),
+                                    itemSellerBestSeller.forGraph.get(i).collectionItemCode ));
+                            }
+                            pieChartData.setData(entries);
+                        }
+                        break;
+                    default:break;
+                }
+            }
+
+        } else if(holder instanceof BarChartViewHolder) {
+
+            BarChartViewHolder vh = (BarChartViewHolder) holder;
+
+            BarChartData barChartData = new BarChartData(vh);
+
+            barChartData.setData(listSellerBaseItem.get(position));
+
+        } else if(holder instanceof SellerStorageDayCoverViewHolder) {
+            final SellerStorageDayCoverViewHolder vh = (SellerStorageDayCoverViewHolder) holder;
+
+            final ItemSellerStorageDateCover item = (ItemSellerStorageDateCover) listSellerBaseItem.get(position);
+
+            if(item.getCollectionItemCode() != null) { vh.sku.setText(item.getCollectionItemCode()); }
+            if(item.getCollectionStorage() != null) { vh.storage.setText(item.getCollectionStorage()); }
+
+            if(item.getCollectionXBar() != null && item.getCollectionDayCover() != null) {
+                //float dayCover = Float.parseFloat(item.getCollectionStorage().replaceAll("[$,]", ""))/( Float.parseFloat(item.getCollectionXBar().replaceAll("[$,]", ""))/30);
+                vh.dayCover.setText((int) Math.floor( Float.parseFloat(item.getCollectionDayCover()))+"");
+            }
+
+            Object subSellerView = new View.OnClickListener() {
+                @Override
+                public void onClick(View v) {
+
+                    if(sellerData != null) {
+                        Intent i = new Intent();
+                        Bundle b = new Bundle();
+
+                        int reportType = sellerData.getREPORT_NO();
+                        b.putInt("reportId", reportType);
+
+                        if(item.getCollectionItemCode() != null) {
+                            String itemCode = item.getCollectionItemCode();
+                            b.putString("item", itemCode);
+                        }
+
+                        String shopCode = sellerData.getSHIP_NO();
+                        b.putString("shopCode", shopCode);
+
+                        if(item.getCollectionXBar() != null && item.getCollectionStorage() != null) {
+                            String stock = item.getCollectionStorage();
+                            String XBar = item.getCollectionXBar();
+
+                            String dayCover = item.getCollectionDayCover();
+                            b.putString("stock", stock);
+                            b.putString("XBar", XBar);
+                            b.putString("dayCover", dayCover);
+
+                        } else {
+                            b.putString("stock", "");
+                            b.putString("XBar", "");
+                            b.putFloat("dayCover", 0f);
+                        }
+
+                        i.putExtras(b);
+                        i.setClass(vh.itemView.getContext(), SellerSubActivity.class);
+
+                        vh.itemView.getContext().startActivity(i);
+                    }
+                }
+            };
+
+            vh.itemView.setOnClickListener((View.OnClickListener) subSellerView);
+            vh.moreInfo.setOnClickListener((View.OnClickListener) subSellerView);
+
+        } else if(holder instanceof LoadingScreenViewHoler) {
+
+        }
+        //setAnimation(holder.itemView, position);
+    }
+
+    @Override
+    public int getItemCount() {
+        return this.listSellerBaseItem!=null?this.listSellerBaseItem.size():0;
+    }
+
+    @Override
+    public int getItemViewType(int position) {
+        return this.listSellerBaseItem!=null?this.listSellerBaseItem.get(position).getType():0;
+    }
+
+    private void setAnimation(View viewToAnimate, int position) {
+        // If the bound view wasn't previously displayed on screen, it's animated
+        if (context != null && position > lastPosition) {
+            Animation animation = AnimationUtils.loadAnimation(context, android.R.anim.slide_in_left);
+            viewToAnimate.startAnimation(animation);
+            lastPosition = position;
+        }
+    }
+}
Index: app/src/main/res/layout/activity_simply_pie_chart.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_simply_pie_chart.xml	(revision )
+++ app/src/main/res/layout/activity_simply_pie_chart.xml	(revision )
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent" >
+
+    <com.github.mikephil.charting.charts.PieChart
+        android:id="@+id/chart1"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent" />
+
+</RelativeLayout>
Index: app/src/main/java/invoice/InterfaceInvoice.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/invoice/InterfaceInvoice.java	(revision )
+++ app/src/main/java/invoice/InterfaceInvoice.java	(revision )
@@ -0,0 +1,38 @@
+package invoice;
+
+import com.google.gson.JsonObject;
+
+import org.json.JSONArray;
+import org.json.JSONObject;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import invoice.item.ItemInvoicePreview;
+import okhttp3.MultipartBody;
+import okhttp3.RequestBody;
+import retrofit2.http.Body;
+import retrofit2.http.Field;
+import retrofit2.http.FormUrlEncoded;
+import retrofit2.http.GET;
+import retrofit2.http.Multipart;
+import retrofit2.http.POST;
+import retrofit2.http.Part;
+import retrofit2.http.Query;
+import rx.Observable;
+
+/**
+ * Created by Administrator on 1/3/2560.
+ */
+
+public interface InterfaceInvoice {
+	 @Multipart
+	 @POST("/Application/uploadSignature.php")
+	 Observable<Object> sendBmPx1Server (
+			@Part("jsonItmInC4") RequestBody jsonItmInC4,
+			@Part("latitude") RequestBody latitude,
+			@Part("longitude") RequestBody longitude,
+			@Part("userID") RequestBody userID,
+			@Part("base64bMPx1") RequestBody base64bMPx1
+	 );
+}
Index: app/src/main/res/layout/dialog_search_user.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/dialog_search_user.xml	(revision )
+++ app/src/main/res/layout/dialog_search_user.xml	(revision )
@@ -0,0 +1,50 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+    xmlns:android="http://schemas.android.com/apk/res/android">
+        <FrameLayout
+            android:layout_marginTop="35dp"
+            android:id="@+id/contentSearchUser"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:padding="25dp"
+            android:layout_gravity="center|center">
+
+            <Spinner
+                android:layout_width="wrap_content"
+                android:layout_height="match_parent"
+                android:id="@+id/spinnerSearchUser" />
+        </FrameLayout>
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal"
+            android:gravity="center"
+            android:layout_gravity="center">
+            <Button
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:id="@+id/cancelSearchUser"
+                android:padding="10dp"
+                android:text="ยกเลิก"
+                android:textSize="20sp"
+                android:background="#00ffffff"
+                android:layout_margin="15dp"
+                android:textColor="?attr/colorAccent" />
+
+            <Button
+                android:layout_marginLeft="15dp"
+                android:layout_marginRight="15dp"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:id="@+id/doneSearchUser"
+                android:padding="10dp"
+                android:text="เลือก"
+                android:textSize="20sp"
+                android:background="#00ffffff"
+                android:textColor="?attr/colorAccent"
+                />
+        </LinearLayout>
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/administrator/myapplication/MapsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/MapsActivity.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/MapsActivity.java	(revision )
@@ -0,0 +1,293 @@
+package com.example.administrator.myapplication;
+
+import android.Manifest;
+import android.app.AlertDialog;
+import android.app.Dialog;
+import android.app.TimePickerDialog;
+import android.content.DialogInterface;
+import android.content.pm.PackageManager;
+import android.location.Location;
+import android.support.annotation.LayoutRes;
+import android.support.design.widget.CollapsingToolbarLayout;
+import android.support.design.widget.NavigationView;
+import android.support.v4.app.ActivityCompat;
+import android.os.Bundle;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.view.GravityCompat;
+import android.support.v4.widget.DrawerLayout;
+import android.support.v7.app.ActionBarDrawerToggle;
+import android.support.v7.app.AppCompatActivity;
+import android.support.v7.widget.Toolbar;
+import android.util.Log;
+import android.view.MenuItem;
+import android.view.View;
+import android.widget.FrameLayout;
+import android.widget.ImageButton;
+import android.widget.TimePicker;
+import android.widget.Toast;
+
+import com.google.android.gms.common.ConnectionResult;
+import com.google.android.gms.common.api.GoogleApiClient;
+import com.google.android.gms.location.LocationAvailability;
+import com.google.android.gms.location.LocationListener;
+import com.google.android.gms.location.LocationRequest;
+import com.google.android.gms.location.LocationServices;
+import com.google.android.gms.maps.GoogleMap;
+import com.google.android.gms.maps.OnMapReadyCallback;
+import com.google.android.gms.maps.SupportMapFragment;
+import com.google.android.gms.maps.model.Marker;
+import com.squareup.otto.Produce;
+import com.squareup.otto.Subscribe;
+
+public class MapsActivity extends AppCompatActivity implements NavigationView.OnNavigationItemSelectedListener {
+
+    public GoogleMap mMap;
+
+    public double la;
+    public double lo;
+
+    public static int hourStart = -1;
+    public static int minuteStart = -1;
+
+    public static int hourEning = -1;
+    public static int minuteEnding = -1;
+
+    private SearchUserData data = null;
+
+    //private android.app.FragmentManager fragmentManager;
+    private LoadUserLocationFragment ulFragment;
+    private static final String TAG_TASK_FRAGMENT = "LOAD_USER_LOCATION";
+
+    @Override
+    public void setContentView(@LayoutRes int layoutResID) {
+        DrawerLayout fullLayout = (DrawerLayout) getLayoutInflater().inflate(layoutResID, null);
+
+        FrameLayout frameLayout = (FrameLayout) fullLayout.findViewById(R.id.content);
+
+        getLayoutInflater().inflate(R.layout.activity_maps, frameLayout, true);
+
+        super.setContentView(fullLayout);
+    }
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        setContentView(R.layout.activity_main);
+        // Obtain the SupportMapFragment and get notified when the map is ready to be used.
+        SupportMapFragment mapFragment = (SupportMapFragment) getSupportFragmentManager()
+                .findFragmentById(R.id.map);
+
+        //BusProvider.getInstance().register(this);
+
+        Log.i("vvvvvv", "MapsActivity've already created");
+
+        mapFragment.getMapAsync(new OnMapReadyCallback() {
+            @Override
+            public void onMapReady(GoogleMap googleMap) {
+                if(mMap == null) {
+                    mMap = googleMap;
+
+                    //LatLng latLng = new LatLng(la, lo);
+
+                    //mMap.moveCamera(CameraUpdateFactory.newLatLngZoom(latLng, 15));
+
+                    //mMap.addMarker(new MarkerOptions().position(latLng).title("ตำแหน่งปัจจุบัน"));
+
+                    //new LoadTaskData(mMap, "11").execute();
+                }
+            }
+        });
+
+        CollapsingToolbarLayout collapsingToolbarLayout = (CollapsingToolbarLayout) findViewById(R.id.collapsing_toolbar);
+        collapsingToolbarLayout.setTitle("Application");
+
+        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);
+        setSupportActionBar(toolbar);
+
+        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
+        getSupportActionBar().setDisplayShowHomeEnabled(true);
+
+        // Navigaton Drawer
+            DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+            ActionBarDrawerToggle toggle = new ActionBarDrawerToggle(
+                    this, drawer, toolbar, R.string.navigation_drawer_open, R.string.navigation_drawer_close);
+
+            drawer.setDrawerListener(toggle);
+            toggle.syncState();
+
+            NavigationView navigationView = (NavigationView) findViewById(R.id.nav_view);
+            navigationView.getMenu().clear();
+            navigationView.inflateMenu(R.menu.activity_maps_menu);
+
+            navigationView.setNavigationItemSelectedListener(this);
+
+//            ImageButton imageButton = (ImageButton) findViewById(R.id.backPressed);
+//            imageButton.setVisibility(View.VISIBLE);
+//            imageButton.setOnClickListener(new View.OnClickListener() {
+//                @Override
+//                public void onClick(View v) {
+//                    finish();
+//            }
+//        });
+        // Navigaton Drawer Ending.
+
+//        Button btn1 = (Button) findViewById(R.id.button2);
+//        btn1.setOnClickListener(new View.OnClickListener() {
+//            @Override
+//            public void onClick(View v) {
+//                //showDialog(TIME_DIALOG_ID);
+//
+//                FragmentManager fm = getSupportFragmentManager();
+//                MyDialogFragment newFragment = new MyDialogFragment(mMap);
+//                newFragment.show(fm, "3434");
+//            }
+//        });
+
+        //Log.v("vvvvvv","first first");
+    }
+
+    @SuppressWarnings("StatementWithEmptyBody")
+    @Override
+    public boolean onNavigationItemSelected(MenuItem item) {
+        // Handle navigation view item clicks here.
+        int id = item.getItemId();
+
+        FragmentManager fm = null;
+
+        if (id == R.id.nav_user) {
+            fm = getSupportFragmentManager();
+            new LoadSearchUserData(fm, MapsActivity.this).execute();
+//            fm = getSupportFragmentManager();
+//            SearchUserDialogFragment newFragment = new SearchUserDialogFragment();
+//            newFragment.show(fm, "Open Dialog");
+        } else if (id == R.id.nav_current) {
+            if( produceData() == null ) {
+                new AlertDialog.Builder(MapsActivity.this)
+                        .setTitle("แจ้งเตือน")
+                        .setMessage("กรุณาเลือกผู้ใช้งานก่อน")
+                        .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
+                            public void onClick(DialogInterface dialog, int which) {
+                                // continue with delete
+                                dialog.dismiss();
+                            }
+                        })
+                        .setIcon(android.R.drawable.ic_dialog_alert)
+                        .show();
+            } else {
+                /*fm = getSupportFragmentManager();
+                MyDialogFragment newFragment = new MyDialogFragment(mMap);
+                newFragment.show(fm, "Open Dialog");*/
+                android.support.v4.app.FragmentManager fragmentManager = getSupportFragmentManager();
+                //GoogleMap mMap, String dateStart, String dateEnd, String method, String usr_id) {
+                ulFragment = new LoadUserLocationFragment(mMap,
+                        this.data.getUsr_mac_address(),
+                        MapsActivity.this);
+//
+                fragmentManager.beginTransaction().add(ulFragment,TAG_TASK_FRAGMENT).commit();
+            }
+
+        } else if (id == R.id.nav_datetime) {
+            if( produceData() == null ) {
+                new AlertDialog.Builder(MapsActivity.this)
+                        .setTitle("แจ้งเตือน")
+                        .setMessage("กรุณาเลือกผู้ใช้งานก่อน")
+                        .setPositiveButton(android.R.string.yes, new DialogInterface.OnClickListener() {
+                            public void onClick(DialogInterface dialog, int which) {
+                                // continue with delete
+                                dialog.dismiss();
+                            }
+                        })
+                        .setIcon(android.R.drawable.ic_dialog_alert)
+                        .show();
+            } else {
+//                fm = getSupportFragmentManager();
+//                MyDialogFragment newFragment = new MyDialogFragment(mMap);
+//                newFragment.show(fm, "Open Dialog");
+            }
+        }
+
+        DrawerLayout drawer = (DrawerLayout) findViewById(R.id.drawer_layout);
+        drawer.closeDrawer(GravityCompat.START);
+        return true;
+    }
+
+    @Subscribe
+    public void getMessage(MainActivity.TestData data) {
+        //Log.v("vvvvvv", "etestsetsetetset");
+        Toast.makeText(this, data.message, Toast.LENGTH_LONG).show();
+    }
+
+    @Subscribe
+    public void getMessage(ParallelDataOne data) {
+        //Toast.makeText(this, data.getHour()+" : "+data.getMinute() , Toast.LENGTH_SHORT).show();
+        hourStart = data.getHour();
+        minuteStart = data.getMinute();
+        //Log.v("vvvvvv", data.getHour()+" 1: "+data.getMinute());
+    }
+
+    @Subscribe
+    public void getMessage(ParallelDataTwo data) {
+        hourEning = data.getHour();
+        minuteEnding = data.getMinute();
+        //Log.v("vvvvvv", data.getHour()+" 2: "+data.getMinute());
+        //Toast.makeText(this, data.getHour()+" : "+data.getMinute() , Toast.LENGTH_SHORT).show();
+    }
+
+    @Subscribe
+    public void getMessage(SearchUserData data) {
+        this.data = data;
+        //Log.v("vvvvvv", "Activity Maps : "+data.getUsr_mac_address());
+        //Toast.makeText(this, data.getHour()+" : "+data.getMinute() , Toast.LENGTH_SHORT).show();
+    }
+
+    @Produce
+    public SearchUserData sendMessage() {
+        return this.data;
+    }
+
+    //@Produce
+    public SearchUserData produceData() {
+        return this.data;
+    }
+
+    @Override
+    protected void onStart() {
+        super.onStart();
+    }
+
+    @Override
+    protected void onStop() {
+        super.onStop();
+    }
+
+    @Override
+    protected void onResume() {
+        super.onResume();
+        BusProvider.getInstance().register(this);
+    }
+
+    @Override
+    protected void onPause() {
+        super.onPause();
+        BusProvider.getInstance().unregister(this);
+    }
+
+    @Override
+    protected void onDestroy() {
+        super.onDestroy();
+        Log.v("vvvvvv","MapActivity has been destroyed.");
+    }
+
+    static final int TIME_DIALOG_ID = 999;
+    static final int OPEN_DIALOG_ID = 642;
+
+    @Override
+    protected Dialog onCreateDialog(int id) {
+        switch (id) {
+            case OPEN_DIALOG_ID:
+                break;
+        }
+        return null;
+    }
+}
Index: app/src/main/res/layout/dialog_settime.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/dialog_settime.xml	(revision )
+++ app/src/main/res/layout/dialog_settime.xml	(revision )
@@ -0,0 +1,108 @@
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin">
+
+    <!--<TabHost-->
+        <!--android:id="@+id/tabhost"-->
+        <!--android:layout_width="fill_parent"-->
+        <!--android:layout_height="fill_parent">-->
+        <!--<LinearLayout-->
+            <!--android:orientation="vertical"-->
+            <!--android:layout_width="fill_parent"-->
+            <!--android:layout_height="fill_parent">-->
+            <!--<TabWidget-->
+                <!--android:id="@+id/tabs"-->
+                <!--android:layout_width="fill_parent"-->
+                <!--android:layout_height="wrap_content">-->
+
+                <!--<TextView-->
+                    <!--android:tag="tab0"-->
+                    <!--android:text="Tab 1"-->
+                    <!--android:background="@android:drawable/btn_star_big_on"-->
+                    <!--android:layout_width="wrap_content"-->
+                    <!--android:layout_height="fill_parent"-->
+                    <!--/>-->
+                <!--<TextView-->
+                    <!--android:tag="tab1"-->
+                    <!--android:text="Tab 2"-->
+                    <!--android:layout_width="wrap_content"-->
+                    <!--android:layout_height="fill_parent"-->
+                    <!--/>-->
+                <!--<TextView-->
+                    <!--android:tag="tab2"-->
+                    <!--android:text="Tab 3"-->
+                    <!--android:layout_width="wrap_content"-->
+                    <!--android:layout_height="fill_parent"-->
+                    <!--/>-->
+
+            <!--</TabWidget>-->
+
+            <!--<FrameLayout-->
+                <!--android:id="@+id/tabcontent"-->
+                <!--android:layout_width="fill_parent"-->
+                <!--android:layout_height="fill_parent">-->
+
+                <!--<TextView-->
+                    <!--android:text="Hallo1"-->
+                    <!--android:layout_width="fill_parent"-->
+                    <!--android:layout_height="fill_parent" />-->
+                <!--<TextView-->
+                    <!--android:text="Hallo2"-->
+                    <!--android:layout_width="fill_parent"-->
+                    <!--android:layout_height="fill_parent" />-->
+                <!--<TextView-->
+                    <!--android:text="Hallo3"-->
+                    <!--android:layout_width="fill_parent"-->
+                    <!--android:layout_height="fill_parent" />-->
+
+            <!--</FrameLayout>-->
+        <!--</LinearLayout>-->
+    <!--</TabHost>-->
+
+    <LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+        android:orientation="vertical" android:layout_width="match_parent"
+        android:layout_height="wrap_content">
+
+
+
+            <!--<TabWidget-->
+                <!--android:id="@android:id/tabs"-->
+                <!--android:layout_width="match_parent"-->
+                <!--android:layout_height="wrap_content">-->
+            <!--</TabWidget>-->
+
+                <TimePicker
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:id="@+id/timePicker2"
+                    android:layout_gravity="center_horizontal|bottom" />
+
+            <!--<Button-->
+                <!--android:layout_width="wrap_content"-->
+                <!--android:layout_height="wrap_content"-->
+                <!--android:text="Set Up"-->
+                <!--android:id="@+id/button"-->
+                <!--android:layout_gravity="bottom|center_horizontal"-->
+                <!--android:layout_marginBottom="50dp"-->
+                <!--android:textColor="#ffffff"-->
+                <!--android:background="?attr/colorAccent"-->
+                <!--android:padding="15dp" />-->
+
+            <!--<TextView-->
+                <!--android:layout_width="wrap_content"-->
+                <!--android:layout_height="wrap_content"-->
+                <!--android:text="Hello World"-->
+                <!--android:textSize="20sp"-->
+                <!--android:gravity="center"-->
+                <!--android:id="@+id/textView3"-->
+                <!--android:textColor="?attr/colorAccent"-->
+                <!--android:layout_marginBottom="50dp"-->
+                <!--android:layout_gravity="left|bottom" />-->
+
+    </LinearLayout>
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/seller/SellerData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/SellerData.java	(revision )
+++ app/src/main/java/seller/SellerData.java	(revision )
@@ -0,0 +1,33 @@
+package seller;
+
+/**
+ * Created by Administrator on 18/11/2559.
+ */
+public class SellerData {
+    public static int reportId = 1;
+
+    public static int graphOptionId = 0;
+
+    public static int reportOptional = TypeSellerOptional.TYPE_TOP_10;
+
+    public static int dataSetNumber = 0;
+
+    public static String shopCode = null;
+
+    public static String graphUnit = "";
+
+    public static final String _PURE_DATA_TRANSFER_PORT_ = "3WEQTSSJ-";
+
+    // INNER DATA ------------------------------------------------------------------------------->
+    private String SHIP_NO;
+
+    private int REPORT_NO;
+
+    public String getSHIP_NO() { return SHIP_NO; }
+
+    public void setSHIP_NO(String SHIP_NO) { this.SHIP_NO = SHIP_NO; }
+
+    public int getREPORT_NO() { return REPORT_NO; }
+
+    public void setREPORT_NO(int REPORT_NO) { this.REPORT_NO = REPORT_NO; }
+}
Index: app/src/main/res/layout/activity_maps.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_maps.xml	(revision )
+++ app/src/main/res/layout/activity_maps.xml	(revision )
@@ -0,0 +1,74 @@
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:layout_marginTop="?attr/actionBarSize"
+    app:layout_behavior="@string/appbar_scrolling_view_behavior"
+    tools:context=".MapsActivity" >
+
+    <!--<FrameLayout-->
+        <!--android:id="@+id/radio_group_list_selector"-->
+        <!--android:layout_width="match_parent"-->
+        <!--android:layout_height="75dp"-->
+        <!--android:orientation="horizontal"-->
+        <!--android:background="#40FFFFFF"-->
+        <!--android:padding="4dp">-->
+
+        <!--<Button-->
+            <!--android:layout_width="wrap_content"-->
+            <!--android:layout_height="wrap_content"-->
+            <!--android:text="กำหนดช่วงเวลา"-->
+            <!--android:id="@+id/button2"-->
+
+            <!--android:padding="10dp"-->
+
+            <!--android:textSize="18sp"-->
+            <!--android:textColor="?attr/colorAccent"-->
+            <!--android:background="#FFFFFFFF"-->
+            <!--android:layout_gravity="center|center" />-->
+    <!--</FrameLayout>-->
+
+    <fragment
+        android:id="@+id/map"
+        android:name="com.google.android.gms.maps.SupportMapFragment"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        tools:context="com.example.administrator.myapplication.MapsActivity" />
+
+    <!--<RadioGroup-->
+        <!--android:id="@+id/radio_group_list_selector"-->
+        <!--android:layout_width="match_parent"-->
+        <!--android:layout_height="75dp"-->
+        <!--android:orientation="horizontal"-->
+        <!--android:background="#80000000"-->
+        <!--android:padding="4dp" >-->
+
+        <!--<RadioButton-->
+            <!--android:id="@+id/radioPopular"-->
+            <!--android:layout_width="0dp"-->
+            <!--android:layout_height="match_parent"-->
+            <!--android:text="Popula"-->
+            <!--android:gravity="center_horizontal|center_vertical"-->
+            <!--android:layout_weight="1"-->
+  <!--/>-->
+        <!--<View-->
+            <!--android:id="@+id/VerticalLine"-->
+            <!--android:layout_width="1dip"-->
+            <!--android:layout_height="match_parent"-->
+            <!--android:background="#aaa" />-->
+
+        <!--<RadioButton-->
+            <!--android:id="@+id/radioAZ"-->
+            <!--android:layout_width="0dp"-->
+            <!--android:layout_height="match_parent"-->
+            <!--android:gravity="center_horizontal|center_vertical"-->
+            <!--android:text="Testing"-->
+            <!--android:layout_weight="1" />-->
+
+
+
+
+</LinearLayout>
Index: app/src/main/res/_A0_seller/layout/view_test.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/view_test.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/view_test.xml	(revision )
@@ -0,0 +1,42 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical" android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <RadioGroup
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:background="@color/supreme_blue">
+
+
+        <LinearLayout
+            android:orientation="vertical"
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content">
+
+                <LinearLayout
+                    android:orientation="horizontal"
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:gravity="right">
+
+                    <RadioButton
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="New RadioButton"
+                        android:id="@+id/radioButton" />
+
+                </LinearLayout>
+
+                <TextView
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:textAppearance="?android:attr/textAppearanceLarge"
+                    android:text="Large Text"
+                    android:gravity="right"
+                    android:id="@+id/textView3" />
+
+
+        </LinearLayout>
+    </RadioGroup>
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/animator-v21/appbar_always_elevated.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/animator-v21/appbar_always_elevated.xml	(revision )
+++ app/src/main/res/animator-v21/appbar_always_elevated.xml	(revision )
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="utf-8"?>
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item>
+        <objectAnimator android:propertyName="elevation"
+            android:valueTo="8dp"
+            android:valueType="floatType"
+            android:duration="1"/>
+    </item>
+</selector>
\ No newline at end of file
Index: app/src/main/java/shopFinding/ShopArrayAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/shopFinding/ShopArrayAdapter.java	(revision )
+++ app/src/main/java/shopFinding/ShopArrayAdapter.java	(revision )
@@ -0,0 +1,177 @@
+package shopFinding;
+
+import android.content.Context;
+import android.support.v7.app.AppCompatActivity;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ArrayAdapter;
+import android.widget.Filter;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.R;
+
+import java.util.ArrayList;
+import java.util.List;
+
+/**
+ * Created by Administrator on 17/11/2559.
+ */
+public class ShopArrayAdapter extends ArrayAdapter<ShopDetailPOJO> {
+    private final Context context;
+    private final List<ShopDetailPOJO> shopDetailPOJOs;
+    private final List<ShopDetailPOJO> mShopDetailPOJO_All;
+    private final List<ShopDetailPOJO> mShopDetailPOJO_suggestions;
+
+    private final List<ShopDetailPOJO> temp_itemp;
+
+    private final int resource;
+
+
+    public ShopArrayAdapter(Context context, int resource, List<ShopDetailPOJO> shopDetailPOJOs) {
+        super(context, resource, shopDetailPOJOs);
+        this.context = context;
+        this.resource = resource;
+
+        this.shopDetailPOJOs = new ArrayList<>(shopDetailPOJOs);
+        this.mShopDetailPOJO_All = new ArrayList<>(shopDetailPOJOs);
+        this.mShopDetailPOJO_suggestions = new ArrayList<>();
+        this.temp_itemp = new ArrayList<>();
+    }
+
+    @Override
+    public int getCount() {
+        return shopDetailPOJOs ==null?0: shopDetailPOJOs.size();
+    }
+
+    @Override
+    public ShopDetailPOJO getItem(int position) {
+        return shopDetailPOJOs ==null?null: shopDetailPOJOs.get(position);
+    }
+
+    @Override
+    public long getItemId(int position) {
+        return position;
+    }
+
+    @Override
+    public View getView(int position, View convertView, ViewGroup parent) {
+        try {
+            if (convertView == null) {
+                LayoutInflater inflater = ((AppCompatActivity) this.context).getLayoutInflater();
+                convertView = inflater.inflate(resource, parent, false);
+            }
+            ShopDetailPOJO sp = getItem(position);
+            TextView name = (TextView) convertView.findViewById(R.id.searchTV);
+            name.setText(sp.toString());
+        } catch (Exception e) {
+            e.printStackTrace();
+        }
+        return convertView;
+    }
+
+    private boolean sQWzx = false;
+
+    @Override
+    public Filter getFilter() {
+        return new Filter() {
+            @Override
+            public String convertResultToString(Object resultValue) {
+                return ((ShopDetailPOJO) resultValue).toString();
+            }
+
+            @Override
+            protected FilterResults performFiltering(CharSequence constraint) {
+                if (constraint != null) {
+                    mShopDetailPOJO_suggestions.clear();
+                    temp_itemp.clear();
+                    for (ShopDetailPOJO department : mShopDetailPOJO_All) {
+
+                        if (department.toString().startsWith(constraint.toString().toLowerCase())) {
+                            //newValues.add(value);
+                            mShopDetailPOJO_suggestions.add(department);
+                        } else {
+                            // department = ชื่อร้านค้า
+                            final String[] determinate = department.toString().split("-");
+
+                            if(determinate.length > 0) {
+                                for (int k = 0; k < determinate.length; k++) {
+                                    if(k <= 1) {
+                                        continue;
+                                    }
+                                    if (determinate[k].startsWith(constraint.toString())) {
+                                        mShopDetailPOJO_suggestions.add(department);
+                                        break;
+                                    }
+                                }
+                            }
+
+                            final String[] words = department.toString().split(" ");
+                            final int wordCount = words.length;
+
+                            sQWzx = true;
+
+                            // Start at index 0, in case valueText starts with space(s)
+                            for (int k = 0; k < wordCount; k++) {
+                                // เว้น 1 ไว้เพื่อ รหัสร้านค้า
+                                if(k <= 1) {
+                                    continue;
+                                }
+                                if (words[k].startsWith(constraint.toString())) {
+                                    //newValues.add(value);
+                                    mShopDetailPOJO_suggestions.add(department);
+
+                                    sQWzx = false;
+
+                                    break;
+                                }
+                            }
+
+                            // Develop = 0
+                            if(sQWzx) {
+                                for (int k = 0; k < wordCount; k++) {
+                                    if(k <= 1) {
+                                        continue;
+                                    }
+                                    if( words[k].indexOf(constraint.toString().charAt(0)) >= 0 ) {
+                                        temp_itemp.add(department);
+                                        break;
+                                    }
+                                }
+                            }
+                        }
+                    }
+
+                    for (ShopDetailPOJO x : temp_itemp)
+                        mShopDetailPOJO_suggestions.add(x);
+
+
+                    FilterResults filterResults = new FilterResults();
+                    filterResults.values = mShopDetailPOJO_suggestions;
+                    filterResults.count = mShopDetailPOJO_suggestions.size();
+                    return filterResults;
+                } else {
+                    return new FilterResults();
+                }
+            }
+
+            @Override
+            protected void publishResults(CharSequence constraint, FilterResults results) {
+                shopDetailPOJOs.clear();
+                if (results != null && results.count > 0) {
+                    // avoids unchecked cast warning when using mDepartments.addAll((ArrayList<Department>) results.values);
+                    List<?> result = (List<?>) results.values;
+                    for (Object object : result) {
+                        if (object instanceof ShopDetailPOJO) {
+                            shopDetailPOJOs.add((ShopDetailPOJO) object);
+                        }
+                    }
+                } else if (constraint == null) {
+                    // no filter, add entire original list back in
+                    shopDetailPOJOs.addAll(mShopDetailPOJO_All);
+                }
+                notifyDataSetChanged();
+            }
+        };
+    }
+}
Index: app/src/main/java/seller/TypeSellerReport.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/TypeSellerReport.java	(revision )
+++ app/src/main/java/seller/TypeSellerReport.java	(revision )
@@ -0,0 +1,27 @@
+package seller;
+
+/**
+ * Created by Administrator on 17/11/2559.
+ */
+public class TypeSellerReport {
+    public static final int TYPE_SELLER_TITLE = 0;
+    public static final int TYPE_SELLER_DESCRIPTION = 1;
+
+    public static final int TYPE_SELLER_COLLECTION = 2;
+    public static final int TYPE_STORAGE_DATE_COVER = 3;
+    public static final int TYPE_STORAGE_UNDEFINED_DAY_COVER = 4;
+
+    public static final int TYPE_SELLER_BEST_SELLER = 7;
+    public static final int TYPE_BEST_SELLER_MONTH_TO_DATE = 8;
+
+    public static final int TYPE_STOCK_KEEPER = 52;
+
+    public static final int TYPE_REPORT_PIE = 74;
+    public static final int TYPE_REPORT_LINE = 75;
+    public static final int TYPE_REPORT_BAR = 76;
+
+    public static final int TYPE_SELLER_SUB_TITLE = 116;
+    public static final int TYPE_SELLER_SUB_SKU_DAY_COVER = 117;
+
+    public static final int TYPE_SELLER_LOADING = 999;
+}
\ No newline at end of file
Index: app/src/main/java/seller/viewholder/SellerDescriptionViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/viewholder/SellerDescriptionViewHolder.java	(revision )
+++ app/src/main/java/seller/viewholder/SellerDescriptionViewHolder.java	(revision )
@@ -0,0 +1,31 @@
+package seller.viewholder;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.R;
+
+/**
+ * Created by Administrator on 13/12/2559.
+ */
+public class SellerDescriptionViewHolder extends RecyclerView.ViewHolder {
+
+    public TextView shopDescription;
+    public TextView reportDescription;
+
+    public TextView dateDescription;
+    public LinearLayout extendDatePart;
+    public TextView extendDateText;
+
+    public SellerDescriptionViewHolder(View itemView) {
+        super(itemView);
+        //shopDescription = (TextView) itemView.findViewById(R.id.shop_description);
+        //reportDescription = (TextView) itemView.findViewById(R.id.report_description);
+
+        //dateDescription = (TextView) itemView.findViewById(R.id.date_description);
+        //extendDatePart = (LinearLayout) itemView.findViewById(R.id.extend_date_part);
+        //extendDateText = (TextView) itemView.findViewById(R.id.extend_date_text);
+    }
+}
Index: app/src/main/res/layout-land/view_barcode.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout-land/view_barcode.xml	(revision )
+++ app/src/main/res/layout-land/view_barcode.xml	(revision )
@@ -0,0 +1,44 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:tobavity="center"
+
+    android:background="@color/stone_gray">
+
+    <include layout="@layout/zxing_capture"/>
+
+    <Button
+        android:layout_width="36dp"
+        android:layout_height="36dp"
+        android:layout_marginTop="@dimen/round_padding"
+        android:layout_marginStart="@dimen/double_round"
+        android:id="@+id/zxing_back_button"
+        android:background="@drawable/ic_arrow_back_36_white_fixed" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="36dp"
+        android:layout_marginTop="@dimen/round_padding"
+        android:layout_marginStart="@dimen/round_padding"
+        android:text="(ยกเลิก)"
+        android:textSize="@dimen/font_app_name"
+        android:textColor="@color/angel_white"
+
+        android:gravity="center"
+
+        android:layout_alignParentTop="true"
+        android:layout_toEndOf="@+id/zxing_back_button"/>
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="กรุณาถ่ายแถบ Barcode ของใบสั่งสินค้า"
+        android:textSize="27sp"
+        android:textColor="@color/angel_white"
+
+        android:gravity="center"
+
+        android:layout_alignParentBottom="true"/>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/user/UserAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/user/UserAdapter.java	(revision )
+++ app/src/main/java/user/UserAdapter.java	(revision )
@@ -0,0 +1,149 @@
+package user;
+
+import android.content.Intent;
+import android.graphics.PorterDuff;
+import android.graphics.drawable.GradientDrawable;
+import android.os.Bundle;
+import android.support.v4.content.ContextCompat;
+import android.support.v7.widget.RecyclerView;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+
+import com.example.administrator.myapplication.R;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import invoice.InvoiceData;
+import user.user.item.ItemMenu;
+import user.user.item.ItemSection;
+import user.user.item.MenuMethod;
+import user.user.viewholder.ViewHolderMenu;
+import user.user.viewholder.ViewHolderSection;
+
+/**
+ * Created by Administrator on 15/11/2559.
+ */
+public class UserAdapter extends RecyclerView.Adapter {
+
+    private static final int REQUEST_CAMERA = 9382;
+
+    public static int VIEW_SECTION = 0;
+    public static int VIEW_MENU = 1;
+
+    private InterfaceCamera interfaceCamera = null;
+    private Bundle b = null;
+
+    public void setInterfaceCamera(InterfaceCamera interfaceCamera) {
+        this.interfaceCamera = interfaceCamera;
+    }
+
+    public void setBundle(Bundle b) { this.b = b; }
+
+    private List<UserBaseItem> userBaseItem = new ArrayList<>();
+
+    public UserAdapter() {}
+
+    public void setRecyclerAdapter(List<UserBaseItem> userBaseItem) {
+        this.userBaseItem = userBaseItem;
+    }
+
+    @Override
+    public RecyclerView.ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        if(viewType == VIEW_SECTION) {
+            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_section, parent, false);
+            return new ViewHolderSection(view);
+        } else if(viewType == VIEW_MENU) {
+            View view = LayoutInflater.from(parent.getContext()).inflate(R.layout.view_menu, parent, false);
+            return new ViewHolderMenu(view);
+        }
+
+        return null;
+    }
+
+    @Override
+    public void onBindViewHolder(RecyclerView.ViewHolder holder, int position) {
+
+        if( holder instanceof ViewHolderSection) {
+            ViewHolderSection viewHolderSection = (ViewHolderSection) holder;
+            ItemSection itemSection = (ItemSection) userBaseItem.get(position);
+
+            viewHolderSection.sectionTextView.setText( itemSection.getSection() );
+            viewHolderSection.sectionBar.setBackgroundColor( itemSection.getColor() );
+
+        } else if(holder instanceof ViewHolderMenu) {
+            final ViewHolderMenu viewHolderMenu = (ViewHolderMenu) holder;
+            final ItemMenu itemMenu = (ItemMenu) userBaseItem.get(position);
+
+            viewHolderMenu.imageSource.setImageResource( itemMenu.getImageSource() );
+            viewHolderMenu.menuName.setText( itemMenu.getMenuName() );
+            viewHolderMenu.detailName.setText( itemMenu.getDetailName() );
+            viewHolderMenu.itemView.setBackgroundColor(ContextCompat.getColor(holder.itemView.getContext(), R.color.angel_white));
+
+            if( itemMenu.getImageResourceColor() != 0 ) {
+
+                viewHolderMenu.imageSource.setColorFilter( ContextCompat.getColor(holder.itemView.getContext(), R.color.angel_white) , PorterDuff.Mode.SRC_ATOP);
+
+                GradientDrawable bgShape = (GradientDrawable) viewHolderMenu.imageSource.getBackground();
+                bgShape.setColor( itemMenu.getImageResourceColor() );
+                bgShape.setSize(120, 120);
+
+                viewHolderMenu.imageSource.setBackground(bgShape);
+            }
+
+            if(itemMenu.getTarget() != null) {
+                viewHolderMenu.itemView.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        Intent t = new Intent(viewHolderMenu.itemView.getContext(), itemMenu.getTarget());
+                        viewHolderMenu.itemView.getContext().startActivity(t);
+                    }
+                });
+            }
+
+            if(interfaceCamera != null) {
+                viewHolderMenu.itemView.setOnClickListener(new View.OnClickListener() {
+                    @Override
+                    public void onClick(View v) {
+                        switch(itemMenu.getMenuMethod()) {
+                            case MenuMethod.T_PHOTO :
+                                interfaceCamera.onCapture();
+                                break;
+                            case MenuMethod.T_BARCODE:
+
+                                // test flow
+                                //Intent t = new Intent(viewHolderMenu.itemView.getContext(), CanvasActivity.class);
+                                //viewHolderMenu.itemView.getContext().startActivity(t);
+
+                                // normal flow
+                                // Reset ค่า End of scanning เพื่อที่จะให้ Scan ได้อีกครั้ง
+                                //if( b!= null )
+                                    //b.remove(interfaceCamera.E_O_S);
+                                interfaceCamera.onBarcodeScan(InvoiceData.INVOICE_CASE_INVOICE_PREVIEW, InvoiceData.INVOICE_PREVIEW_PRODUCT, R.layout.view_barcode);
+                                break;
+                        }
+                    }
+                });
+            }
+        }
+    }
+
+    @Override
+    public int getItemCount() {
+        if(this.userBaseItem != null) {
+            return this.userBaseItem.size();
+        } else {
+            return 0;
+        }
+    }
+
+    @Override
+    public int getItemViewType(int position) {
+        if(this.userBaseItem != null) {
+            return this.userBaseItem.get(position).getViewType();
+        } else {
+            return 0;
+        }
+    }
+}
Index: app/src/main/java/shopFinding/InterfaceOnShop.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/shopFinding/InterfaceOnShop.java	(revision )
+++ app/src/main/java/shopFinding/InterfaceOnShop.java	(revision )
@@ -0,0 +1,11 @@
+package shopFinding;
+
+import android.app.Activity;
+import android.support.v7.app.AppCompatActivity;
+
+/**
+ * Created by Administrator on 23/11/2559.
+ */
+public interface InterfaceOnShop {
+    public void shopSelected(String shopName);
+}
Index: app/src/main/java/seller/item/ItemSellerDescription.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/item/ItemSellerDescription.java	(revision )
+++ app/src/main/java/seller/item/ItemSellerDescription.java	(revision )
@@ -0,0 +1,52 @@
+package seller.item;
+
+import seller.TypeSellerReport;
+
+/**
+ * Created by Administrator on 13/12/2559.
+ */
+public class ItemSellerDescription extends SellerBaseItem {
+    public String shopDescription;
+    public String reportDescription;
+    public String dateDescription;
+
+    public boolean isExtended = false;
+    public String extendDateDescription;
+
+    public String getShopDescription() {
+        return shopDescription;
+    }
+
+    public ItemSellerDescription() {
+        super(TypeSellerReport.TYPE_SELLER_DESCRIPTION);
+        isExtended = false;
+    }
+
+    public void setShopDescription(String shopDescription) {
+        this.shopDescription = shopDescription;
+    }
+
+    public String getReportDescription() {
+        return reportDescription;
+    }
+
+    public void setReportDescription(String reportDescription) {
+        this.reportDescription = reportDescription;
+    }
+
+    public String getDateDescription() {
+        return dateDescription;
+    }
+
+    public void setDateDescription(String dateDescription) {
+        this.dateDescription = dateDescription;
+    }
+
+    public String getExtendDateDescription() {
+        return extendDateDescription;
+    }
+
+    public void setExtendDateDescription(String extendDateDescription) {
+        this.extendDateDescription = extendDateDescription;
+    }
+}
Index: app/src/main/res/_A0_location/layout/dialog_location_range_time.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_location/layout/dialog_location_range_time.xml	(revision )
+++ app/src/main/res/_A0_location/layout/dialog_location_range_time.xml	(revision )
@@ -0,0 +1,100 @@
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="@color/angel_white">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:background="@color/dark_honest_green"
+
+        android:paddingLeft="@dimen/round_padding"
+        android:paddingRight="@dimen/round_padding"
+
+        android:paddingTop="@dimen/title_expanded"
+        android:paddingBottom="@dimen/title_expanded">
+
+        <ImageView
+            android:layout_width="36dp"
+            android:layout_height="match_parent"
+
+            android:layout_marginLeft="@dimen/round_padding"
+            android:layout_marginRight="@dimen/round_padding"
+
+            android:id="@+id/dialog_close"
+            android:src="@drawable/ic_arrow_back_white_24dp"
+            android:layout_gravity="center_vertical"/>
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:id="@+id/dialog_header"
+            android:text="......"
+            android:textColor="@color/angel_white"
+            android:textSize="20sp"
+            android:gravity="center|left"
+            android:padding="@dimen/round_padding"
+            />
+    </LinearLayout>
+
+    <android.support.v4.widget.NestedScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/sellerNestedScrollView">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:id="@+id/dialog_content"
+            android:padding="@dimen/round_padding"
+            android:orientation="vertical"
+            android:background="@color/little_light_gray">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="@color/angel_white"
+                android:padding="@dimen/round_padding"
+                android:orientation="horizontal"
+
+                android:id="@+id/layout_range_picked">
+
+                <ImageView
+                    android:layout_width="36dp"
+                    android:layout_height="match_parent"
+                    android:src="@drawable/ic_date_range_green_48dp"
+                    android:layout_gravity="left|center"/>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="ระบุขอบเขตเวลา"
+                        android:textSize="18sp"
+                        android:textColor="@color/jet_black"
+                        android:layout_gravity="right"/>
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="กำหนดช่วงของเวลาเพื่อแสดงเส้นทางการเดินทาง"
+                        android:textColor="@color/space_gray"
+                        android:layout_gravity="right"/>
+
+                </LinearLayout>
+            </LinearLayout>
+
+
+        </LinearLayout>
+
+    </android.support.v4.widget.NestedScrollView>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/_A0_seller/layout/dialog_report_picker.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/dialog_report_picker.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/dialog_report_picker.xml	(revision )
@@ -0,0 +1,139 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="horizontal"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+
+        android:layout_gravity="center_horizontal|center_vertical"
+
+        android:background="@color/stone_gray">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:orientation="horizontal"
+
+            android:padding="@dimen/double_round"
+
+            android:background="@color/rising_green">
+
+            <Button
+                android:layout_width="36dp"
+                android:layout_height="36dp"
+
+                android:background="@drawable/ic_arrow_back_white_24dp"
+
+                android:id="@+id/view_dialog_description_close"
+                style="@style/Base.Widget.AppCompat.Button.Borderless" />
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:layout_marginStart="@dimen/double_round"
+
+                android:gravity="center|left"
+
+                android:id="@+id/view_dialog_description_title"
+
+                android:text="เลือกประเภทของรายงาน"
+                android:textColor="@color/angel_white"
+                android:textSize="21sp"/>
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_marginStart="@dimen/double_round"
+            android:layout_marginTop="@dimen/double_round"
+            android:layout_marginEnd="@dimen/double_round"
+            android:layout_marginBottom="@dimen/double_round"
+            android:orientation="vertical">
+
+            <TextView
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:textColor="@color/angel_white"
+                android:textSize="@dimen/font_text_view"
+                android:text="กำหนดประเภทของการแสดงผลตามรูปแบบ"/>
+
+            <autocomplete.InstantAutocomplete
+                android:layout_width="match_parent"
+                android:layout_height="@dimen/gate_margin"
+
+                android:layout_marginTop="@dimen/double_round"
+                android:layout_gravity="center_horizontal"
+                android:gravity="center"
+
+                android:padding="@dimen/round_padding"
+
+                android:focusable="false"
+                android:focusableInTouchMode="true"
+
+                android:id="@+id/option"
+
+                android:ellipsize="start"
+                android:maxLines="1"
+                android:scrollHorizontally="true"
+                android:inputType="text"
+
+                android:hint="ประเภทของรายงาน"
+                android:textColorHint="@color/angel_white"
+                android:drawableEnd="@drawable/ic_arrow_drop_down_black"
+
+                android:textSize="@dimen/font_text_view"
+                android:textColor="@color/shadow_white"
+
+                android:background="@color/rising_green"/>
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+
+                android:gravity="right|center"
+
+                android:layout_marginTop="@dimen/double_round">
+
+                <!--<Button-->
+                    <!--android:layout_width="wrap_content"-->
+                    <!--android:layout_height="@dimen/gate_margin"-->
+
+                    <!--android:paddingStart="@dimen/gate_margin"-->
+                    <!--android:paddingEnd="@dimen/gate_margin"-->
+
+                    <!--android:text="ยกเลิก"-->
+                    <!--android:textSize="@dimen/font_text_view"-->
+                    <!--android:textColor="@color/fortune_green"-->
+
+                    <!--android:background="@color/shadow_white"/>-->
+
+                <Button
+                    android:layout_width="wrap_content"
+                    android:layout_height="@dimen/gate_margin"
+
+                    android:layout_marginStart="@dimen/double_round"
+
+                    android:paddingStart="@dimen/gate_margin"
+                    android:paddingEnd="@dimen/gate_margin"
+
+                    android:id="@+id/view_dialog_description_submit"
+
+                    android:text="เลือก"
+                    android:textSize="@dimen/font_text_view"
+                    android:textColor="@color/angel_white"
+
+                    android:background="@color/rising_green"/>
+
+            </LinearLayout>
+
+        </LinearLayout>
+
+
+    </LinearLayout>
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/seller/services/prototype/InterfaceCollection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/services/prototype/InterfaceCollection.java	(revision )
+++ app/src/main/java/seller/services/prototype/InterfaceCollection.java	(revision )
@@ -0,0 +1,43 @@
+package seller.services.prototype;
+
+import java.util.List;
+
+import retrofit2.http.GET;
+import retrofit2.http.Header;
+import retrofit2.http.Query;
+import rx.Observable;
+import seller.pojo.SellerCollectionPOJO;
+import seller.pojo.SellerStockKeeperPOJO;
+
+/**
+ * Created by Administrator on 18/11/2559.
+ */
+public interface InterfaceCollection {
+
+    @GET("/~55160509/android/SimpleOrder/getminor.php")
+    Observable<SellerCollectionPOJO> getCollection(
+            @Query("shop_code") String shopCode
+    );
+
+//    @GET("/~55160509/android/SimpleOrder/getminor.php")
+//    Observable<SellerCollectionPOJO> getCollectionByItemCode(
+//            @Query("shop_code") String shopCode,
+//            @Query("itemcode") String itemCode
+//    );
+
+    @GET("/Application/getStorageTwice.php")
+    Observable<SellerCollectionPOJO> getStorageTwice (
+            @Query("shop_code") String shopCode
+    );
+
+    @GET("/Application/getStorageTwice.php")
+    Observable<SellerCollectionPOJO> getStorageTwiceByItemCode (
+            @Query("shop_code") String shopCode,
+            @Query("itemcode") String itemCode
+    );
+
+    @GET("/Application/getStock.php")
+    Observable<List<SellerStockKeeperPOJO>> getStockKeeper (
+            @Query("shop_code") String shopCode
+    );
+}
Index: app/src/main/java/seller/pojo/SellerBestSellerMonthToDatePOJO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/pojo/SellerBestSellerMonthToDatePOJO.java	(revision )
+++ app/src/main/java/seller/pojo/SellerBestSellerMonthToDatePOJO.java	(revision )
@@ -0,0 +1,34 @@
+package seller.pojo;
+
+import com.google.gson.annotations.Expose;
+import com.google.gson.annotations.SerializedName;
+
+/**
+ * Created by Administrator on 18/1/2560.
+ */
+public class SellerBestSellerMonthToDatePOJO {
+
+    @SerializedName("collection")
+    @Expose
+    private String collection;
+    @SerializedName("net")
+    @Expose
+    private String net;
+
+    public String getCollection() {
+        return collection;
+    }
+
+    public void setCollection(String collection) {
+        this.collection = collection;
+    }
+
+    public String getNet() {
+        return net;
+    }
+
+    public void setNet(String net) {
+        this.net = net;
+    }
+
+}
Index: app/src/main/java/intent/IntentKeycode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/intent/IntentKeycode.java	(revision )
+++ app/src/main/java/intent/IntentKeycode.java	(revision )
@@ -0,0 +1,9 @@
+package intent;
+
+/**
+ * Created by Administrator on 7/3/2560.
+ */
+
+public class IntentKeycode {
+	 public static final int RESULT_CANVAS = 1772;
+}
Index: app/src/main/java/seller/item/ItemSellerCollection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/item/ItemSellerCollection.java	(revision )
+++ app/src/main/java/seller/item/ItemSellerCollection.java	(revision )
@@ -0,0 +1,55 @@
+package seller.item;
+
+import java.util.List;
+
+/**
+ * Created by Administrator on 18/11/2559.
+ */
+public class ItemSellerCollection extends SellerBaseItem {
+
+    public String collectionItemCode;
+    public String collectionBal;
+    public String collectionNet;
+
+    public List<ItemSellerCollection> forGraph;
+
+    public ItemSellerCollection(int report_id) {
+        super(report_id);
+    }
+
+    public static ItemSellerCollection makeItem(int report_id) {
+        return new ItemSellerCollection(report_id);
+    }
+
+    public String getCollectionItemCode() {
+        return collectionItemCode;
+    }
+
+    public void setCollectionItemCode(String collectionItemCode) {
+        this.collectionItemCode = collectionItemCode;
+    }
+
+    public String getCollectionBal() {
+        return collectionBal;
+    }
+
+    public void setCollectionBal(String collectionBal) {
+        this.collectionBal = collectionBal;
+    }
+
+    public String getCollectionNet() {
+        return collectionNet;
+    }
+
+    public void setCollectionNet(String collectionNet) {
+        this.collectionNet = collectionNet;
+    }
+
+    public List<ItemSellerCollection> getForGraph() {
+        return forGraph;
+    }
+
+    public void setForGraph(List<ItemSellerCollection> forGraph) {
+        this.forGraph = forGraph;
+    }
+}
Index: app/src/main/res/_A0_seller/layout/view_collection.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/view_collection.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/view_collection.xml	(revision )
@@ -0,0 +1,132 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:clipToPadding="false"
+
+    android:layout_marginTop="@dimen/round_padding"
+    android:background="@color/angel_white">
+
+    <LinearLayout
+        android:orientation="vertical"
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+
+        android:padding="@dimen/round_padding"
+        android:background="@drawable/shape_elevation">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+            android:orientation="horizontal">
+
+            <!--1-->
+            <ImageView
+                android:layout_width="48dp"
+                android:layout_height="48dp"
+                android:src="@drawable/ic_more_horiz_gray_24dp" />
+            <!--<TextView-->
+                <!--android:layout_width="wrap_content"-->
+                <!--android:layout_height="match_parent"-->
+                <!--android:gravity="center"-->
+                <!--android:textSize="15sp"-->
+                <!--android:text="แตะเพื่อดูรายละเอียด"-->
+                <!--android:textStyle="italic"/>-->
+
+            <!--2-->
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:orientation="vertical"
+                android:gravity="center_vertical">
+
+                <!--2.1-->
+                <TextView
+                    android:layout_width="match_parent"
+                    android:layout_height="wrap_content"
+                    android:gravity="right"
+
+                    android:text="WCA"
+                    android:id="@+id/collectionItemCode"
+                    android:textColor="@color/dark_blue"
+                    android:textSize="36sp"/>
+                </LinearLayout>
+
+        </LinearLayout>
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="wrap_content"
+
+            android:layout_marginTop="9dp"
+            android:layout_marginLeft="@dimen/round_padding">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="wrap_content"
+                android:orientation="horizontal">
+
+                <LinearLayout
+                    android:layout_width="wrap_content"
+                    android:layout_height="match_parent">
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+
+                        android:text="BAL "
+                        android:textColor="@color/supreme_blue"
+                        android:textSize="18sp"/>
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+
+                        android:id="@+id/collectionBal"
+
+                        android:text="929"
+                        android:textColor="@color/space_gray"
+                        android:textSize="18sp"/>
+                </LinearLayout>
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+                    android:gravity="right">
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+
+                        android:text="ยอดขาย "
+                        android:textColor="@color/honest_green"
+                        android:textSize="18sp"/>
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+
+                        android:id="@+id/collectionNet"
+
+                        android:text="336,330"
+                        android:textColor="@color/space_gray"
+                        android:textSize="18sp"/>
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+
+                        android:text=" ฿."
+                        android:textColor="@color/honest_green"
+                        android:textSize="18sp"/>
+
+                </LinearLayout>
+
+            </LinearLayout>
+
+        </LinearLayout>
+
+    </LinearLayout>
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/layout/view_barcode_next.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/view_barcode_next.xml	(revision )
+++ app/src/main/res/layout/view_barcode_next.xml	(revision )
@@ -0,0 +1,47 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    xmlns:tobavity="center"
+
+    android:background="@color/stone_gray">
+
+    <include layout="@layout/zxing_capture"/>
+
+    <Button
+        android:layout_width="36dp"
+        android:layout_height="36dp"
+        android:layout_marginTop="@dimen/round_padding"
+        android:layout_marginEnd="@dimen/double_round"
+        android:id="@+id/zxing_back_button"
+
+        android:layout_alignParentEnd="true"
+
+        android:background="@drawable/ic_arrow_forward_36_white_fixed" />
+
+    <TextView
+        android:layout_width="wrap_content"
+        android:layout_height="36dp"
+        android:layout_marginTop="@dimen/round_padding"
+        android:layout_marginEnd="@dimen/round_padding"
+        android:text="(ข้ามขั้นตอนนี้)"
+        android:textSize="@dimen/font_app_name"
+        android:textColor="@color/angel_white"
+
+        android:gravity="center"
+
+        android:layout_alignParentTop="true"
+        android:layout_toStartOf="@+id/zxing_back_button"/>
+
+    <TextView
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:text="กรุณาสแกนบัตรพนักงานของท่าน"
+        android:textSize="27sp"
+        android:textColor="@color/angel_white"
+
+        android:gravity="center"
+
+        android:layout_alignParentBottom="true"/>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/seller/viewholder/SellerBestSellerViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/viewholder/SellerBestSellerViewHolder.java	(revision )
+++ app/src/main/java/seller/viewholder/SellerBestSellerViewHolder.java	(revision )
@@ -0,0 +1,23 @@
+package seller.viewholder;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.R;
+
+/**
+ * Created by Administrator on 18/11/2559.
+ */
+public class SellerBestSellerViewHolder extends RecyclerView.ViewHolder {
+    public TextView sellRanking;
+    public TextView collectionItemCode;
+    public TextView collectionNet;
+
+    public SellerBestSellerViewHolder(View itemView) {
+        super(itemView);
+        sellRanking = (TextView) itemView.findViewById(R.id.sellRanking);
+        collectionItemCode = (TextView) itemView.findViewById(R.id.collectionItemCode);
+        collectionNet = (TextView) itemView.findViewById(R.id.collectionNet);
+    }
+}
Index: app/src/main/java/seller/viewholder/SellerStorageDayCoverViewHolder.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/viewholder/SellerStorageDayCoverViewHolder.java	(revision )
+++ app/src/main/java/seller/viewholder/SellerStorageDayCoverViewHolder.java	(revision )
@@ -0,0 +1,37 @@
+package seller.viewholder;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+import android.widget.Button;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.R;
+
+/**
+ * Created by Administrator on 30/1/2560.
+ */
+
+public class SellerStorageDayCoverViewHolder extends RecyclerView.ViewHolder {
+
+    public TextView sku;
+    public TextView storage;
+    public TextView dayCover;
+
+    public Object sellOutBar;
+    public TextView XBar;
+
+    public Button moreInfo;
+
+    public SellerStorageDayCoverViewHolder(View itemView) {
+        super(itemView);
+        sku = (TextView) itemView.findViewById(R.id.sku);
+        storage = (TextView) itemView.findViewById(R.id.storage);
+        dayCover = (TextView) itemView.findViewById(R.id.day_cover);
+
+        sellOutBar = itemView.findViewById(R.id.sell_out_bar);
+        XBar = (TextView) itemView.findViewById(R.id.XBar);
+
+        moreInfo = (Button) itemView.findViewById(R.id.more_info);
+    }
+}
Index: app/src/main/res/_A0_seller/drawable/icon_info_green.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/drawable/icon_info_green.xml	(revision )
+++ app/src/main/res/_A0_seller/drawable/icon_info_green.xml	(revision )
@@ -0,0 +1,9 @@
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="36dp"
+    android:height="36dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#FF249780"
+        android:pathData="M12,2C6.48,2 2,6.48 2,12s4.48,10 10,10 10,-4.48 10,-10S17.52,2 12,2zM13,17h-2v-6h2v6zM13,9h-2L11,7h2v2z"/>
+</vector>
Index: app/src/main/java/graph/DemoBase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/graph/DemoBase.java	(revision )
+++ app/src/main/java/graph/DemoBase.java	(revision )
@@ -0,0 +1,49 @@
+package graph;
+
+import android.graphics.Typeface;
+import android.os.Bundle;
+import android.support.annotation.Nullable;
+import android.support.v4.app.FragmentActivity;
+import android.widget.SeekBar;
+
+import com.example.administrator.myapplication.R;
+
+/**
+ * Created by Administrator on 7/12/2559.
+ */
+public abstract class DemoBase extends FragmentActivity {
+
+    protected String[] mMonths = new String[] {
+            "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Okt", "Nov", "Dec"
+    };
+
+    protected String[] mParties = new String[] {
+            "Party A", "Party B", "Party C", "Party D", "Party E", "Party F", "Party G", "Party H",
+            "Party I", "Party J", "Party K", "Party L", "Party M", "Party N", "Party O", "Party P",
+            "Party Q", "Party R", "Party S", "Party T", "Party U", "Party V", "Party W", "Party X",
+            "Party Y", "Party Z"
+    };
+
+    protected Typeface mTfRegular;
+    protected Typeface mTfLight;
+
+    @Override
+    protected void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        mTfRegular = Typeface.createFromAsset(getAssets(), "OpenSans-Regular.ttf");
+        mTfLight = Typeface.createFromAsset(getAssets(), "OpenSans-Light.ttf");
+    }
+
+    protected float getRandom(float range, float startsfrom) {
+        return (float) (Math.random() * range) + startsfrom;
+    }
+
+    @Override
+    public void onBackPressed() {
+        super.onBackPressed();
+        //overridePendingTransition(R.anim.move_left_in_activity, R.anim.move_right_out_activity);
+    }
+
+    public abstract void onProgressChanged(SeekBar seekBar, int progress, boolean fromUser);
+}
\ No newline at end of file
Index: app/src/main/res/layout/layout_recycler_view.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/layout_recycler_view.xml	(revision )
+++ app/src/main/res/layout/layout_recycler_view.xml	(revision )
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <android.support.v7.widget.RecyclerView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/recyclerViews">
+    </android.support.v7.widget.RecyclerView>
+
+</RelativeLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/administrator/myapplication/MyDialogFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/MyDialogFragment.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/MyDialogFragment.java	(revision )
@@ -0,0 +1,178 @@
+package com.example.administrator.myapplication;
+
+import android.annotation.SuppressLint;
+import android.app.Dialog;
+import android.app.FragmentManager;
+import android.app.TimePickerDialog;
+import android.content.DialogInterface;
+import android.os.Bundle;
+import android.os.Message;
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+import android.support.design.widget.CoordinatorLayout;
+import android.support.v4.app.DialogFragment;
+import android.app.Fragment;
+import android.support.v4.app.FragmentTabHost;
+import android.util.Log;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.Button;
+
+import com.google.android.gms.maps.GoogleMap;
+import com.google.android.gms.maps.model.Polyline;
+import com.google.android.gms.maps.model.PolylineOptions;
+import com.squareup.otto.Bus;
+import com.squareup.otto.Produce;
+import com.squareup.otto.Subscribe;
+
+/**
+ * Created by Administrator on 29/9/2559.
+ */
+public class MyDialogFragment extends DialogFragment {
+
+    private GoogleMap mMap;
+
+    private static final String TAG_TASK_FRAGMENT = "load_location_fragment";
+
+    public ParallelDataOne parallelDataOne;
+    public ParallelDataTwo parallelDataTwo;
+
+    private String method = "done";
+
+    private String usr_mac_address = "";
+
+    private LoadUserLocationFragment ulFragment;
+
+    public MyDialogFragment() {
+    }
+
+    @SuppressLint("ValidFragment")
+    public MyDialogFragment(GoogleMap temp, String usr_mac_address) {
+        this.mMap = temp;
+        this.usr_mac_address = usr_mac_address;
+    }
+
+    static MyDialogFragment newInstance() {
+        return new MyDialogFragment();
+    }
+
+    private FragmentTabHost mTabHost;
+
+    @Override
+    public void onCreate(@Nullable Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+        setRetainInstance(true);
+    }
+
+    @NonNull
+    @Override
+    public Dialog onCreateDialog(Bundle savedInstanceState) {
+        Dialog d = new Dialog(getContext());
+        return d;
+    }
+
+    @Override
+    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
+        View v = inflater.inflate(R.layout.dialog_timepick, container, false);
+
+        getDialog().setTitle("My Dialog Title");
+        mTabHost = (FragmentTabHost) v.findViewById(R.id.tabs);
+        mTabHost.setup(getActivity(), getChildFragmentManager(), R.id.realtabcontent);
+        Bundle b = new Bundle();
+        b.putString("key", "tab1");
+        mTabHost.addTab(mTabHost.newTabSpec("tab1").setIndicator("Start"), FragmentTab.class, b);
+
+        b = new Bundle();
+        b.putString("key", "tab2");
+        mTabHost.addTab(mTabHost.newTabSpec("tab2").setIndicator("Ending"), FragmentTab.class, b);
+
+        Button btnCancel = (Button) v.findViewById(R.id.cancel);
+        btnCancel.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+                getDialog().cancel();
+            }
+        });
+
+        Button btnDone = (Button) v.findViewById(R.id.done);
+        btnDone.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View v) {
+
+                Log.i("vvvvvv-time", "start:" + changeTime(MapsActivity.hourStart, MapsActivity.minuteStart)+" |stop:" +changeTime(MapsActivity.hourEning, MapsActivity.minuteEnding));
+
+                android.support.v4.app.FragmentManager fragmentManager = getFragmentManager();
+
+                // call services
+
+//                ulFragment = new LoadUserLocationFragment(mMap,
+//                        changeTime(MapsActivity.hourStart, MapsActivity.minuteStart),
+//                        changeTime(MapsActivity.hourEning, MapsActivity.minuteEnding),
+//                        "GROUP",
+//                        usr_mac_address,
+//                        getContext());
+//                fragmentManager.beginTransaction().add(ulFragment, TAG_TASK_FRAGMENT).commit();
+
+                getDialog().dismiss();
+            }
+        });
+
+        return v;
+    }
+
+    @Subscribe
+    public void getMessage(SearchUserData data) {
+        Log.v("vvvvvv", "In Dialog : "+data.getUsr_mac_address());
+    }
+
+    @Override
+    public void onResume() {
+        super.onResume();
+        BusProvider.getInstance().register(this);
+    }
+
+    @Override
+    public void onDestroyView() {
+        Dialog dialog = getDialog();
+
+        if ((dialog != null) && getRetainInstance())
+            dialog.setDismissMessage(null);
+
+        BusProvider.getInstance().unregister(this);
+
+        super.onDestroyView();
+        mTabHost = null;
+    }
+
+    @Override
+    public void onDismiss(DialogInterface dialog) {
+        super.onDismiss(dialog);
+    }
+
+    @Override
+    public void onCancel(DialogInterface dialog) {
+        super.onCancel(dialog);
+    }
+
+    java.util.Date dt = new java.util.Date();
+    java.text.SimpleDateFormat sdf =
+            new java.text.SimpleDateFormat("yyyy-MM-dd");
+
+    private String changeTime(int hour, int minute) {
+        String res = sdf.format(dt)+" ";
+        if(hour < 10) {
+            res = res + "0" + hour + ":";
+        } else {
+            res = res + hour + ":";
+        }
+
+        if(minute < 10 ) {
+            res = res + "0" + minute + ":00";
+        } else {
+            res = res + minute + ":00";
+        }
+
+        return res;
+    }
+}
Index: app/src/main/java/location/services/InterfaceGetMacAddress.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/location/services/InterfaceGetMacAddress.java	(revision )
+++ app/src/main/java/location/services/InterfaceGetMacAddress.java	(revision )
@@ -0,0 +1,19 @@
+package location.services;
+
+import java.util.List;
+
+import location.pojo.MacAddressPOJO;
+import retrofit2.http.GET;
+import retrofit2.http.Query;
+import rx.Observable;
+import seller.pojo.SellerBestSellerPOJO;
+
+/**
+ * Created by Administrator on 6/12/2559.
+ */
+public interface InterfaceGetMacAddress {
+
+    @GET("/~55160509/android/SimpleOrder/getmacaddress.php")
+    Observable<List<MacAddressPOJO>> getMacAddress ();
+
+}
Index: app/src/main/java/seller/item/ItemSellerTitle.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/seller/item/ItemSellerTitle.java	(revision )
+++ app/src/main/java/seller/item/ItemSellerTitle.java	(revision )
@@ -0,0 +1,75 @@
+package seller.item;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import seller.TypeSellerReport;
+import seller.titlebar.SellerOptionalDAO;
+import seller.titlebar.SellerRangeDAO;
+import seller.titlebar.SellerTitleDAO;
+
+/**
+ * Created by Administrator on 17/11/2559.
+ */
+public class ItemSellerTitle extends SellerBaseItem {
+    public List<SellerTitleDAO> listTitleDescription;
+    public List<SellerRangeDAO> listTitleRange;
+    public List<SellerOptionalDAO> listTitleOptional;
+
+    //public List<String> title;
+
+    public int settingsBackgroundColor;
+    public int settingsTint;
+
+    public ItemSellerTitle() {
+        super(TypeSellerReport.TYPE_SELLER_TITLE);
+    }
+
+    public List<SellerTitleDAO> getListTitleDescription() {
+        return listTitleDescription;
+    }
+
+    public void setListTitleDescription(List<SellerTitleDAO> listOptionValue) {
+        this.listTitleDescription = listOptionValue;
+    }
+
+    public List<SellerRangeDAO> getListTitleRange() {
+        return listTitleRange;
+    }
+
+    public void setListTitleRange(List<SellerRangeDAO> listTitleRange) {
+        this.listTitleRange = listTitleRange;
+    }
+
+    public List<SellerOptionalDAO> getListTitleOptional() {
+        return listTitleOptional;
+    }
+
+    public void setListTitleOptional(List<SellerOptionalDAO> listTitleOptional) {
+        this.listTitleOptional = listTitleOptional;
+    }
+
+    public int getSettingsBackgroundColor() {
+        return settingsBackgroundColor;
+    }
+
+    public void setSettingsBackgroundColor(int settingsBackgroundColor) {
+        this.settingsBackgroundColor = settingsBackgroundColor;
+    }
+
+    public int getSettingsTint() {
+        return settingsTint;
+    }
+
+    public void setSettingsTint(int settingsTint) {
+        this.settingsTint = settingsTint;
+    }
+
+    public List<String> getTitleList() {
+        List<String> ls = new ArrayList<>();
+        for(SellerTitleDAO temp : this.listTitleDescription) {
+            ls.add(temp.getTitle());
+        }
+        return ls;
+    }
+}
Index: app/src/main/java/user/user/viewholder/ViewHolderSection.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/user/user/viewholder/ViewHolderSection.java	(revision )
+++ app/src/main/java/user/user/viewholder/ViewHolderSection.java	(revision )
@@ -0,0 +1,24 @@
+package user.user.viewholder;
+
+import android.support.v7.widget.RecyclerView;
+import android.view.View;
+import android.widget.LinearLayout;
+import android.widget.TextView;
+
+import com.example.administrator.myapplication.R;
+
+/**
+ * Created by Administrator on 15/11/2559.
+ */
+public class ViewHolderSection extends RecyclerView.ViewHolder {
+
+    public TextView sectionTextView;
+
+    public LinearLayout sectionBar;
+
+    public ViewHolderSection(View itemView) {
+        super(itemView);
+        sectionTextView = (TextView) itemView.findViewById(R.id.sectionTextView);
+        sectionBar = (LinearLayout) itemView.findViewById(R.id.sectionBar);
+    }
+}
\ No newline at end of file
Index: app/src/main/res/_A0_seller/layout/view_seller_title.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/view_seller_title.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/view_seller_title.xml	(revision )
@@ -0,0 +1,107 @@
+<?xml version="1.0" encoding="utf-8"?>
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="horizontal"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:orientation="horizontal"
+
+        android:paddingTop="@dimen/round_padding"
+        android:paddingBottom="@dimen/round_padding"
+        android:paddingLeft="12dp"
+
+        android:layout_gravity="center_horizontal|center_vertical"
+
+        android:background="@color/honest_green">
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+
+            android:layout_gravity="center_vertical"
+            android:gravity="center_vertical"
+
+            android:orientation="vertical">
+
+            <ImageView
+                android:layout_width="36dp"
+                android:layout_height="36dp"
+                android:src="@drawable/ic_equalizer_black_24dp"
+
+                android:layout_gravity="center_horizontal|center"
+                android:id="@+id/settings"
+                android:background="@drawable/icon_rounded"
+                android:padding="@dimen/round_padding"/>
+
+        </LinearLayout>
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="match_parent"
+
+            android:layout_gravity="center_vertical"
+            android:gravity="center_vertical"
+
+            android:layout_marginStart="14dp"
+
+            android:orientation="vertical">
+
+            <!--<ImageView-->
+                <!--android:layout_width="36dp"-->
+                <!--android:layout_height="36dp"-->
+                <!--android:src="@drawable/icon_date_range_rounded"-->
+
+                <!--android:layout_gravity="center_horizontal|center"-->
+                <!--android:id="@+id/dateRange" />-->
+
+        </LinearLayout>
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:layout_marginStart="@dimen/double_round"
+            android:layout_marginEnd="@dimen/round_padding"
+            android:orientation="vertical">
+
+            <!--<Spinner-->
+                <!--android:layout_width="match_parent"-->
+                <!--android:layout_height="match_parent"-->
+                <!--android:gravity="center"-->
+
+                <!--android:padding="@dimen/round_padding"-->
+
+                <!--android:background="@color/dark_honest_green"-->
+
+                <!--android:id="@+id/option" />-->
+
+            <autocomplete.InstantAutocomplete
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+
+                android:layout_gravity="center_horizontal"
+                android:gravity="center"
+
+                android:padding="@dimen/round_padding"
+
+                android:focusable="false"
+                android:focusableInTouchMode="true"
+
+                android:id="@+id/option"
+
+                android:ellipsize="start"
+                android:maxLines="1"
+                android:scrollHorizontally="true"
+                android:inputType="text"
+
+                android:hint="ประเภทของรายงาน"
+                android:drawableEnd="@drawable/ic_arrow_drop_down_black"
+
+                android:textSize="18sp"
+                android:textColor="@color/angel_white"
+
+                android:background="@color/dark_honest_green"/>
+
+        </LinearLayout>
+    </LinearLayout>
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/res/_A0_location/layout/dialog_location_option.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_location/layout/dialog_location_option.xml	(revision )
+++ app/src/main/res/_A0_location/layout/dialog_location_option.xml	(revision )
@@ -0,0 +1,100 @@
+<LinearLayout
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:orientation="vertical"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="@color/angel_white">
+
+    <LinearLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="horizontal"
+        android:background="@color/dark_honest_green"
+
+        android:paddingLeft="@dimen/round_padding"
+        android:paddingRight="@dimen/round_padding"
+
+        android:paddingTop="@dimen/title_expanded"
+        android:paddingBottom="@dimen/title_expanded">
+
+        <ImageView
+            android:layout_width="36dp"
+            android:layout_height="match_parent"
+
+            android:layout_marginLeft="@dimen/round_padding"
+            android:layout_marginRight="@dimen/round_padding"
+
+            android:id="@+id/dialog_close"
+            android:src="@drawable/ic_arrow_back_white_24dp"
+            android:layout_gravity="center_vertical"/>
+
+        <TextView
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:id="@+id/dialog_header"
+            android:text="......"
+            android:textColor="@color/angel_white"
+            android:textSize="20sp"
+            android:gravity="center|left"
+            android:padding="@dimen/round_padding"
+            />
+    </LinearLayout>
+
+    <android.support.v4.widget.NestedScrollView
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:id="@+id/sellerNestedScrollView">
+
+        <LinearLayout
+            android:layout_width="match_parent"
+            android:layout_height="match_parent"
+            android:id="@+id/dialog_content"
+            android:padding="@dimen/round_padding"
+            android:orientation="vertical"
+            android:background="@color/little_light_gray">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:background="@color/angel_white"
+                android:padding="@dimen/round_padding"
+                android:orientation="horizontal"
+
+                android:id="@+id/layout_range_picked">
+
+                <ImageView
+                    android:layout_width="36dp"
+                    android:layout_height="match_parent"
+                    android:src="@drawable/ic_date_range_green_48dp"
+                    android:layout_gravity="left|center"/>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="match_parent"
+
+                    android:orientation="vertical">
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="ระบุขอบเขตเวลา"
+                        android:textSize="18sp"
+                        android:textColor="@color/jet_black"
+                        android:layout_gravity="right"/>
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:text="กำหนดช่วงของเวลาเพื่อแสดงเส้นทางการเดินทาง"
+                        android:textColor="@color/space_gray"
+                        android:layout_gravity="right"/>
+
+                </LinearLayout>
+            </LinearLayout>
+
+
+        </LinearLayout>
+
+    </android.support.v4.widget.NestedScrollView>
+
+</LinearLayout>
\ No newline at end of file
Index: app/src/main/java/com/example/administrator/myapplication/DataProvider.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/DataProvider.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/DataProvider.java	(revision )
@@ -0,0 +1,8 @@
+package com.example.administrator.myapplication;
+
+/**
+ * Created by Administrator on 18/10/2559.
+ */
+public final class DataProvider {
+    public static SearchUserData searchUserData = null;
+}
Index: app/src/main/res/_A0_seller/layout/spinner_dropdown_item.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/_A0_seller/layout/spinner_dropdown_item.xml	(revision )
+++ app/src/main/res/_A0_seller/layout/spinner_dropdown_item.xml	(revision )
@@ -0,0 +1,14 @@
+<?xml version="1.0" encoding="utf-8"?>
+
+<TextView
+    xmlns:android="http://schemas.android.com/apk/res/android"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:textSize="18sp"
+    android:gravity="left"
+
+    android:background="@color/honest_green"
+    android:textColor="@color/angel_white"
+    android:text="Spinner Item"
+
+    android:padding="10dp" />
\ No newline at end of file
Index: app/src/main/java/com/example/administrator/myapplication/SimplyPieChartActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/administrator/myapplication/SimplyPieChartActivity.java	(revision )
+++ app/src/main/java/com/example/administrator/myapplication/SimplyPieChartActivity.java	(revision )
@@ -0,0 +1,121 @@
+package com.example.administrator.myapplication;
+
+import android.graphics.Color;
+import android.support.v7.app.AppCompatActivity;
+import android.os.Bundle;
+import android.view.WindowManager;
+
+import com.github.mikephil.charting.charts.PieChart;
+import com.github.mikephil.charting.data.PieData;
+import com.github.mikephil.charting.data.PieDataSet;
+import com.github.mikephil.charting.data.PieEntry;
+import com.github.mikephil.charting.formatter.PercentFormatter;
+import com.github.mikephil.charting.utils.ColorTemplate;
+
+import java.util.ArrayList;
+
+public class SimplyPieChartActivity extends AppCompatActivity {
+
+
+    private PieChart mChart;
+
+    protected String[] mParties = new String[] {
+            "Party A", "Party B", "Party C", "Party D", "Party E", "Party F", "Party G", "Party H",
+            "Party I", "Party J", "Party K", "Party L", "Party M", "Party N", "Party O", "Party P",
+            "Party Q", "Party R", "Party S", "Party T", "Party U", "Party V", "Party W", "Party X",
+            "Party Y", "Party Z"
+    };
+
+    @Override
+    protected void onCreate(Bundle savedInstanceState) {
+        super.onCreate(savedInstanceState);
+
+        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN,
+                WindowManager.LayoutParams.FLAG_FULLSCREEN);
+
+        setContentView(R.layout.activity_simply_pie_chart);
+
+        mChart = (PieChart) findViewById(R.id.chart1);
+        mChart.setUsePercentValues(true);
+        mChart.setEnabled(false);
+        mChart.setExtraOffsets(5, 10, 5, 5);
+
+        mChart.setDragDecelerationFrictionCoef(0.95f);
+
+        //mChart.setCenterTextTypeface(mTfLight);
+        //mChart.setCenterText(generateCenterSpannableText());
+
+        mChart.setDrawHoleEnabled(true);
+        mChart.setHoleColor(Color.WHITE);
+
+        mChart.setTransparentCircleColor(Color.WHITE);
+        mChart.setTransparentCircleAlpha(110);
+
+        mChart.setHoleRadius(58f);
+        mChart.setTransparentCircleRadius(61f);
+
+        mChart.setDrawCenterText(true);
+
+        mChart.setRotationAngle(0);
+        // enable rotation of the chart by touch
+        mChart.setRotationEnabled(true);
+        mChart.setHighlightPerTapEnabled(true);
+
+        setData(4, 100);
+
+       // mChart.setOnChartValueSelectedListener(this);
+    }
+
+    private void setData(int count, float range) {
+
+        float mult = range;
+
+        ArrayList<PieEntry> entries = new ArrayList<PieEntry>();
+
+        // NOTE: The order of the entries when being added to the entries array determines their position around the center of
+        // the chart.
+        for (int i = 0; i < count ; i++) {
+            entries.add(new PieEntry((float) ((Math.random() * mult) + mult / 5), mParties[i % mParties.length]));
+        }
+
+        PieDataSet dataSet = new PieDataSet(entries, "Election Results");
+        dataSet.setSliceSpace(3f);
+        dataSet.setSelectionShift(5f);
+
+        // add a lot of colors
+
+        ArrayList<Integer> colors = new ArrayList<Integer>();
+
+        for (int c : ColorTemplate.VORDIPLOM_COLORS)
+            colors.add(c);
+
+        for (int c : ColorTemplate.JOYFUL_COLORS)
+            colors.add(c);
+
+        for (int c : ColorTemplate.COLORFUL_COLORS)
+            colors.add(c);
+
+        for (int c : ColorTemplate.LIBERTY_COLORS)
+            colors.add(c);
+
+        for (int c : ColorTemplate.PASTEL_COLORS)
+            colors.add(c);
+
+        colors.add(ColorTemplate.getHoloBlue());
+
+        dataSet.setColors(colors);
+        //dataSet.setSelectionShift(0f);
+
+        PieData data = new PieData(dataSet);
+        data.setValueFormatter(new PercentFormatter());
+        data.setValueTextSize(11f);
+        data.setValueTextColor(Color.WHITE);
+        //data.setValueTypeface(mTfLight);
+        mChart.setData(data);
+
+        // undo all highlights
+        mChart.highlightValues(null);
+
+        mChart.invalidate();
+    }
+}
Index: app/src/main/java/user/user/item/ItemMenu.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/user/user/item/ItemMenu.java	(revision )
+++ app/src/main/java/user/user/item/ItemMenu.java	(revision )
@@ -0,0 +1,90 @@
+package user.user.item;
+
+import android.content.Intent;
+
+import user.UserBaseItem;
+
+/**
+ * Created by Administrator on 16/11/2559.
+ */
+public class ItemMenu extends UserBaseItem {
+    public String menuName;
+
+    public String detailName;
+
+    public int imageSource;
+    public int imageResourceColor = 0;
+
+    public int menuMethod = 0;
+
+    public Class<?> initial = null;
+    public Class<?> target = null;
+
+    public Intent intent = null;
+
+    public ItemMenu() {
+        super.setViewType(1);
+    }
+
+    public int getMenuMethod() {
+        return menuMethod;
+    }
+
+    public void setMenuMethod(int menuMethod) {
+        this.menuMethod = menuMethod;
+    }
+
+    public String getMenuName() {
+        return menuName;
+    }
+
+    public void setMenuName(String menuName) {
+        this.menuName = menuName;
+    }
+
+    public String getDetailName() {
+        return detailName;
+    }
+
+    public void setDetailName(String detailName) {
+        this.detailName = detailName;
+    }
+
+    public int getImageSource() {
+        return imageSource;
+    }
+
+    public void setImageSource(int imageSource) {
+        this.imageSource = imageSource;
+    }
+
+    public int getImageResourceColor() {
+        return imageResourceColor;
+    }
+
+    public void setImageResourceColor(int imageResourceColor) {
+        this.imageResourceColor = imageResourceColor;
+    }
+
+    public Class<?> getInitial() {
+        return initial;
+    }
+
+    public Class<?> getTarget() {
+        return target;
+    }
+
+    public void setIntent(Class<?> initial, Class<?> target) {
+        this.initial = initial;
+        this.target = target;
+    }
+
+    public Intent getIntent() {
+        return intent;
+    }
+
+    public void setIntent(Intent intent) {
+        this.intent = intent;
+    }
+
+}
Index: app/src/main/java/log/LogIndentify.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/log/LogIndentify.java	(revision )
+++ app/src/main/java/log/LogIndentify.java	(revision )
@@ -0,0 +1,11 @@
+package log;
+
+import com.example.administrator.myapplication.R;
+
+/**
+ * Created by Administrator on 30/1/2560.
+ */
+
+public class LogIndentify {
+    public static String [] _LOG_RETROFIT_ERROR_ = {String.valueOf(716), "Retrofit got error in observation."};
+}
Index: app/src/main/res/layout/activity_simply_graph.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/activity_simply_graph.xml	(revision )
+++ app/src/main/res/layout/activity_simply_graph.xml	(revision )
@@ -0,0 +1,12 @@
+<?xml version="1.0" encoding="utf-8"?>
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:tools="http://schemas.android.com/tools"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:paddingBottom="@dimen/activity_vertical_margin"
+    android:paddingLeft="@dimen/activity_horizontal_margin"
+    android:paddingRight="@dimen/activity_horizontal_margin"
+    android:paddingTop="@dimen/activity_vertical_margin"
+    tools:context="com.example.administrator.myapplication.SimplyGraph">
+
+</RelativeLayout>
